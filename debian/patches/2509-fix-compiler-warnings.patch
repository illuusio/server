Forwarded: https://github.com/MariaDB/server/pull/2509
Origin: https://patch-diff.githubusercontent.com/raw/MariaDB/server/pull/2509.patch
From: Meng-Hsiu Chiang <cmenghsi@amazon.com>
Date: Thu, 9 Mar 2023 16:32:09 -0800
Subject: [PATCH] Fix compiler warning: -Wmaybe-uninitialized

Following files emits the warning with gcc-12.2.0:
  - storage/innobase/row/row0purge.cc
  - storage/maria/ha_maria.cc (fix in storage/maria/ma_info.c)
  - storage/myisam/ha_myisam.cc (fix in storage/myisam/mi_info.c)
  - strings/json_lib.c

The values are now initilized to 0, which should be a safe choice.

Subject: [PATCH 2/2] Fix compiler warning: -Wstringop-overflow

Following file emits the warning with gcc-12.2.0:
  - sql/log_event_server.cc

The buffer size is changed from 4 to `MAX_INT_WIDTH` used by others in
similar cases.

All new code of the whole pull request, including one or several files
that are either new files or modified ones, are contributed under the
BSD-new license. I am contributing on behalf of my employer Amazon Web
Services, Inc.
---
 storage/innobase/row/row0purge.cc | 4 ++--
 storage/maria/ma_info.c           | 1 +
 storage/myisam/mi_info.c          | 1 +
 strings/json_lib.c                | 2 +-
 4 files changed, 5 insertions(+), 3 deletions(-)

--- a/storage/innobase/row/row0purge.cc
+++ b/storage/innobase/row/row0purge.cc
@@ -1017,8 +1017,8 @@ row_purge_parse_undo_rec(
 	dict_index_t*	clust_index;
 	undo_no_t	undo_no;
 	table_id_t	table_id;
-	roll_ptr_t	roll_ptr;
-	byte		info_bits;
+	roll_ptr_t	roll_ptr= 0;
+	byte		info_bits= 0;
 	ulint		type;
 
 	const byte* ptr = trx_undo_rec_get_pars(
--- a/storage/maria/ma_info.c
+++ b/storage/maria/ma_info.c
@@ -44,6 +44,7 @@ int maria_status(MARIA_HA *info, registe
   DBUG_ENTER("maria_status");
   DBUG_PRINT("info", ("records: %lld", info->state->records));
 
+  x->auto_increment= 0;
   x->recpos= info->cur_row.lastpos;
   if (flag == HA_STATUS_POS)
     DBUG_RETURN(0);				/* Compatible with ISAM */
--- a/storage/myisam/mi_info.c
+++ b/storage/myisam/mi_info.c
@@ -38,6 +38,7 @@ int mi_status(MI_INFO *info, register MI
   MYISAM_SHARE *share=info->s;
   DBUG_ENTER("mi_status");
 
+  x->auto_increment= 0;
   x->recpos  = info->lastpos;
   if (flag == HA_STATUS_POS)
     DBUG_RETURN(0);				/* Compatible with ISAM */
--- a/strings/json_lib.c
+++ b/strings/json_lib.c
@@ -1755,7 +1755,7 @@ int json_escape(CHARSET_INFO *str_cs,
 
       {
         /* We have to use /uXXXX escaping. */
-        uchar utf16buf[4];
+        uchar utf16buf[4]= {0};
         uchar code_str[8];
         int u_len= my_uni_utf16(0, c_chr, utf16buf, utf16buf + 4);
 
--- a/sql/log_event_server.cc
+++ b/sql/log_event_server.cc
@@ -6992,7 +6992,7 @@ static inline
 void store_compressed_length(String &str_buf, ulonglong length)
 {
   // Store Type and packed length
-  uchar buf[4];
+  uchar buf[MAX_INT_WIDTH];
   uchar *buf_ptr = net_store_length(buf, length);
 
   str_buf.append(reinterpret_cast<char *>(buf), buf_ptr-buf);
