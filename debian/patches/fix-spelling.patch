Forwarded: https://github.com/MariaDB/server/pull/1719
Forwarded: https://github.com/mariadb-corporation/libmarias3/pull/102
Forwarded: https://github.com/codership/wsrep-API/pull/49
Forwarded: https://github.com/codership/wsrep-lib/pull/122
Forwarded: https://github.com/facebook/rocksdb/pull/7785
Author: Otto Kekäläinen <otto@debian.org>
Subject: Fix various spelling errors still found in code
  Reseting -> Resetting
  Unknow -> Unknown
  capabilites -> capabilities
  choosen -> chosen
  direcory -> directory
  informations -> information
  openned -> opened
  refered -> referred
  to access -> one to access
  missmatch -> mismatch
  succesfully -> successfully
  dont -> don't

--- a/storage/federated/ha_federated.cc
+++ b/storage/federated/ha_federated.cc
@@ -3394,7 +3394,7 @@ maria_declare_plugin(federated)
   &federated_storage_engine,
   "FEDERATED",
   "Patrick Galbraith and Brian Aker, MySQL AB",
-  "Allows to access tables on other MariaDB servers",
+  "Allows accessing tables on other MariaDB servers",
   PLUGIN_LICENSE_GPL,
   federated_db_init, /* Plugin Init */
   federated_done, /* Plugin Deinit */
--- a/storage/federatedx/ha_federatedx.cc
+++ b/storage/federatedx/ha_federatedx.cc
@@ -3715,7 +3715,7 @@ maria_declare_plugin(federatedx)
   &federatedx_storage_engine,
   "FEDERATED",
   "Patrick Galbraith",
-  "Allows to access tables on other MariaDB servers, supports transactions and more",
+  "Allows one to access tables on other MariaDB servers, supports transactions and more",
   PLUGIN_LICENSE_GPL,
   federatedx_db_init, /* Plugin Init */
   federatedx_done, /* Plugin Deinit */
@@ -3726,4 +3726,3 @@ maria_declare_plugin(federatedx)
   MariaDB_PLUGIN_MATURITY_STABLE /* maturity */
 }
 maria_declare_plugin_end;
-
--- a/storage/innobase/handler/ha_innodb.cc
+++ b/storage/innobase/handler/ha_innodb.cc
@@ -19909,7 +19909,7 @@ static MYSQL_SYSVAR_UINT(simulate_comp_f
 static MYSQL_SYSVAR_BOOL(force_primary_key,
   srv_force_primary_key,
   PLUGIN_VAR_OPCMDARG,
-  "Do not allow to create table without primary key (off by default)",
+  "Do not allow creating a table without primary key (off by default)",
   NULL, NULL, FALSE);
 
 static const char *page_compression_algorithms[]= { "none", "zlib", "lz4", "lzo", "lzma", "bzip2", "snappy", 0 };
--- a/storage/maria/libmarias3/src/xml.c
+++ b/storage/maria/libmarias3/src/xml.c
@@ -782,7 +782,7 @@ static struct xml_node* xml_parse_node(s
 	/* Close tag has to match open tag
 	 */
 	if (!xml_string_equals(tag_open, tag_close)) {
-		xml_parser_error(parser, NO_CHARACTER, "xml_parse_node::tag missmatch");
+		xml_parser_error(parser, NO_CHARACTER, "xml_parse_node::tag mismatch");
 		goto exit_failure;
 	}
 
--- a/storage/rocksdb/rocksdb/db/external_sst_file_ingestion_job.cc
+++ b/storage/rocksdb/rocksdb/db/external_sst_file_ingestion_job.cc
@@ -46,7 +46,7 @@ Status ExternalSstFileIngestionJob::Prep
             TablePropertiesCollectorFactory::Context::kUnknownColumnFamily &&
         f.cf_id != cfd_->GetID()) {
       return Status::InvalidArgument(
-          "External file column family id dont match");
+          "External file column family id don't match");
     }
   }
 
@@ -646,7 +646,7 @@ Status ExternalSstFileIngestionJob::Assi
     return Status::InvalidArgument("Global seqno is required, but disabled");
   } else if (file_to_ingest->global_seqno_offset == 0) {
     return Status::InvalidArgument(
-        "Trying to set global seqno for a file that dont have a global seqno "
+        "Trying to set global seqno for a file that don't have a global seqno "
         "field");
   }
 
--- a/wsrep-lib/src/server_state.cpp
+++ b/wsrep-lib/src/server_state.cpp
@@ -753,7 +753,7 @@ void wsrep::server_state::sst_received(w
                  * logged view. */
                 std::ostringstream msg;
                 msg << "SST script passed bogus GTID: " << gtid
-                    << ". Preceeding view GTID: " << v.state_id();
+                    << ". Preceding view GTID: " << v.state_id();
                 throw wsrep::runtime_error(msg.str());
             }
 
--- a/wsrep-lib/src/transaction.cpp
+++ b/wsrep-lib/src/transaction.cpp
@@ -962,7 +962,7 @@ bool wsrep::transaction::bf_abort(
                 WSREP_LOG_DEBUG(client_state_.debug_log_level(),
                                 wsrep::log::debug_level_transaction,
                                 "Seqno " << bf_seqno
-                                << " succesfully BF aborted " << id_
+                                << " successfully BF aborted " << id_
                                 << " victim_seqno " << victim_seqno);
                 bf_abort_state_ = state_at_enter;
                 state(lock, s_must_abort);
--- a/man/aria_chk.1
+++ b/man/aria_chk.1
@@ -155,7 +155,7 @@ Change the collation used by the index.
 Faster repair by not modifying the data file.
 One can give a second '\-q' to force aria_chk to
 modify the original datafile in case of duplicate keys.
-NOTE: Tables where the data file is currupted can't be
+NOTE: Tables where the data file is corrupted can't be
 fixed with this option.
 .TP
 \fB\-u\fR, \fB\-\-unpack\fR
--- a/man/aria_read_log.1
+++ b/man/aria_read_log.1
@@ -60,7 +60,7 @@ Start applying from last checkpoint
 Print less information during apply/undo phase
 .TP
 \fB\-T\fR, \fB\-\-tables\-to\-redo\fR=\fIname\fR
-List of tables sepearated with , that we should apply
+List of tables separated with , that we should apply
 REDO on. Use this if you only want to recover some tables
 .TP
 \fB\-t\fR, \fB\-\-tmpdir\fR=\fIname\fR
--- a/mysql-test/suite/innodb/r/innodb_bug34300.result
+++ b/mysql-test/suite/innodb/r/innodb_bug34300.result
@@ -1,5 +1,5 @@
 #
-# Bug#34300 Tinyblob & tinytext fields currupted after export/import and alter in 5.1
+# Bug#34300 Tinyblob & tinytext fields corrupted after export/import and alter in 5.1
 #
 SET @@global.max_allowed_packet=16777216;
 connect  newconn, localhost, root,,;
--- a/mysql-test/suite/innodb/r/instant_alter_charset.result
+++ b/mysql-test/suite/innodb/r/instant_alter_charset.result
@@ -1847,7 +1847,7 @@ HEX(a)
 0061
 DROP TABLE t1;
 #
-# MDEV-19285 INSTANT ALTER from ascii_general_ci to latin1_general_ci produces currupt data
+# MDEV-19285 INSTANT ALTER from ascii_general_ci to latin1_general_ci produces corrupt data
 #
 CREATE TABLE t1 (a VARCHAR(10) CHARACTER SET ascii COLLATE ascii_general_ci, PRIMARY KEY(a)) ENGINE=InnoDB;
 INSERT INTO t1 VALUES ('a'),(0xC0),('b');
--- a/mysql-test/suite/innodb/t/innodb_bug34300.test
+++ b/mysql-test/suite/innodb/t/innodb_bug34300.test
@@ -1,5 +1,5 @@
 --echo #
---echo # Bug#34300 Tinyblob & tinytext fields currupted after export/import and alter in 5.1
+--echo # Bug#34300 Tinyblob & tinytext fields corrupted after export/import and alter in 5.1
 --echo #
 
 -- source include/have_innodb.inc
--- a/mysql-test/suite/innodb/t/instant_alter_charset.test
+++ b/mysql-test/suite/innodb/t/instant_alter_charset.test
@@ -640,7 +640,7 @@ SELECT HEX(a) FROM t1;
 DROP TABLE t1;
 
 --echo #
---echo # MDEV-19285 INSTANT ALTER from ascii_general_ci to latin1_general_ci produces currupt data
+--echo # MDEV-19285 INSTANT ALTER from ascii_general_ci to latin1_general_ci produces corrupt data
 --echo #
 
 CREATE TABLE t1 (a VARCHAR(10) CHARACTER SET ascii COLLATE ascii_general_ci, PRIMARY KEY(a)) ENGINE=InnoDB;
--- a/sql/sql_repl.cc
+++ b/sql/sql_repl.cc
@@ -1958,7 +1958,7 @@ send_event_to_slave(binlog_send_info *in
     {
       info->error= ER_MASTER_FATAL_ERROR_READING_BINLOG;
       return "Failed to replace GTID event with backwards-compatible event: "
-             "currupt event.";
+             "corrupt event.";
     }
     if (!need_dummy)
       return NULL;
--- a/storage/maria/aria_chk.c
+++ b/storage/maria/aria_chk.c
@@ -586,7 +586,7 @@ Recover (repair)/ options (When using '-
   -q, --quick         Faster repair by not modifying the data file.\n\
                       One can give a second '-q' to force aria_chk to\n\
 		      modify the original datafile in case of duplicate keys.\n\
-		      NOTE: Tables where the data file is currupted can't be\n\
+		      NOTE: Tables where the data file is corrupted can't be\n\
 		      fixed with this option.\n\
   -u, --unpack        Unpack file packed with ariapack.\n\
 ");
@@ -1359,7 +1359,7 @@ static int maria_chk(HA_CHECK *param, ch
       error= maria_zerofill(param, info, filename);
     if (!error)
     {
-      DBUG_PRINT("info", ("Reseting crashed state"));
+      DBUG_PRINT("info", ("Resetting crashed state"));
       share->state.changed&= ~(STATE_CHANGED | STATE_CRASHED_FLAGS |
                                STATE_IN_REPAIR);
     }
@@ -1423,7 +1423,7 @@ static int maria_chk(HA_CHECK *param, ch
            share->state.open_count != 0)
           && (param->testflag & T_UPDATE_STATE))
         info->update|=HA_STATE_CHANGED | HA_STATE_ROW_CHANGED;
-      DBUG_PRINT("info", ("Reseting crashed state"));
+      DBUG_PRINT("info", ("Resetting crashed state"));
       share->state.changed&= ~(STATE_CHANGED | STATE_CRASHED_FLAGS |
                                STATE_IN_REPAIR);
     }
--- a/storage/maria/aria_read_log.c
+++ b/storage/maria/aria_read_log.c
@@ -269,7 +269,7 @@ static struct my_option my_long_options[
    &opt_silent, &opt_silent, 0,
    GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
   {"tables-to-redo", 'T',
-   "List of tables sepearated with , that we should apply REDO on. Use this if you only want to recover some tables",
+   "List of tables separated with , that we should apply REDO on. Use this if you only want to recover some tables",
    0, 0, 0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
   {"tmpdir", 't', "Path for temporary files. Multiple paths can be specified, "
    "separated by "
--- a/storage/myisam/myisamchk.c
+++ b/storage/myisam/myisamchk.c
@@ -429,7 +429,7 @@ static void usage(void)
   -q, --quick         Faster repair by not modifying the data file.\n\
                       One can give a second '-q' to force myisamchk to\n\
 		      modify the original datafile in case of duplicate keys.\n\
-		      NOTE: Tables where the data file is currupted can't be\n\
+		      NOTE: Tables where the data file is corrupted can't be\n\
 		      fixed with this option.\n\
   -u, --unpack        Unpack file packed with myisampack.\n\
 ");
--- a/tests/mysql_client_test.c
+++ b/tests/mysql_client_test.c
@@ -18883,7 +18883,7 @@ static void test_bug58036()
   if (!mysql_change_user(conn, opt_user, opt_password, NULL))
   {
     if (!opt_silent)
-      printf("mysql_change_user() succedded, error expected!");
+      printf("mysql_change_user() succeeded, error expected!");
     mysql_close(conn);
     DIE("");
   }
--- a/mysql-test/include/index_merge1.inc
+++ b/mysql-test/include/index_merge1.inc
@@ -374,7 +374,7 @@ drop table t1;
 if ($merge_table_support)
 {
 #
-# BUG#17314: Index_merge/intersection not choosen by the optimizer for MERGE tables
+# BUG#17314: Index_merge/intersection not chosen by the optimizer for MERGE tables
 #
 create table t1 (
   a int, b int,
--- a/mysql-test/include/ps_conv.inc
+++ b/mysql-test/include/ps_conv.inc
@@ -157,7 +157,7 @@ select @arg01:=  c1, @arg02:=  c2, @arg0
        @arg25:= c25, @arg26:= c26, @arg27:= c27, @arg28:= c28,
        @arg29:= c29, @arg30:= c30, @arg31:= c31, @arg32:= c32
 from t9 where c1= 1 ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -171,7 +171,7 @@ select @arg01:=  c1, @arg02:=  c2, @arg0
        @arg25:= c25, @arg26:= c26, @arg27:= c27, @arg28:= c28,
        @arg29:= c29, @arg30:= c30, @arg31:= c31, @arg32:= c32
 from t9 where c1= 0 ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -188,14 +188,14 @@ prepare stmt1 from "select
 from t9 where c1= ?" ;
 set @my_key= 1 ;
 execute stmt1 using @my_key ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
 # now the same procedure with the record containing so many NULLs
 set @my_key= 0 ;
 execute stmt1 using @my_key ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -215,7 +215,7 @@ into @arg01, @arg02, @arg03, @arg04, @ar
      @arg17, @arg18, @arg19, @arg20, @arg21, @arg22, @arg23, @arg24,
      @arg25, @arg26, @arg27, @arg28, @arg29, @arg30, @arg31, @arg32
 from t9 where c1= 1 ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -228,7 +228,7 @@ into @arg01, @arg02, @arg03, @arg04, @ar
      @arg17, @arg18, @arg19, @arg20, @arg21, @arg22, @arg23, @arg24,
      @arg25, @arg26, @arg27, @arg28, @arg29, @arg30, @arg31, @arg32
 from t9 where c1= 0 ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -243,7 +243,7 @@ into @arg01, @arg02, @arg03, @arg04, @ar
 from t9 where c1= ?" ;
 set @my_key= 1 ;
 execute stmt1 using @my_key ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
@@ -251,7 +251,7 @@ execute full_info ;
 # Bug#5034: prepared "select 1 into @arg15", second execute crashes server
 set @my_key= 0 ;
 execute stmt1 using @my_key ;
-# get as much informations about the parameters as possible
+# get as much information about the parameters as possible
 --enable_metadata
 execute full_info ;
 --disable_metadata
--- a/mysql-test/main/partition.test
+++ b/mysql-test/main/partition.test
@@ -1054,7 +1054,7 @@ drop table t1;
 #
 # Bug #17754 Change to explicit removal of partitioning scheme
 # Also added a number of tests to ensure that proper engine is
-# choosen in all kinds of scenarios.
+# chosen in all kinds of scenarios.
 #
 
 create table t1 (a int)
--- a/mysql-test/main/ps_1general.test
+++ b/mysql-test/main/ps_1general.test
@@ -60,7 +60,7 @@ select * from t1 where a = @var ;
 
 # 3. DEALLOCATE PREPARE stmt_name;
 #
-#    Send the server the order to drop the parse informations.
+#    Send the server the order to drop the parse information.
 #    The server will reply with "Query Ok" or an error message.
 DEALLOCATE PREPARE stmt ;
 
--- a/mysql-test/main/sp-error.result
+++ b/mysql-test/main/sp-error.result
@@ -2242,7 +2242,7 @@ H2
 Warnings:
 Warning	1642	Unhandled user-defined warning condition
 
-# -- Check that handlers are choosen properly in case of deep stack and
+# -- Check that handlers are chosen properly in case of deep stack and
 # -- nested SQL-blocks.
 
 CREATE PROCEDURE p10()
--- a/mysql-test/main/sp-error.test
+++ b/mysql-test/main/sp-error.test
@@ -3162,7 +3162,7 @@ END|
 CALL p9()|
 
 --echo
---echo # -- Check that handlers are choosen properly in case of deep stack and
+--echo # -- Check that handlers are chosen properly in case of deep stack and
 --echo # -- nested SQL-blocks.
 --echo
 
--- a/mysql-test/suite/parts/inc/partition.pre
+++ b/mysql-test/suite/parts/inc/partition.pre
@@ -179,7 +179,7 @@ if (0)
 #              That means statements which
 #              - are most time of low interest and do auxiliary stuff
 #                like generating the next SQL statement to be executed
-#              - additional statements giving informations about table
+#              - additional statements giving information about table
 #                contents or the value of some variables
 #                You will get huge differences, because the file with the
 #                expected results was created with $debug = 0 .
@@ -221,7 +221,7 @@ if (0)
 #     $ls= 1 (default)
 #          --> Display the table related directory content via
 #                "ls $MYSQLTEST_VARDIR/mysqld.1/data/test/t1*"
-#              if these informations were collected.
+#              if these information were collected.
 #              This is probably not portable to some OS.
 #     $ls= 0
 #          --> Omit displaying the directory
--- a/mysql-test/suite/parts/inc/partition_engine.inc
+++ b/mysql-test/suite/parts/inc/partition_engine.inc
@@ -7,7 +7,7 @@
 #   This routine is only useful for the partition_<feature>_<engine> tests.    #
 #                                                                              #
 # Note: There were some problems in history.                                   #
-#    It looks like a table holds informations about the storage engine         #
+#    It looks like a table holds information about the storage engine         #
 #    for                                                                       #
 #      "the whole table" -> in statement after column list before partitioning #
 #      a partition       -> in statement after definition of partition         #
--- a/mysql-test/suite/parts/inc/partition_layout.inc
+++ b/mysql-test/suite/parts/inc/partition_layout.inc
@@ -1,6 +1,6 @@
 # inc/partition_layout.inc
 #
-# Print partitioning related informations about the table t1
+# Print partitioning related information about the table t1
 #
 
 eval SHOW CREATE TABLE t1;
--- a/mysql-test/suite/rpl/t/rpl_heartbeat_basic.test
+++ b/mysql-test/suite/rpl/t/rpl_heartbeat_basic.test
@@ -12,7 +12,7 @@
 --source include/master-slave.inc
 #
 # The test runs long and does not have any specifics to 
-# binlog_format. It is choosen therefore to run with MIXED mode
+# binlog_format. It is chosen therefore to run with MIXED mode
 # in order to not slow down much `make test'.
 #
 --source include/have_binlog_format_mixed.inc
--- a/mysql-test/suite/sys_vars/r/innodb_scrub_log_basic.result
+++ b/mysql-test/suite/sys_vars/r/innodb_scrub_log_basic.result
@@ -45,4 +45,4 @@ SELECT @@GLOBAL.innodb_scrub_log;
 0 Expected
 SELECT innodb_scrub_log;
 ERROR 42S22: Unknown column 'innodb_scrub_log' in 'field list'
-Expected error 'Unknow column in field list'
+Expected error 'Unknown column in field list'
--- a/mysql-test/suite/sys_vars/r/innodb_scrub_log_speed_basic.result
+++ b/mysql-test/suite/sys_vars/r/innodb_scrub_log_speed_basic.result
@@ -54,4 +54,4 @@ SELECT @@GLOBAL.innodb_scrub_log_speed;
 200 Expected
 SELECT innodb_scrub_log_speed;
 ERROR 42S22: Unknown column 'innodb_scrub_log_speed' in 'field list'
-Expected error 'Unknow column in field list'
+Expected error 'Unknown column in field list'
--- a/mysql-test/suite/sys_vars/t/innodb_scrub_log_basic.test
+++ b/mysql-test/suite/sys_vars/t/innodb_scrub_log_basic.test
@@ -47,4 +47,4 @@ SELECT @@GLOBAL.innodb_scrub_log;
 
 --Error ER_BAD_FIELD_ERROR
 SELECT innodb_scrub_log;
---echo Expected error 'Unknow column in field list'
+--echo Expected error 'Unknown column in field list'
--- a/mysql-test/suite/sys_vars/t/innodb_scrub_log_speed_basic.test
+++ b/mysql-test/suite/sys_vars/t/innodb_scrub_log_speed_basic.test
@@ -52,4 +52,4 @@ SELECT @@GLOBAL.innodb_scrub_log_speed;
 
 --Error ER_BAD_FIELD_ERROR
 SELECT innodb_scrub_log_speed;
---echo Expected error 'Unknow column in field list'
+--echo Expected error 'Unknown column in field list'
--- a/mysys/my_mkdir.c
+++ b/mysys/my_mkdir.c
@@ -34,7 +34,7 @@ int my_mkdir(const char *dir, int Flags,
 #endif
   {
     my_errno=errno;
-    DBUG_PRINT("error",("error %d when creating direcory %s",my_errno,dir));
+    DBUG_PRINT("error",("error %d when creating directory %s",my_errno,dir));
     if (MyFlags & (MY_FFNF | MY_FAE | MY_WME))
       my_error(EE_CANT_MKDIR,  MYF(ME_BELL), dir, my_errno);
     DBUG_RETURN(-1);
--- a/scripts/mytop.sh
+++ b/scripts/mytop.sh
@@ -348,7 +348,7 @@ if ($has_is_processlist == 1)
     if ($has_time_ms == 1)
     {
         ## Check if the server has the STAGE column on the I_S.PROCESSLIST
-        ## table (MariaDB) to retreive query completion informations
+        ## table (MariaDB) to retreive query completion information
         $has_progress = Execute("SELECT /*mytop*/ 1 FROM INFORMATION_SCHEMA.COLUMNS
                                 WHERE TABLE_SCHEMA = 'information_schema' AND
                                 TABLE_NAME = 'PROCESSLIST' AND
@@ -853,7 +853,7 @@ while (1)
     }
 
     ## a - progress column toggle (the column is only displayed
-    ##     if progress informations are available from the processlist)
+    ##     if progress information are available from the processlist)
 
     if ($key eq 'a')
     {
--- a/sql-common/client.c
+++ b/sql-common/client.c
@@ -2772,7 +2772,7 @@ CLI_MYSQL_REAL_CONNECT(MYSQL *mysql,cons
                       VIO_LOCALHOST | VIO_BUFFERED_READ);
     if (!net->vio)
     {
-      DBUG_PRINT("error",("Unknow protocol %d ", mysql->options.protocol));
+      DBUG_PRINT("error",("Unknown protocol %d ", mysql->options.protocol));
       set_mysql_error(mysql, CR_CONN_UNKNOW_PROTOCOL, unknown_sqlstate);
       closesocket(sock);
       goto error;
@@ -2947,7 +2947,7 @@ CLI_MYSQL_REAL_CONNECT(MYSQL *mysql,cons
   DBUG_PRINT("info", ("net->vio: %p", net->vio));
   if (!net->vio)
   {
-    DBUG_PRINT("error",("Unknow protocol %d ",mysql->options.protocol));
+    DBUG_PRINT("error",("Unknown protocol %d ",mysql->options.protocol));
     set_mysql_error(mysql, CR_CONN_UNKNOW_PROTOCOL, unknown_sqlstate);
     goto error;
   }
--- a/sql/log_event_server.cc
+++ b/sql/log_event_server.cc
@@ -5464,7 +5464,7 @@ int Rows_log_event::do_apply_event(rpl_g
     */
 
     {
-      DBUG_PRINT("debug", ("Checking compability of tables to lock - tables_to_lock: %p",
+      DBUG_PRINT("debug", ("Checking compatibility of tables to lock - tables_to_lock: %p",
                            rgi->tables_to_lock));
 
       /**
--- a/sql/multi_range_read.cc
+++ b/sql/multi_range_read.cc
@@ -1679,15 +1679,15 @@ ha_rows DsMrr_impl::dsmrr_info(uint keyn
   if ((*flags & HA_MRR_USE_DEFAULT_IMPL) || 
       choose_mrr_impl(keyno, rows, flags, bufsz, cost))
   {
-    /* Default implementation is choosen */
-    DBUG_PRINT("info", ("Default MRR implementation choosen"));
+    /* Default implementation is chosen */
+    DBUG_PRINT("info", ("Default MRR implementation chosen"));
     *flags= def_flags;
     *bufsz= def_bufsz;
   }
   else
   {
     /* *flags and *bufsz were set by choose_mrr_impl */
-    DBUG_PRINT("info", ("DS-MRR implementation choosen"));
+    DBUG_PRINT("info", ("DS-MRR implementation chosen"));
   }
   return 0;
 }
@@ -1724,14 +1724,14 @@ ha_rows DsMrr_impl::dsmrr_info_const(uin
   if ((*flags & HA_MRR_USE_DEFAULT_IMPL) ||
       choose_mrr_impl(keyno, rows, flags, bufsz, cost))
   {
-    DBUG_PRINT("info", ("Default MRR implementation choosen"));
+    DBUG_PRINT("info", ("Default MRR implementation chosen"));
     *flags= def_flags;
     *bufsz= def_bufsz;
   }
   else
   {
     /* *flags and *bufsz were set by choose_mrr_impl */
-    DBUG_PRINT("info", ("DS-MRR implementation choosen"));
+    DBUG_PRINT("info", ("DS-MRR implementation chosen"));
   }
   return rows;
 }
@@ -1799,12 +1799,12 @@ bool DsMrr_impl::check_cpk_scan(THD *thd
   @param keyno       Index number
   @param rows        E(full rows to be retrieved)
   @param flags  IN   MRR flags provided by the MRR user
-                OUT  If DS-MRR is choosen, flags of DS-MRR implementation
+                OUT  If DS-MRR is chosen, flags of DS-MRR implementation
                      else the value is not modified
-  @param bufsz  IN   If DS-MRR is choosen, buffer use of DS-MRR implementation
+  @param bufsz  IN   If DS-MRR is chosen, buffer use of DS-MRR implementation
                      else the value is not modified
   @param cost   IN   Cost of default MRR implementation
-                OUT  If DS-MRR is choosen, cost of DS-MRR scan
+                OUT  If DS-MRR is chosen, cost of DS-MRR scan
                      else the value is not modified
 
   @retval TRUE   Default MRR implementation should be used
--- a/sql/mysqld.cc
+++ b/sql/mysqld.cc
@@ -7668,7 +7668,7 @@ static void usage(void)
     It's also needed on some exotic platforms where global variables are
     not set to 0 when a program starts.
 
-    We don't need to set variables refered to in my_long_options
+    We don't need to set variables referred to in my_long_options
     as these are initialized by my_getopt.
 */
 
--- a/sql/opt_subselect.cc
+++ b/sql/opt_subselect.cc
@@ -2901,7 +2901,7 @@ void advance_sj_state(JOIN *join, table_
         {
           DBUG_ASSERT(pos->sj_strategy != sj_strategy);
           /*
-            If the strategy choosen first time or
+            If the strategy chosen first time or
             the strategy replace strategy which was used to exectly the same
             tables
           */
--- a/sql/rpl_rli.h
+++ b/sql/rpl_rli.h
@@ -274,7 +274,7 @@ public:
     Needed for problems when slave stops and we want to restart it
     skipping one or more events in the master log that have caused
     errors, and have been manually applied by DBA already.
-    Must be ulong as it's refered to from set_var.cc
+    Must be ulong as it's referred to from set_var.cc
   */
   volatile ulonglong slave_skip_counter;
   ulonglong max_relay_log_size;
--- a/sql/sql_acl.cc
+++ b/sql/sql_acl.cc
@@ -5023,7 +5023,7 @@ acl_update_proxy_user(ACL_PROXY_USER *ne
     {
       if (is_revoke)
       {
-        DBUG_PRINT("info", ("delting ACL_PROXY_USER"));
+        DBUG_PRINT("info", ("deleting ACL_PROXY_USER"));
         delete_dynamic_element(&acl_proxy_users, i);
       }
       else
--- a/sql/sql_cache.cc
+++ b/sql/sql_cache.cc
@@ -5128,7 +5128,7 @@ my_bool Query_cache::in_blocks(Query_cac
     if (block->pprev->pnext != block)
     {
       DBUG_PRINT("error",
-		 ("block %p in physical list is incorrect linked, prev block %p refered as next to %p (check from %p)",
+		 ("block %p in physical list is incorrect linked, prev block %p referred as next to %p (check from %p)",
 		  block, block->pprev,
 		  block->pprev->pnext,
 		  point));
@@ -5156,7 +5156,7 @@ err1:
     if (block->pnext->pprev != block)
     {
       DBUG_PRINT("error",
-		 ("block %p in physicel list is incorrect linked, next block %p refered as prev to %p (check from %p)",
+		 ("block %p in physicel list is incorrect linked, next block %p referred as prev to %p (check from %p)",
 		  block, block->pnext,
 		  block->pnext->pprev,
 		  point));
@@ -5185,7 +5185,7 @@ my_bool Query_cache::in_list(Query_cache
     if (block->prev->next != block)
     {
       DBUG_PRINT("error",
-		 ("block %p in list '%s' %p is incorrect linked, prev block %p refered as next to %p (check from %p)",
+		 ("block %p in list '%s' %p is incorrect linked, prev block %p referred as next to %p (check from %p)",
 		  block, name, root, block->prev,
 		  block->prev->next,
 		  point));
@@ -5214,7 +5214,7 @@ err1:
     if (block->next->prev != block)
     {
       DBUG_PRINT("error",
-		 ("block %p in list '%s' %p is incorrect linked, next block %p refered as prev to %p (check from %p)",
+		 ("block %p in list '%s' %p is incorrect linked, next block %p referred as prev to %p (check from %p)",
 		  block, name, root, block->next,
 		  block->next->prev,
 		  point));
@@ -5256,7 +5256,7 @@ my_bool Query_cache::in_table_list(Query
     if (table->prev->next != table)
     {
       DBUG_PRINT("error",
-		 ("table %p(%p) in list '%s' %p(%p) is incorrect linked, prev table %p(%p) refered as next to %p(%p) (check from %p(%p))",
+		 ("table %p(%p) in list '%s' %p(%p) is incorrect linked, prev table %p(%p) referred as next to %p(%p) (check from %p(%p))",
 		  table, table->block(), name, 
 		  root, root->block(),
 		  table->prev, table->prev->block(),
@@ -5291,7 +5291,7 @@ err1:
     if (table->next->prev != table)
     {
       DBUG_PRINT("error",
-		 ("table %p(%p) in list '%s' %p(%p) is incorrect linked, next table %p(%p) refered as prev to %p(%p) (check from %p(%p))",
+		 ("table %p(%p) in list '%s' %p(%p) is incorrect linked, next table %p(%p) referred as prev to %p(%p) (check from %p(%p))",
 		  table, table->block(),
 		  name, root, root->block(),
 		  table->next, table->next->block(),
--- a/sql/sql_class.cc
+++ b/sql/sql_class.cc
@@ -3614,7 +3614,7 @@ int select_max_min_finder_subselect::sen
         break;
       case ROW_RESULT:
       case TIME_RESULT:
-        // This case should never be choosen
+        // This case should never be chosen
 	DBUG_ASSERT(0);
 	op= 0;
       }
--- a/sql/sql_partition.cc
+++ b/sql/sql_partition.cc
@@ -41,7 +41,7 @@
   which is often referred to as column lists in the code variables. This
   enables a user to specify a set of columns and their concatenated value
   as the partition value. By comparing the concatenation of these values
-  the proper partition can be choosen.
+  the proper partition can be chosen.
 */
 
 /* Some general useful functions */
--- a/sql/sql_select.cc
+++ b/sql/sql_select.cc
@@ -7698,7 +7698,7 @@ best_access_path(JOIN      *join,
               Try re-using E(#rows) from "range" optimizer:
               We can do so if "range" optimizer used the same intervals as
               in (**). The intervals used by range optimizer may be not 
-              available at this point (as "range" access might have choosen to
+              available at this point (as "range" access might have chosen to
               create quick select over another index), so we can't compare
               them to (**). We'll make indirect judgements instead.
               The sufficient conditions for re-use are:
@@ -11006,7 +11006,7 @@ inline void add_cond_and_fix(THD *thd, I
 
     Description of the optimization:
     
-      We look through equalities choosen to perform ref/eq_ref access,
+      We look through equalities chosen to perform ref/eq_ref access,
       pick equalities that have form "tbl.part_of_key = othertbl.field"
       (where othertbl is a non-const table and othertbl.field may be NULL)
       and add them to conditions on correspoding tables (othertbl in this
@@ -17907,7 +17907,7 @@ Field *Item_sum::create_tmp_field(MEM_RO
     new_field= tmp_table_field_from_field_type(root, table);
     break;
   case ROW_RESULT:
-    // This case should never be choosen
+    // This case should never be chosen
     DBUG_ASSERT(0);
     new_field= 0;
     break;
@@ -25046,7 +25046,7 @@ void calc_group_buffer(TMP_TABLE_PARAM *
         break;
       }
       default:
-        /* This case should never be choosen */
+        /* This case should never be chosen */
         DBUG_ASSERT(0);
         my_error(ER_OUT_OF_RESOURCES, MYF(ME_FATAL));
       }
--- a/sql/sql_show.cc
+++ b/sql/sql_show.cc
@@ -1924,7 +1924,7 @@ static void add_table_options(THD *thd,
     packet->append_ulonglong(share->stats_sample_pages);
   }
 
-  /* We use CHECKSUM, instead of TABLE_CHECKSUM, for backward compability */
+  /* We use CHECKSUM, instead of TABLE_CHECKSUM, for backward compatibility */
   if (create_info.options & HA_OPTION_CHECKSUM)
     packet->append(STRING_WITH_LEN(" CHECKSUM=1"));
   if (create_info.page_checksum != HA_CHOICE_UNDEF)
@@ -5511,7 +5511,7 @@ static int get_schema_tables_record(THD
       str.qs_append(share->stats_sample_pages);
     }
 
-    /* We use CHECKSUM, instead of TABLE_CHECKSUM, for backward compability */
+    /* We use CHECKSUM, instead of TABLE_CHECKSUM, for backward compatibility */
     if (share->db_create_options & HA_OPTION_CHECKSUM)
       str.qs_append(STRING_WITH_LEN(" checksum=1"));
 
--- a/sql/sql_signal.h
+++ b/sql/sql_signal.h
@@ -77,7 +77,7 @@ public:
   /**
     Constructor, used to represent a SIGNAL statement.
     @param cond the SQL condition to signal (required).
-    @param set the collection of signal informations to signal.
+    @param set the collection of signal information to signal.
   */
   Sql_cmd_signal(const sp_condition_value *cond,
                  const Set_signal_information& set)
@@ -104,7 +104,7 @@ public:
   /**
     Constructor, used to represent a RESIGNAL statement.
     @param cond the SQL condition to resignal (optional, may be NULL).
-    @param set the collection of signal informations to resignal.
+    @param set the collection of signal information to resignal.
   */
   Sql_cmd_resignal(const sp_condition_value *cond,
                    const Set_signal_information& set)
--- a/sql/table.cc
+++ b/sql/table.cc
@@ -2283,7 +2283,7 @@ int TABLE_SHARE::init_from_binary_frm_im
   }
   else
   {
-    DBUG_PRINT("info", ("Setting system versioning informations"));
+    DBUG_PRINT("info", ("Setting system versioning information"));
     if (init_period_from_extra2(&vers, extra2.system_period.str,
                   extra2.system_period.str + extra2.system_period.length))
       goto err;
--- a/sql/tztime.cc
+++ b/sql/tztime.cc
@@ -2564,7 +2564,7 @@ scan_tz_dir(char * name_end, uint symlin
 
           /*
             This is a normal case and not critical. only print warning if
-            verbose mode is choosen.
+            verbose mode is chosen.
           */
           if (verbose > 0)
           {
--- a/sql/udf_example.c
+++ b/sql/udf_example.c
@@ -972,7 +972,7 @@ avgcost_deinit( UDF_INIT* initid )
 }
 
 
-/* This is only for MySQL 4.0 compability */
+/* This is only for MySQL 4.0 compatibility */
 void
 avgcost_reset(UDF_INIT* initid, UDF_ARGS* args, char* is_null, char* message)
 {
@@ -1119,7 +1119,7 @@ avg2_deinit( UDF_INIT* initid )
 }
 
 
-/* This is only for MySQL 4.0 compability */
+/* This is only for MySQL 4.0 compatibility */
 void
 avg2_reset(UDF_INIT* initid, UDF_ARGS* args, char* is_null, char* message)
 {
--- a/storage/connect/filter.cpp
+++ b/storage/connect/filter.cpp
@@ -856,7 +856,7 @@ PFIL FILTER::LinkFilter(PGLOBAL g, PFIL
 
 /***********************************************************************/
 /*  Checks whether filter contains reference to a previous table that  */
-/*  is not logically joined to the currently openned table, or whether */
+/*  is not logically joined to the currently opened table, or whether */
 /*  it is a Sub-Select filter.  In any case, local is set to FALSE.    */
 /*  Note: This function is now applied to de-linearized filters.       */
 /***********************************************************************/
--- a/storage/connect/ioapi.h
+++ b/storage/connect/ioapi.h
@@ -82,7 +82,7 @@
 #include "mz64conf.h"
 #endif
 
-/* a type choosen by DEFINE */
+/* a type chosen by DEFINE */
 #ifdef HAVE_64BIT_INT_CUSTOM
 typedef  64BIT_INT_CUSTOM_TYPE ZPOS64_T;
 #else
--- a/storage/connect/myconn.cpp
+++ b/storage/connect/myconn.cpp
@@ -120,7 +120,7 @@ static MYSQL_RES *connect_use_result(MYS
 /************************************************************************/
 /*  MyColumns: constructs the result blocks containing all columns      */
 /*  of a MySQL table or view.                                           */
-/*  info = TRUE to get catalog column informations.                     */
+/*  info = TRUE to get catalog column information.                     */
 /************************************************************************/
 PQRYRES MyColumns(PGLOBAL g, THD *thd, const char *host, const char *db,
                   const char *user, const char *pwd,
--- a/storage/heap/ChangeLog
+++ b/storage/heap/ChangeLog
@@ -1,7 +1,7 @@
 Sun Sep  6 10:56:59 1992  Michael Widenius  (monty@bitch)
 
 	* Added functions for first,next,last,prev and clear of database-heap
-	* Added optional index to rsame for compability.
+	* Added optional index to rsame for compatibility.
 
 Fri Aug 14 14:34:35 1992  Michael Widenius  (monty@bitch)
 
--- a/storage/innobase/btr/btr0cur.cc
+++ b/storage/innobase/btr/btr0cur.cc
@@ -2145,7 +2145,7 @@ need_opposite_intention:
 
 		/* If the first or the last record of the page
 		or the same key value to the first record or last record,
-		the another page might be choosen when BTR_CONT_MODIFY_TREE.
+		the another page might be chosen when BTR_CONT_MODIFY_TREE.
 		So, the parent page should not released to avoiding deadlock
 		with blocking the another search with the same key value. */
 		if (!detected_same_key_root
--- a/storage/innobase/fil/fil0fil.cc
+++ b/storage/innobase/fil/fil0fil.cc
@@ -1961,7 +1961,7 @@ fil_space_t *fil_truncate_prepare(ulint
 /*******************************************************************//**
 Allocates and builds a file name from a path, a table or tablespace name
 and a suffix. The string must be freed by caller with ut_free().
-@param[in] path NULL or the direcory path or the full path and filename.
+@param[in] path NULL or the directory path or the full path and filename.
 @param[in] name NULL if path is full, or Table/Tablespace name
 @param[in] suffix NULL or the file extention to use.
 @param[in] trim_name true if the last name on the path should be trimmed.
--- a/storage/innobase/include/fil0fil.h
+++ b/storage/innobase/include/fil0fil.h
@@ -1559,7 +1559,7 @@ void fil_close_tablespace(ulint id);
 /*******************************************************************//**
 Allocates and builds a file name from a path, a table or tablespace name
 and a suffix. The string must be freed by caller with ut_free().
-@param[in] path NULL or the direcory path or the full path and filename.
+@param[in] path NULL or the directory path or the full path and filename.
 @param[in] name NULL if path is full, or Table/Tablespace name
 @param[in] suffix NULL or the file extention to use.
 @return own: file name */
--- a/storage/maria/ha_maria.cc
+++ b/storage/maria/ha_maria.cc
@@ -1345,7 +1345,7 @@ int ha_maria::check(THD * thd, HA_CHECK_
     {
       file->update |= HA_STATE_CHANGED | HA_STATE_ROW_CHANGED;
       mysql_mutex_lock(&share->intern_lock);
-      DBUG_PRINT("info", ("Reseting crashed state"));
+      DBUG_PRINT("info", ("Resetting crashed state"));
       share->state.changed&= ~(STATE_CHANGED | STATE_CRASHED_FLAGS |
                                STATE_IN_REPAIR);
       if (!(table->db_stat & HA_READ_ONLY))
@@ -1722,7 +1722,7 @@ int ha_maria::repair(THD *thd, HA_CHECK
   {
     if ((share->state.changed & STATE_CHANGED) || maria_is_crashed(file))
     {
-      DBUG_PRINT("info", ("Reseting crashed state"));
+      DBUG_PRINT("info", ("Resetting crashed state"));
       share->state.changed&= ~(STATE_CHANGED | STATE_CRASHED_FLAGS |
                                STATE_IN_REPAIR | STATE_MOVED);
       file->update |= HA_STATE_CHANGED | HA_STATE_ROW_CHANGED;
--- a/storage/maria/ma_backup.c
+++ b/storage/maria/ma_backup.c
@@ -21,7 +21,7 @@
 #include <aria_backup.h>
 
 /**
-  @brief Get capabilites for an Aria table
+  @brief Get capabilities for an Aria table
 
   @param kfile   key file (.MAI)
   @param cap     Capabilities are stored here
--- a/storage/maria/ma_check.c
+++ b/storage/maria/ma_check.c
@@ -6427,7 +6427,7 @@ void _ma_update_auto_increment_key(HA_CH
          keypart_k=c_k for arbitrary constants c_1 ... c_k)
 
      = {assuming that values have uniform distribution and index contains all
-        tuples from the domain (or that {c_1, ..., c_k} tuple is choosen from
+        tuples from the domain (or that {c_1, ..., c_k} tuple is chosen from
         index tuples}
 
      = #tuples-in-the-index / #distinct-tuples-in-the-index.
--- a/storage/myisam/mi_open.c
+++ b/storage/myisam/mi_open.c
@@ -180,7 +180,7 @@ MI_INFO *mi_open(const char *name, int m
     if ((share->options & HA_OPTION_RELIES_ON_SQL_LAYER) &&
         ! (open_flags & HA_OPEN_FROM_SQL_LAYER))
     {
-      DBUG_PRINT("error", ("table cannot be openned from non-sql layer"));
+      DBUG_PRINT("error", ("table cannot be opened from non-sql layer"));
       my_errno= HA_ERR_UNSUPPORTED;
       goto err;
     }
--- a/storage/rocksdb/mysql-test/rocksdb/include/index_merge1.inc
+++ b/storage/rocksdb/mysql-test/rocksdb/include/index_merge1.inc
@@ -676,7 +676,7 @@ drop table t1;
 if ($merge_table_support)
 {
 #
-# BUG#17314: Index_merge/intersection not choosen by the optimizer for MERGE tables
+# BUG#17314: Index_merge/intersection not chosen by the optimizer for MERGE tables
 #
 create table t0 (a int);
 insert into t0 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);
--- a/storage/rocksdb/rocksdb/include/rocksdb/cache.h
+++ b/storage/rocksdb/rocksdb/include/rocksdb/cache.h
@@ -60,7 +60,7 @@ struct LRUCacheOptions {
   // If greater than zero, the LRU list will be split into a high-pri
   // list and a low-pri list. High-pri entries will be insert to the
   // tail of high-pri list, while low-pri entries will be first inserted to
-  // the low-pri list (the midpoint). This is refered to as
+  // the low-pri list (the midpoint). This is referred to as
   // midpoint insertion strategy to make entries never get hit in cache
   // age out faster.
   //
--- a/storage/tokudb/PerconaFT/ft/tests/logcursor-empty-logfile-3.cc
+++ b/storage/tokudb/PerconaFT/ft/tests/logcursor-empty-logfile-3.cc
@@ -174,7 +174,7 @@ test_main (int argc, const char *argv[])
         r = toku_logger_open(TOKU_TEST_FILENAME, logger);  assert(r==0);
 
         toku_logger_maybe_trim_log(logger, trim_lsn);
-        assert( toku_logfilemgr_num_logfiles(logger->logfilemgr) == 4 ); // untrimmed log, empty log, plus newly openned log
+        assert( toku_logfilemgr_num_logfiles(logger->logfilemgr) == 4 ); // untrimmed log, empty log, plus newly opened log
 
         r = toku_logger_close(&logger);
     }
--- a/mysql-test/suite/funcs_1/r/is_engines_federated.result
+++ b/mysql-test/suite/funcs_1/r/is_engines_federated.result
@@ -2,7 +2,7 @@ SELECT * FROM information_schema.engines
 WHERE ENGINE = 'FEDERATED';
 ENGINE	FEDERATED
 SUPPORT	YES
-COMMENT	Allows to access tables on other MariaDB servers, supports transactions and more
+COMMENT	Allows one to access tables on other MariaDB servers, supports transactions and more
 TRANSACTIONS	YES
 XA	NO
 SAVEPOINTS	YES
