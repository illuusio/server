Forwarded: https://github.com/MariaDB/server/pull/2543
Origin: https://patch-diff.githubusercontent.com/raw/MariaDB/server/pull/2543.patch
Author: Otto Kekäläinen <otto@kekalainen.net>
Date: Sat, 11 Mar 2023 11:07:48 -0800
Subject: [PATCH] Fix trivial spelling errors

- agressively -> aggressively
- exising -> existing
- occured -> occurred
- releated -> related
- seperated -> separated
- sucess -> success
- use use -> use

All new code of the whole pull request, including one or several files
that are either new files or modified ones, are contributed under the
BSD-new license. I am contributing on behalf of my employer Amazon Web
Services, Inc.
---
 mysql-test/main/backup_syntax.test            |  2 +-
 mysql-test/main/mysqld--help.result           |  4 +-
 .../suite/perfschema/r/table_schema.result    |  2 +-
 mysql-test/suite/rpl/r/rpl_mdev-11092.result  |  2 +-
 mysql-test/suite/rpl/t/rpl_mdev-11092.test    |  2 +-
 .../r/sysvars_server_embedded,32bit.rdiff     |  2 +-
 .../sys_vars/r/sysvars_server_embedded.result |  2 +-
 .../r/sysvars_server_notembedded,32bit.rdiff  |  2 +-
 .../r/sysvars_server_notembedded.result       |  4 +-
 .../t/innodb_max_dirty_pages_pct_func.test    |  2 +-
 sql/ha_partition.cc                           |  2 +-
 sql/replication.h                             | 48 +++++++++----------
 sql/sp_head.cc                                |  2 +-
 sql/sql_delete.cc                             |  2 +-
 sql/sql_partition.cc                          |  2 +-
 sql/sql_statistics.h                          |  2 +-
 sql/sys_vars.cc                               |  4 +-
 storage/connect/tabrest.cpp                   |  2 +-
 .../dictionary/html/js/jquery-1.7.2.js        |  2 +-
 ...plication_applier_status_by_coordinator.cc |  2 +-
 vio/viossl.c                                  |  2 +-
 21 files changed, 47 insertions(+), 47 deletions(-)

--- a/mysql-test/main/backup_syntax.test
+++ b/mysql-test/main/backup_syntax.test
@@ -1,5 +1,5 @@
 ########################################################################
-# Tests things releated to syntax of BACKUP STAGE (MDEV-5336)
+# Tests things related to syntax of BACKUP STAGE (MDEV-5336)
 ########################################################################
 
 --source include/have_innodb.inc
--- a/mysql-test/main/mysqld--help.result
+++ b/mysql-test/main/mysqld--help.result
@@ -367,7 +367,7 @@ The following specify which files/extra
  log. Slave stops with an error if it encounters an event
  that would cause it to generate an out-of-order binlog if
  executed. When ON the same server-id semisync-replicated
- transactions that duplicate exising ones in binlog are
+ transactions that duplicate existing ones in binlog are
  ignored without error and slave interruption.
  -?, --help          Display this help and exit.
  --histogram-size=#  Number of bytes used for a histogram. If set to 0, no
@@ -722,7 +722,7 @@ The following specify which files/extra
  (Automatically configured unless set explicitly)
  --optimizer-extra-pruning-depth=# 
  If the optimizer needs to enumerate join prefix of this
- size or larger, then it will try agressively prune away
+ size or larger, then it will try aggressively prune away
  the search space.
  --optimizer-max-sel-arg-weight=# 
  The maximum weight of the SEL_ARG graph. Set to 0 for no
--- a/mysql-test/suite/perfschema/r/table_schema.result
+++ b/mysql-test/suite/perfschema/r/table_schema.result
@@ -864,7 +864,7 @@ def	performance_schema	replication_appli
 def	performance_schema	replication_applier_status_by_coordinator	SERVICE_STATE	3	NULL	NO	enum	3	9	NULL	NULL	NULL	utf8mb3	utf8mb3_general_ci	enum('ON','OFF')			select,insert,update,references	ON (thread exists and is active or idle) or OFF (thread no longer exists).	NEVER	NULL
 def	performance_schema	replication_applier_status_by_coordinator	LAST_ERROR_NUMBER	4	NULL	NO	int	NULL	NULL	10	0	NULL	NULL	NULL	int(11)			select,insert,update,references	Last error number that caused the SQL/coordinator thread to stop.	NEVER	NULL
 def	performance_schema	replication_applier_status_by_coordinator	LAST_ERROR_MESSAGE	5	NULL	NO	varchar	1024	3072	NULL	NULL	NULL	utf8mb3	utf8mb3_general_ci	varchar(1024)			select,insert,update,references	Last error message that caused the SQL/coordinator thread to stop.	NEVER	NULL
-def	performance_schema	replication_applier_status_by_coordinator	LAST_ERROR_TIMESTAMP	6	current_timestamp()	NO	timestamp	NULL	NULL	NULL	NULL	0	NULL	NULL	timestamp		on update current_timestamp()	select,insert,update,references	Timestamp that shows when the most recent SQL/coordinator error occured.	NEVER	NULL
+def	performance_schema	replication_applier_status_by_coordinator	LAST_ERROR_TIMESTAMP	6	current_timestamp()	NO	timestamp	NULL	NULL	NULL	NULL	0	NULL	NULL	timestamp		on update current_timestamp()	select,insert,update,references	Timestamp that shows when the most recent SQL/coordinator error occurred.	NEVER	NULL
 def	performance_schema	replication_applier_status_by_coordinator	LAST_SEEN_TRANSACTION	7	NULL	NO	char	57	171	NULL	NULL	NULL	utf8mb3	utf8mb3_general_ci	char(57)			select,insert,update,references	The transaction the worker has last seen.	NEVER	NULL
 def	performance_schema	replication_applier_status_by_coordinator	LAST_TRANS_RETRY_COUNT	8	NULL	NO	int	NULL	NULL	10	0	NULL	NULL	NULL	int(11)			select,insert,update,references	Total number of retries attempted by last transaction.	NEVER	NULL
 def	performance_schema	replication_applier_status_by_worker	CHANNEL_NAME	1	NULL	NO	varchar	256	768	NULL	NULL	NULL	utf8mb3	utf8mb3_general_ci	varchar(256)			select,insert,update,references	Name of replication channel through which the transaction is received.	NEVER	NULL
--- a/mysql-test/suite/rpl/r/rpl_mdev-11092.result
+++ b/mysql-test/suite/rpl/r/rpl_mdev-11092.result
@@ -1,7 +1,7 @@
 include/master-slave.inc
 [connection master]
 call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
-call mtr.add_suppression("Slave SQL: The incident LOST_EVENTS occured on the master. .*");
+call mtr.add_suppression("Slave SQL: The incident LOST_EVENTS occurred on the master. .*");
 call mtr.add_suppression("Write to binary log failed: Multi-row statements required more than .max_binlog_stmt_cache_size.* ");
 call mtr.add_suppression("Write to binary log failed: Multi-statement transaction required more than .max_binlog_cache_size.* ");
 call mtr.add_suppression("Incident event write to the binary log file failed");
--- a/mysql-test/suite/rpl/t/rpl_mdev-11092.test
+++ b/mysql-test/suite/rpl/t/rpl_mdev-11092.test
@@ -7,7 +7,7 @@
 
 ########################################################################################
 call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
-call mtr.add_suppression("Slave SQL: The incident LOST_EVENTS occured on the master. .*");
+call mtr.add_suppression("Slave SQL: The incident LOST_EVENTS occurred on the master. .*");
 call mtr.add_suppression("Write to binary log failed: Multi-row statements required more than .max_binlog_stmt_cache_size.* ");
 call mtr.add_suppression("Write to binary log failed: Multi-statement transaction required more than .max_binlog_cache_size.* ");
 call mtr.add_suppression("Incident event write to the binary log file failed");
--- a/mysql-test/suite/sys_vars/r/sysvars_server_embedded,32bit.rdiff
+++ b/mysql-test/suite/sys_vars/r/sysvars_server_embedded,32bit.rdiff
@@ -719,7 +719,7 @@
  VARIABLE_SCOPE	SESSION
 -VARIABLE_TYPE	BIGINT UNSIGNED
 +VARIABLE_TYPE	INT UNSIGNED
- VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try agressively prune away the search space.
+ VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try aggressively prune away the search space.
  NUMERIC_MIN_VALUE	0
  NUMERIC_MAX_VALUE	62
 @@ -2304,17 +2304,17 @@ READ_ONLY	NO
--- a/mysql-test/suite/sys_vars/r/sysvars_server_embedded.result
+++ b/mysql-test/suite/sys_vars/r/sysvars_server_embedded.result
@@ -2295,7 +2295,7 @@ COMMAND_LINE_ARGUMENT	REQUIRED
 VARIABLE_NAME	OPTIMIZER_EXTRA_PRUNING_DEPTH
 VARIABLE_SCOPE	SESSION
 VARIABLE_TYPE	BIGINT UNSIGNED
-VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try agressively prune away the search space.
+VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try aggressively prune away the search space.
 NUMERIC_MIN_VALUE	0
 NUMERIC_MAX_VALUE	62
 NUMERIC_BLOCK_SIZE	1
--- a/mysql-test/suite/sys_vars/r/sysvars_server_notembedded,32bit.rdiff
+++ b/mysql-test/suite/sys_vars/r/sysvars_server_notembedded,32bit.rdiff
@@ -719,7 +719,7 @@
  VARIABLE_SCOPE	SESSION
 -VARIABLE_TYPE	BIGINT UNSIGNED
 +VARIABLE_TYPE	INT UNSIGNED
- VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try agressively prune away the search space.
+ VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try aggressively prune away the search space.
  NUMERIC_MIN_VALUE	0
  NUMERIC_MAX_VALUE	62
 @@ -2474,17 +2474,17 @@ READ_ONLY	NO
--- a/mysql-test/suite/sys_vars/r/sysvars_server_notembedded.result
+++ b/mysql-test/suite/sys_vars/r/sysvars_server_notembedded.result
@@ -1205,7 +1205,7 @@ COMMAND_LINE_ARGUMENT	NULL
 VARIABLE_NAME	GTID_STRICT_MODE
 VARIABLE_SCOPE	GLOBAL
 VARIABLE_TYPE	BOOLEAN
-VARIABLE_COMMENT	Enforce strict seq_no ordering of events in the binary log. Slave stops with an error if it encounters an event that would cause it to generate an out-of-order binlog if executed. When ON the same server-id semisync-replicated transactions that duplicate exising ones in binlog are ignored without error and slave interruption.
+VARIABLE_COMMENT	Enforce strict seq_no ordering of events in the binary log. Slave stops with an error if it encounters an event that would cause it to generate an out-of-order binlog if executed. When ON the same server-id semisync-replicated transactions that duplicate existing ones in binlog are ignored without error and slave interruption.
 NUMERIC_MIN_VALUE	NULL
 NUMERIC_MAX_VALUE	NULL
 NUMERIC_BLOCK_SIZE	NULL
@@ -2465,7 +2465,7 @@ COMMAND_LINE_ARGUMENT	REQUIRED
 VARIABLE_NAME	OPTIMIZER_EXTRA_PRUNING_DEPTH
 VARIABLE_SCOPE	SESSION
 VARIABLE_TYPE	BIGINT UNSIGNED
-VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try agressively prune away the search space.
+VARIABLE_COMMENT	If the optimizer needs to enumerate join prefix of this size or larger, then it will try aggressively prune away the search space.
 NUMERIC_MIN_VALUE	0
 NUMERIC_MAX_VALUE	62
 NUMERIC_BLOCK_SIZE	1
--- a/mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_func.test
+++ b/mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_func.test
@@ -156,7 +156,7 @@ let $wait_condition= SELECT (dirty_pct()
 --source include/wait_condition.inc
 
 --echo 'We expect dirty pages pct to be BELOW_MAX after some time depending on performance'
-# Value For $sucess will be set from include/wait_condition.inc file. It can have values 1 or 0. It will be 1 if dirty_pct() <= @@global.innodb_max_dirty_pages_pct else it will be 0.
+# Value For $success will be set from include/wait_condition.inc file. It can have values 1 or 0. It will be 1 if dirty_pct() <= @@global.innodb_max_dirty_pages_pct else it will be 0.
 eval CALL check_pct($success);
 DROP PROCEDURE add_records;
 DROP PROCEDURE add_until;
--- a/sql/ha_partition.cc
+++ b/sql/ha_partition.cc
@@ -10250,7 +10250,7 @@ void ha_partition::print_error(int error
   /*
     We choose a main handler's print_error if:
     * m_file has not been initialized, like in bug#42438
-    * lookup_errkey is set, which means that an error has occured in the
+    * lookup_errkey is set, which means that an error has occurred in the
       main handler, not in individual partitions
   */
   if (m_file && lookup_errkey == (uint)-1)
--- a/sql/replication.h
+++ b/sql/replication.h
@@ -83,7 +83,7 @@ typedef struct Trans_observer {
 
      @param param The parameter for transaction observers
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_commit)(Trans_param *param);
@@ -104,7 +104,7 @@ typedef struct Trans_observer {
 
      @note This hook is called wo/ any global mutex held
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_rollback)(Trans_param *param);
@@ -151,7 +151,7 @@ typedef struct Binlog_storage_observer {
      @param log_pos Binlog position after update
      @param flags flags for binlog storage
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_flush)(Binlog_storage_param *param,
@@ -171,7 +171,7 @@ typedef struct Binlog_storage_observer {
      @param log_pos Binlog position after update
      @param flags flags for binlog storage
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_sync)(Binlog_storage_param *param,
@@ -201,7 +201,7 @@ typedef struct Binlog_transmit_observer
      @param log_file Binlog file name to transmit from
      @param log_pos Binlog position to transmit from
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*transmit_start)(Binlog_transmit_param *param,
@@ -212,7 +212,7 @@ typedef struct Binlog_transmit_observer
 
      @param param Observer common parameter
      
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*transmit_stop)(Binlog_transmit_param *param);
@@ -232,7 +232,7 @@ typedef struct Binlog_transmit_observer
      @param size Size of the header buffer
      @param len Header length reserved by this observer
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*reserve_header)(Binlog_transmit_param *param,
@@ -249,7 +249,7 @@ typedef struct Binlog_transmit_observer
      @param log_file Binlog file name of the event packet to send
      @param log_pos Binlog position of the event packet to send
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*before_send_event)(Binlog_transmit_param *param,
@@ -263,7 +263,7 @@ typedef struct Binlog_transmit_observer
      @param event_buf Binlog event packet buffer sent
      @param len length of the event packet buffer
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
    */
   int (*after_send_event)(Binlog_transmit_param *param,
@@ -277,7 +277,7 @@ typedef struct Binlog_transmit_observer
 
      @param param Observer common parameter
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_reset_master)(Binlog_transmit_param *param);
@@ -320,7 +320,7 @@ typedef struct Binlog_relay_IO_observer
 
      @param param Observer common parameter
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*thread_start)(Binlog_relay_IO_param *param);
@@ -330,7 +330,7 @@ typedef struct Binlog_relay_IO_observer
 
      @param param Observer common parameter
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*thread_stop)(Binlog_relay_IO_param *param);
@@ -344,7 +344,7 @@ typedef struct Binlog_relay_IO_observer
      @param param Observer common parameter
      @param flags binlog dump flags
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*before_request_transmit)(Binlog_relay_IO_param *param, uint32 flags);
@@ -358,7 +358,7 @@ typedef struct Binlog_relay_IO_observer
      @param event_buf The event packet return after process
      @param event_len The length of event packet return after process
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_read_event)(Binlog_relay_IO_param *param,
@@ -373,7 +373,7 @@ typedef struct Binlog_relay_IO_observer
      @param event_len Length of the event packet written to relay log
      @param flags flags for relay log
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_queue_event)(Binlog_relay_IO_param *param,
@@ -385,7 +385,7 @@ typedef struct Binlog_relay_IO_observer
      
      @param param Observer common parameter
 
-     @retval 0 Sucess
+     @retval 0 Success
      @retval 1 Failure
   */
   int (*after_reset_slave)(Binlog_relay_IO_param *param);
@@ -398,7 +398,7 @@ typedef struct Binlog_relay_IO_observer
    @param observer The transaction observer to register
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer already exists
 */
 int register_trans_observer(Trans_observer *observer, void *p);
@@ -409,7 +409,7 @@ int register_trans_observer(Trans_observ
    @param observer The transaction observer to unregister
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer not exists
 */
 int unregister_trans_observer(Trans_observer *observer, void *p);
@@ -420,7 +420,7 @@ int unregister_trans_observer(Trans_obse
    @param observer The binlog storage observer to register
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer already exists
 */
 int register_binlog_storage_observer(Binlog_storage_observer *observer, void *p);
@@ -431,7 +431,7 @@ int register_binlog_storage_observer(Bin
    @param observer The binlog storage observer to unregister
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer not exists
 */
 int unregister_binlog_storage_observer(Binlog_storage_observer *observer, void *p);
@@ -442,7 +442,7 @@ int unregister_binlog_storage_observer(B
    @param observer The binlog transmit observer to register
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer already exists
 */
 int register_binlog_transmit_observer(Binlog_transmit_observer *observer, void *p);
@@ -453,7 +453,7 @@ int register_binlog_transmit_observer(Bi
    @param observer The binlog transmit observer to unregister
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer not exists
 */
 int unregister_binlog_transmit_observer(Binlog_transmit_observer *observer, void *p);
@@ -464,7 +464,7 @@ int unregister_binlog_transmit_observer(
    @param observer The binlog relay IO observer to register
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer already exists
 */
 int register_binlog_relay_io_observer(Binlog_relay_IO_observer *observer, void *p);
@@ -475,7 +475,7 @@ int register_binlog_relay_io_observer(Bi
    @param observer The binlog relay IO observer to unregister
    @param p pointer to the internal plugin structure
 
-   @retval 0 Sucess
+   @retval 0 Success
    @retval 1 Observer not exists
 */
 int unregister_binlog_relay_io_observer(Binlog_relay_IO_observer *observer, void *p);
--- a/sql/sp_head.cc
+++ b/sql/sp_head.cc
@@ -1356,7 +1356,7 @@ sp_head::execute(THD *thd, bool merge_da
   /*
     Cursors will use thd->packet, so they may corrupt data which was prepared
     for sending by upper level. OTOH cursors in the same routine can share this
-    buffer safely so let use use routine-local packet instead of having own
+    buffer safely so let use routine-local packet instead of having own
     packet buffer for each cursor.
 
     It is probably safe to use same thd->convert_buff everywhere.
--- a/sql/sql_delete.cc
+++ b/sql/sql_delete.cc
@@ -1602,7 +1602,7 @@ int multi_delete::do_table_deletes(TABLE
 /*
   Send ok to the client
 
-  return:  0 sucess
+  return:  0 success
 	   1 error
 */
 
--- a/sql/sql_partition.cc
+++ b/sql/sql_partition.cc
@@ -4441,7 +4441,7 @@ void get_partition_set(const TABLE *tabl
 
    RETURN VALUE
      TRUE                          Error
-     FALSE                         Sucess
+     FALSE                         Success
 
    DESCRIPTION
      Read the partition syntax from the current position in the frm file.
--- a/sql/sql_statistics.h
+++ b/sql/sql_statistics.h
@@ -373,7 +373,7 @@ class Basic_stats_collector
 {
   ulonglong count;         /* number of values retrieved                   */
   ulonglong count_distinct;    /* number of distinct values retrieved      */
-  /* number of distinct values that occured only once  */
+  /* number of distinct values that occurred only once  */
   ulonglong count_distinct_single_occurence;
 
 public:
--- a/sql/sys_vars.cc
+++ b/sql/sys_vars.cc
@@ -2063,7 +2063,7 @@ Sys_gtid_strict_mode(
        "stops with an error if it encounters an event that would cause it to "
        "generate an out-of-order binlog if executed. "
        "When ON the same server-id semisync-replicated transactions that "
-       "duplicate exising ones in binlog are ignored without error "
+       "duplicate existing ones in binlog are ignored without error "
        "and slave interruption.",
        GLOBAL_VAR(opt_gtid_strict_mode),
        CMD_LINE(OPT_ARG), DEFAULT(FALSE));
@@ -2828,7 +2828,7 @@ static Sys_var_ulong Sys_optimizer_searc
 static Sys_var_ulong Sys_optimizer_extra_pruning_depth(
        "optimizer_extra_pruning_depth",
        "If the optimizer needs to enumerate join prefix of this size or "
-       "larger, then it will try agressively prune away the search space.",
+       "larger, then it will try aggressively prune away the search space.",
        SESSION_VAR(optimizer_extra_pruning_depth), CMD_LINE(REQUIRED_ARG),
        VALID_RANGE(0, MAX_TABLES+1), DEFAULT(8), BLOCK_SIZE(1));
 
--- a/storage/connect/tabrest.cpp
+++ b/storage/connect/tabrest.cpp
@@ -336,7 +336,7 @@ bool RESTDEF::DefineAM(PGLOBAL g, LPCSTR
 
   // Do make the table/view definition
   if (Tdp && Tdp->Define(g, Cat, Name, Schema, "REST"))
-    Tdp = NULL; // Error occured
+    Tdp = NULL; // Error occurred
 
   if (xt)
     htrc("Tdp defined\n", rc);
--- a/storage/mroonga/vendor/groonga/examples/dictionary/html/js/jquery-1.7.2.js
+++ b/storage/mroonga/vendor/groonga/examples/dictionary/html/js/jquery-1.7.2.js
@@ -2338,7 +2338,7 @@ jQuery.fn.extend({
 					classNames = value.split( rspace );
 
 				while ( (className = classNames[ i++ ]) ) {
-					// check each className given, space seperated list
+					// check each className given, space separated list
 					state = isBool ? state : !self.hasClass( className );
 					self[ state ? "addClass" : "removeClass" ]( className );
 				}
--- a/storage/perfschema/table_replication_applier_status_by_coordinator.cc
+++ b/storage/perfschema/table_replication_applier_status_by_coordinator.cc
@@ -65,7 +65,7 @@ table_replication_applier_status_by_coor
   "SERVICE_STATE ENUM('ON','OFF') not null comment 'ON (thread exists and is active or idle) or OFF (thread no longer exists).',"
   "LAST_ERROR_NUMBER INTEGER not null comment 'Last error number that caused the SQL/coordinator thread to stop.',"
   "LAST_ERROR_MESSAGE VARCHAR(1024) not null comment 'Last error message that caused the SQL/coordinator thread to stop.',"
-  "LAST_ERROR_TIMESTAMP TIMESTAMP(0) not null comment 'Timestamp that shows when the most recent SQL/coordinator error occured.',"
+  "LAST_ERROR_TIMESTAMP TIMESTAMP(0) not null comment 'Timestamp that shows when the most recent SQL/coordinator error occurred.',"
   "LAST_SEEN_TRANSACTION CHAR(57) not null comment 'The transaction the worker has last seen.',"
   "LAST_TRANS_RETRY_COUNT INTEGER not null comment 'Total number of retries attempted by last transaction.')") },
   false, /* m_perpetual */
--- a/vio/viossl.c
+++ b/vio/viossl.c
@@ -145,7 +145,7 @@ static my_bool ssl_should_retry(Vio *vio
   @param[in] ret return from the failed IO operation
 
   @return  0 - should retry last read/write operation
-           1 - some error has occured
+           1 - some error has occurred
 */
 static int handle_ssl_io_error(Vio *vio, int ret)
 {
