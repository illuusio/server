/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif


/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int LEX::case_stmt_action_expr(Item* expr)
{
  int case_expr_id= spcont->register_case_expr();
  sp_instr_set_case_expr *i;

  if (spcont->push_case_expr_id(case_expr_id))
    return 1;

  i= new (thd->mem_root)
    sp_instr_set_case_expr(sphead->instructions(), spcont, case_expr_id, expr,
                           this);

  sphead->add_cont_backpatch(i);
  return sphead->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int LEX::case_stmt_action_when(Item *when, bool simple)
{
  uint ip= sphead->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new (thd->mem_root)
         Item_case_expr(thd, spcont->get_current_case_expr_id());

#ifdef DBUG_ASSERT_EXISTS
    if (var)
    {
      var->m_sp= sphead;
    }
#endif

    expr= new (thd->mem_root) Item_func_eq(thd, var, when);
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, expr, this);
  }
  else
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, when, this);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return
    !MY_TEST(i) ||
    sphead->push_backpatch(thd, i, spcont->push_label(thd, &empty_clex_str, 0)) ||
    sphead->add_cont_backpatch(i) ||
    sphead->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int LEX::case_stmt_action_then()
{
  uint ip= sphead->instructions();
  sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, spcont);
  if (!MY_TEST(i) || sphead->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sphead->backpatch(spcont->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to after END CASE
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sphead->push_backpatch(thd, i, spcont->last_label());
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

bool
LEX::set_system_variable(enum enum_var_type var_type,
                         sys_var *sysvar, const LEX_CSTRING *base_name,
                         Item *val)
{
  set_var *setvar;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (spcont && sysvar == Sys_autocommit_ptr)
    sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), sysvar->name.str);
    return TRUE;
  }

  if (!(setvar= new (thd->mem_root) set_var(thd, var_type, sysvar,
                                            base_name, val)))
    return TRUE;

  return var_list.push_back(setvar, thd->mem_root);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

bool LEX::set_trigger_new_row(const LEX_CSTRING *name, Item *val)
{
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new (thd->mem_root) Item_null(thd);

  DBUG_ASSERT(trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (trg_chistics.event == TRG_EVENT_INSERT ||
               trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(thd, current_context(),
                               Item_trigger_field::NEW_ROW,
                               name, UPDATE_ACL, FALSE);

  if (unlikely(trg_fld == NULL))
    return TRUE;

  sp_fld= new (thd->mem_root)
        sp_instr_set_trigger_field(sphead->instructions(),
                                   spcont, trg_fld, val, this);

  if (unlikely(sp_fld == NULL))
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
Item_splocal*
LEX::create_item_for_sp_var(const Lex_ident_cli_st *cname, sp_variable *spvar)
{
  const Sp_rcontext_handler *rh;
  Item_splocal *item;
  const char *start_in_q= cname->pos();
  const char *end_in_q= cname->end();
  uint pos_in_q, len_in_q;
  Lex_ident_sys name(thd, cname);

  if (name.is_null())
    return NULL;  // EOM

  /* If necessary, look for the variable. */
  if (spcont && !spvar)
    spvar= find_variable(&name, &rh);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spcont && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= (uint)(start_in_q - sphead->m_tmp_query);
  len_in_q= (uint)(end_in_q - start_in_q);

  item= new (thd->mem_root)
    Item_splocal(thd, rh, &name, spvar->offset, spvar->type_handler(),
                 pos_in_q, len_in_q);

#ifdef DBUG_ASSERT_EXISTS
  if (item)
    item->m_sp= sphead;
#endif

  return item;
}

/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(thd, left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(thd, left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(thd, left, expr);

  DBUG_RETURN(result);
}

/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    if (no_lookahead)
        lex->sphead->m_tmp_query= lip->get_ptr();
    else
        lex->sphead->m_tmp_query= lip->get_tok_end();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
    lex->main_select_push();
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      static const LEX_CSTRING setsp= { STRING_WITH_LEN("SET ") };
      const char *qend= no_lookahead ? lip->get_ptr() : lip->get_tok_end();
      Lex_cstring qbuf(lex->sphead->m_tmp_query, qend);
      if (lex->new_sp_instr_stmt(thd, setsp, qbuf))
        return true;
    }
    lex->pop_select();
    if (lex->check_main_unit_semantics())
    {
      /*
        "lex" can be referrenced by:
        - sp_instr_set                          SET a= expr;
        - sp_instr_set_row_field                SET r.a= expr;
        - sp_instr_stmt (just generated above)  SET @a= expr;
        In this case, "lex" is fully owned by sp_instr_xxx and it will
        be deleted by the destructor ~sp_instr_xxx().
        So we should remove "lex" from the stack sp_head::m_lex,
        to avoid double free.
        Note, in case "lex" is not owned by any sp_instr_xxx,
        it's also safe to remove it from the stack right now.
        So we can remove it unconditionally, without testing lex->sp_lex_in_use.
      */
      lex->sphead->restore_lex(thd);
      return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}

void LEX::add_key_to_list(LEX_CSTRING *field_name,
                          enum Key::Keytype type, bool check_exists)
{
  Key *key;
  MEM_ROOT *mem_root= thd->mem_root;
  key= new (mem_root)
        Key(type, &null_clex_str, HA_KEY_ALG_UNDEF, false,
             DDL_options(check_exists ?
                         DDL_options::OPT_IF_NOT_EXISTS :
                         DDL_options::OPT_NONE));
  key->columns.push_back(new (mem_root) Key_part_spec(field_name, 0),
                         mem_root);
  alter_info.key_list.push_back(key, mem_root);
}

bool LEX::add_alter_list(const char *name, Virtual_column_info *expr,
                         bool exists)
{
  MEM_ROOT *mem_root= thd->mem_root;
  Alter_column *ac= new (mem_root) Alter_column(name, expr, exists);
  if (unlikely(ac == NULL))
    return true;
  alter_info.alter_list.push_back(ac, mem_root);
  alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
  return false;
}

void LEX::init_last_field(Column_definition *field,
                          const LEX_CSTRING *field_name,
                          const CHARSET_INFO *cs)
{
  last_field= field;

  field->field_name= *field_name;

  /* reset LEX fields that are used in Create_field::set_and_check() */
  charset= cs;
}


bool LEX::set_bincmp(CHARSET_INFO *cs, bool bin)
{
  /*
     if charset is NULL - we're parsing a field declaration.
     we cannot call find_bin_collation for a field here, because actual
     field charset is determined in get_sql_field_charset() much later.
     so we only set a flag.
  */
  if (!charset)
  {
    charset= cs;
    last_field->flags|= bin ? BINCMP_FLAG : 0;
    return false;
  }

  charset= bin ? find_bin_collation(cs ? cs : charset)
               :                    cs ? cs : charset;
  return charset == NULL;
}

#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


Virtual_column_info *add_virtual_expression(THD *thd, Item *expr)
{
  Virtual_column_info *v= new (thd->mem_root) Virtual_column_info();
  if (unlikely(!v))
     return 0;
   v->expr= expr;
   v->utf8= 0;  /* connection charset */
   return v;
}



#line 733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.hh".  */
#ifndef YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
# define YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FOREIGN = 346,
    FOR_SYM = 347,
    FOR_SYSTEM_TIME_SYM = 348,
    FROM = 349,
    FULLTEXT_SYM = 350,
    GE = 351,
    GOTO_ORACLE_SYM = 352,
    GRANT = 353,
    GROUP_SYM = 354,
    GROUP_CONCAT_SYM = 355,
    LAG_SYM = 356,
    LEAD_SYM = 357,
    HAVING = 358,
    HEX_NUM = 359,
    HEX_STRING = 360,
    HOUR_MICROSECOND_SYM = 361,
    HOUR_MINUTE_SYM = 362,
    HOUR_SECOND_SYM = 363,
    IDENT = 364,
    IDENT_QUOTED = 365,
    IF_SYM = 366,
    IGNORE_DOMAIN_IDS_SYM = 367,
    IGNORE_SYM = 368,
    INDEX_SYM = 369,
    INFILE = 370,
    INNER_SYM = 371,
    INOUT_SYM = 372,
    INSENSITIVE_SYM = 373,
    INSERT = 374,
    INTERSECT_SYM = 375,
    INTERVAL_SYM = 376,
    INTO = 377,
    INT_SYM = 378,
    IN_SYM = 379,
    IS = 380,
    ITERATE_SYM = 381,
    JOIN_SYM = 382,
    KEYS = 383,
    KEY_SYM = 384,
    KILL_SYM = 385,
    LE = 386,
    LEADING = 387,
    LEAVE_SYM = 388,
    LEFT = 389,
    LEFT_PAREN_ALT = 390,
    LEFT_PAREN_WITH = 391,
    LEFT_PAREN_LIKE = 392,
    LEX_HOSTNAME = 393,
    LIKE = 394,
    LIMIT = 395,
    LINEAR_SYM = 396,
    LINES = 397,
    LOAD = 398,
    LOCATOR_SYM = 399,
    LOCK_SYM = 400,
    LONGBLOB = 401,
    LONGTEXT = 402,
    LONG_NUM = 403,
    LONG_SYM = 404,
    LOOP_SYM = 405,
    LOW_PRIORITY = 406,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 407,
    MATCH = 408,
    MAX_SYM = 409,
    MAXVALUE_SYM = 410,
    MEDIAN_SYM = 411,
    MEDIUMBLOB = 412,
    MEDIUMINT = 413,
    MEDIUMTEXT = 414,
    MINUTE_MICROSECOND_SYM = 415,
    MINUTE_SECOND_SYM = 416,
    MIN_SYM = 417,
    MODIFIES_SYM = 418,
    MOD_SYM = 419,
    MYSQL_CONCAT_SYM = 420,
    NATURAL = 421,
    NCHAR_STRING = 422,
    NE = 423,
    NEG = 424,
    NOT2_SYM = 425,
    NOT_SYM = 426,
    NOW_SYM = 427,
    NO_WRITE_TO_BINLOG = 428,
    NTILE_SYM = 429,
    NULL_SYM = 430,
    NUM = 431,
    NUMERIC_SYM = 432,
    NTH_VALUE_SYM = 433,
    ON = 434,
    OPTIMIZE = 435,
    OPTIONALLY = 436,
    ORACLE_CONCAT_SYM = 437,
    OR2_SYM = 438,
    ORDER_SYM = 439,
    OR_SYM = 440,
    OTHERS_ORACLE_SYM = 441,
    OUTER = 442,
    OUTFILE = 443,
    OUT_SYM = 444,
    OVER_SYM = 445,
    PACKAGE_ORACLE_SYM = 446,
    PAGE_CHECKSUM_SYM = 447,
    PARAM_MARKER = 448,
    PARSE_VCOL_EXPR_SYM = 449,
    PARTITION_SYM = 450,
    PERCENT_ORACLE_SYM = 451,
    PERCENT_RANK_SYM = 452,
    PERCENTILE_CONT_SYM = 453,
    PERCENTILE_DISC_SYM = 454,
    PORTION_SYM = 455,
    POSITION_SYM = 456,
    PRECISION = 457,
    PRIMARY_SYM = 458,
    PROCEDURE_SYM = 459,
    PURGE = 460,
    RAISE_ORACLE_SYM = 461,
    RANGE_SYM = 462,
    RANK_SYM = 463,
    READS_SYM = 464,
    READ_SYM = 465,
    READ_WRITE_SYM = 466,
    REAL = 467,
    RECURSIVE_SYM = 468,
    REF_SYSTEM_ID_SYM = 469,
    REFERENCES = 470,
    REGEXP = 471,
    RELEASE_SYM = 472,
    RENAME = 473,
    REPEAT_SYM = 474,
    REPLACE = 475,
    REQUIRE_SYM = 476,
    RESIGNAL_SYM = 477,
    RESTRICT = 478,
    RETURNING_SYM = 479,
    RETURN_MARIADB_SYM = 480,
    RETURN_ORACLE_SYM = 481,
    REVOKE = 482,
    RIGHT = 483,
    ROWS_SYM = 484,
    ROWTYPE_ORACLE_SYM = 485,
    ROW_NUMBER_SYM = 486,
    SECOND_MICROSECOND_SYM = 487,
    SELECT_SYM = 488,
    SENSITIVE_SYM = 489,
    SEPARATOR_SYM = 490,
    SERVER_OPTIONS = 491,
    SET = 492,
    SET_VAR = 493,
    SHIFT_LEFT = 494,
    SHIFT_RIGHT = 495,
    SHOW = 496,
    SIGNAL_SYM = 497,
    SMALLINT = 498,
    SPATIAL_SYM = 499,
    SPECIFIC_SYM = 500,
    SQLEXCEPTION_SYM = 501,
    SQLSTATE_SYM = 502,
    SQLWARNING_SYM = 503,
    SQL_BIG_RESULT = 504,
    SQL_SMALL_RESULT = 505,
    SQL_SYM = 506,
    SSL_SYM = 507,
    STARTING = 508,
    STATS_AUTO_RECALC_SYM = 509,
    STATS_PERSISTENT_SYM = 510,
    STATS_SAMPLE_PAGES_SYM = 511,
    STDDEV_SAMP_SYM = 512,
    STD_SYM = 513,
    STRAIGHT_JOIN = 514,
    SUBSTRING = 515,
    SUM_SYM = 516,
    SYSDATE = 517,
    TABLE_REF_PRIORITY = 518,
    TABLE_SYM = 519,
    TERMINATED = 520,
    TEXT_STRING = 521,
    THEN_SYM = 522,
    TINYBLOB = 523,
    TINYINT = 524,
    TINYTEXT = 525,
    TO_SYM = 526,
    TRAILING = 527,
    TRIGGER_SYM = 528,
    TRIM = 529,
    TRUE_SYM = 530,
    ULONGLONG_NUM = 531,
    UNDERSCORE_CHARSET = 532,
    UNDO_SYM = 533,
    UNION_SYM = 534,
    UNIQUE_SYM = 535,
    UNLOCK_SYM = 536,
    UNSIGNED = 537,
    UPDATE_SYM = 538,
    USAGE = 539,
    USE_SYM = 540,
    USING = 541,
    UTC_DATE_SYM = 542,
    UTC_TIMESTAMP_SYM = 543,
    UTC_TIME_SYM = 544,
    VALUES = 545,
    VALUES_IN_SYM = 546,
    VALUES_LESS_SYM = 547,
    VARBINARY = 548,
    VARCHAR = 549,
    VARIANCE_SYM = 550,
    VARYING = 551,
    VAR_SAMP_SYM = 552,
    WHEN_SYM = 553,
    WHERE = 554,
    WHILE_SYM = 555,
    WITH = 556,
    WITH_CUBE_SYM = 557,
    WITH_ROLLUP_SYM = 558,
    WITH_SYSTEM_SYM = 559,
    XOR = 560,
    YEAR_MONTH_SYM = 561,
    ZEROFILL = 562,
    IMPOSSIBLE_ACTION = 563,
    BODY_MARIADB_SYM = 564,
    ELSEIF_ORACLE_SYM = 565,
    ELSIF_MARIADB_SYM = 566,
    EXCEPTION_ORACLE_SYM = 567,
    GOTO_MARIADB_SYM = 568,
    OTHERS_MARIADB_SYM = 569,
    PACKAGE_MARIADB_SYM = 570,
    RAISE_MARIADB_SYM = 571,
    ROWTYPE_MARIADB_SYM = 572,
    ACCOUNT_SYM = 573,
    ACTION = 574,
    ADMIN_SYM = 575,
    ADDDATE_SYM = 576,
    AFTER_SYM = 577,
    AGAINST = 578,
    AGGREGATE_SYM = 579,
    ALGORITHM_SYM = 580,
    ALWAYS_SYM = 581,
    ANY_SYM = 582,
    ASCII_SYM = 583,
    AT_SYM = 584,
    ATOMIC_SYM = 585,
    AUTHORS_SYM = 586,
    AUTOEXTEND_SIZE_SYM = 587,
    AUTO_INC = 588,
    AUTO_SYM = 589,
    AVG_ROW_LENGTH = 590,
    AVG_SYM = 591,
    BACKUP_SYM = 592,
    BEGIN_MARIADB_SYM = 593,
    BEGIN_ORACLE_SYM = 594,
    BINLOG_SYM = 595,
    BIT_SYM = 596,
    BLOCK_SYM = 597,
    BOOL_SYM = 598,
    BOOLEAN_SYM = 599,
    BTREE_SYM = 600,
    BYTE_SYM = 601,
    CACHE_SYM = 602,
    CASCADED = 603,
    CATALOG_NAME_SYM = 604,
    CHAIN_SYM = 605,
    CHANGED = 606,
    CHARSET = 607,
    CHECKPOINT_SYM = 608,
    CHECKSUM_SYM = 609,
    CIPHER_SYM = 610,
    CLASS_ORIGIN_SYM = 611,
    CLIENT_SYM = 612,
    CLOB_MARIADB_SYM = 613,
    CLOB_ORACLE_SYM = 614,
    CLOSE_SYM = 615,
    COALESCE = 616,
    CODE_SYM = 617,
    COLLATION_SYM = 618,
    COLON_ORACLE_SYM = 619,
    COLUMNS = 620,
    COLUMN_ADD_SYM = 621,
    COLUMN_CHECK_SYM = 622,
    COLUMN_CREATE_SYM = 623,
    COLUMN_DELETE_SYM = 624,
    COLUMN_GET_SYM = 625,
    COLUMN_SYM = 626,
    COLUMN_NAME_SYM = 627,
    COMMENT_SYM = 628,
    COMMITTED_SYM = 629,
    COMMIT_SYM = 630,
    COMPACT_SYM = 631,
    COMPLETION_SYM = 632,
    COMPRESSED_SYM = 633,
    CONCURRENT = 634,
    CONNECTION_SYM = 635,
    CONSISTENT_SYM = 636,
    CONSTRAINT_CATALOG_SYM = 637,
    CONSTRAINT_NAME_SYM = 638,
    CONSTRAINT_SCHEMA_SYM = 639,
    CONTAINS_SYM = 640,
    CONTEXT_SYM = 641,
    CONTRIBUTORS_SYM = 642,
    CPU_SYM = 643,
    CUBE_SYM = 644,
    CURRENT_SYM = 645,
    CURRENT_POS_SYM = 646,
    CURSOR_NAME_SYM = 647,
    CYCLE_SYM = 648,
    DATAFILE_SYM = 649,
    DATA_SYM = 650,
    DATETIME = 651,
    DATE_FORMAT_SYM = 652,
    DATE_SYM = 653,
    DAY_SYM = 654,
    DEALLOCATE_SYM = 655,
    DECODE_MARIADB_SYM = 656,
    DECODE_ORACLE_SYM = 657,
    DEFINER_SYM = 658,
    DELAYED_SYM = 659,
    DELAY_KEY_WRITE_SYM = 660,
    DES_KEY_FILE = 661,
    DIAGNOSTICS_SYM = 662,
    DIRECTORY_SYM = 663,
    DISABLE_SYM = 664,
    DISCARD = 665,
    DISK_SYM = 666,
    DO_SYM = 667,
    DUMPFILE = 668,
    DUPLICATE_SYM = 669,
    DYNAMIC_SYM = 670,
    ENABLE_SYM = 671,
    END = 672,
    ENDS_SYM = 673,
    ENGINES_SYM = 674,
    ENGINE_SYM = 675,
    ENUM = 676,
    ERROR_SYM = 677,
    ERRORS = 678,
    ESCAPE_SYM = 679,
    EVENTS_SYM = 680,
    EVENT_SYM = 681,
    EVERY_SYM = 682,
    EXCHANGE_SYM = 683,
    EXAMINED_SYM = 684,
    EXCLUDE_SYM = 685,
    EXECUTE_SYM = 686,
    EXCEPTION_MARIADB_SYM = 687,
    EXIT_MARIADB_SYM = 688,
    EXIT_ORACLE_SYM = 689,
    EXPANSION_SYM = 690,
    EXPIRE_SYM = 691,
    EXPORT_SYM = 692,
    EXTENDED_SYM = 693,
    EXTENT_SIZE_SYM = 694,
    FAST_SYM = 695,
    FAULTS_SYM = 696,
    FILE_SYM = 697,
    FIRST_SYM = 698,
    FIXED_SYM = 699,
    FLUSH_SYM = 700,
    FOLLOWS_SYM = 701,
    FOLLOWING_SYM = 702,
    FORCE_SYM = 703,
    FORMAT_SYM = 704,
    FOUND_SYM = 705,
    FULL = 706,
    FUNCTION_SYM = 707,
    GENERAL = 708,
    GENERATED_SYM = 709,
    GEOMETRYCOLLECTION = 710,
    GEOMETRY_SYM = 711,
    GET_FORMAT = 712,
    GET_SYM = 713,
    GLOBAL_SYM = 714,
    GRANTS = 715,
    HANDLER_SYM = 716,
    HARD_SYM = 717,
    HASH_SYM = 718,
    HELP_SYM = 719,
    HIGH_PRIORITY = 720,
    HISTORY_SYM = 721,
    HOST_SYM = 722,
    HOSTS_SYM = 723,
    HOUR_SYM = 724,
    ID_SYM = 725,
    IDENTIFIED_SYM = 726,
    IGNORE_SERVER_IDS_SYM = 727,
    IMMEDIATE_SYM = 728,
    IMPORT = 729,
    INCREMENT_SYM = 730,
    INDEXES = 731,
    INITIAL_SIZE_SYM = 732,
    INSERT_METHOD = 733,
    INSTALL_SYM = 734,
    INVOKER_SYM = 735,
    IO_SYM = 736,
    IPC_SYM = 737,
    ISOLATION = 738,
    ISOPEN_SYM = 739,
    ISSUER_SYM = 740,
    INVISIBLE_SYM = 741,
    JSON_SYM = 742,
    KEY_BLOCK_SIZE = 743,
    LANGUAGE_SYM = 744,
    LAST_SYM = 745,
    LAST_VALUE = 746,
    LASTVAL_SYM = 747,
    LEAVES = 748,
    LESS_SYM = 749,
    LEVEL_SYM = 750,
    LINESTRING = 751,
    LIST_SYM = 752,
    LOCAL_SYM = 753,
    LOCKS_SYM = 754,
    LOGFILE_SYM = 755,
    LOGS_SYM = 756,
    MASTER_CONNECT_RETRY_SYM = 757,
    MASTER_DELAY_SYM = 758,
    MASTER_GTID_POS_SYM = 759,
    MASTER_HOST_SYM = 760,
    MASTER_LOG_FILE_SYM = 761,
    MASTER_LOG_POS_SYM = 762,
    MASTER_PASSWORD_SYM = 763,
    MASTER_PORT_SYM = 764,
    MASTER_SERVER_ID_SYM = 765,
    MASTER_SSL_CAPATH_SYM = 766,
    MASTER_SSL_CA_SYM = 767,
    MASTER_SSL_CERT_SYM = 768,
    MASTER_SSL_CIPHER_SYM = 769,
    MASTER_SSL_CRL_SYM = 770,
    MASTER_SSL_CRLPATH_SYM = 771,
    MASTER_SSL_KEY_SYM = 772,
    MASTER_SSL_SYM = 773,
    MASTER_SYM = 774,
    MASTER_USER_SYM = 775,
    MASTER_USE_GTID_SYM = 776,
    MASTER_HEARTBEAT_PERIOD_SYM = 777,
    MAX_CONNECTIONS_PER_HOUR = 778,
    MAX_QUERIES_PER_HOUR = 779,
    MAX_ROWS = 780,
    MAX_SIZE_SYM = 781,
    MAX_UPDATES_PER_HOUR = 782,
    MAX_STATEMENT_TIME_SYM = 783,
    MAX_USER_CONNECTIONS_SYM = 784,
    MEDIUM_SYM = 785,
    MEMORY_SYM = 786,
    MERGE_SYM = 787,
    MESSAGE_TEXT_SYM = 788,
    MICROSECOND_SYM = 789,
    MIGRATE_SYM = 790,
    MINUTE_SYM = 791,
    MINVALUE_SYM = 792,
    MIN_ROWS = 793,
    MODE_SYM = 794,
    MODIFY_SYM = 795,
    MONTH_SYM = 796,
    MULTILINESTRING = 797,
    MULTIPOINT = 798,
    MULTIPOLYGON = 799,
    MUTEX_SYM = 800,
    MYSQL_SYM = 801,
    MYSQL_ERRNO_SYM = 802,
    NAMES_SYM = 803,
    NAME_SYM = 804,
    NATIONAL_SYM = 805,
    NCHAR_SYM = 806,
    NEVER_SYM = 807,
    NEW_SYM = 808,
    NEXT_SYM = 809,
    NEXTVAL_SYM = 810,
    NOCACHE_SYM = 811,
    NOCYCLE_SYM = 812,
    NODEGROUP_SYM = 813,
    NONE_SYM = 814,
    NOTFOUND_SYM = 815,
    NO_SYM = 816,
    NOMAXVALUE_SYM = 817,
    NOMINVALUE_SYM = 818,
    NO_WAIT_SYM = 819,
    NOWAIT_SYM = 820,
    NUMBER_MARIADB_SYM = 821,
    NUMBER_ORACLE_SYM = 822,
    NVARCHAR_SYM = 823,
    OF_SYM = 824,
    OFFSET_SYM = 825,
    OLD_PASSWORD_SYM = 826,
    ONE_SYM = 827,
    ONLY_SYM = 828,
    ONLINE_SYM = 829,
    OPEN_SYM = 830,
    OPTIONS_SYM = 831,
    OPTION = 832,
    OWNER_SYM = 833,
    PACK_KEYS_SYM = 834,
    PAGE_SYM = 835,
    PARSER_SYM = 836,
    PARTIAL = 837,
    PARTITIONS_SYM = 838,
    PARTITIONING_SYM = 839,
    PASSWORD_SYM = 840,
    PERIOD_SYM = 841,
    PERSISTENT_SYM = 842,
    PHASE_SYM = 843,
    PLUGINS_SYM = 844,
    PLUGIN_SYM = 845,
    POINT_SYM = 846,
    POLYGON = 847,
    PORT_SYM = 848,
    PRECEDES_SYM = 849,
    PRECEDING_SYM = 850,
    PREPARE_SYM = 851,
    PRESERVE_SYM = 852,
    PREV_SYM = 853,
    PREVIOUS_SYM = 854,
    PRIVILEGES = 855,
    PROCESS = 856,
    PROCESSLIST_SYM = 857,
    PROFILE_SYM = 858,
    PROFILES_SYM = 859,
    PROXY_SYM = 860,
    QUARTER_SYM = 861,
    QUERY_SYM = 862,
    QUICK = 863,
    RAW_MARIADB_SYM = 864,
    RAW_ORACLE_SYM = 865,
    READ_ONLY_SYM = 866,
    REBUILD_SYM = 867,
    RECOVER_SYM = 868,
    REDOFILE_SYM = 869,
    REDO_BUFFER_SIZE_SYM = 870,
    REDUNDANT_SYM = 871,
    RELAY = 872,
    RELAYLOG_SYM = 873,
    RELAY_LOG_FILE_SYM = 874,
    RELAY_LOG_POS_SYM = 875,
    RELAY_THREAD = 876,
    RELOAD = 877,
    REMOVE_SYM = 878,
    REORGANIZE_SYM = 879,
    REPAIR = 880,
    REPEATABLE_SYM = 881,
    REPLICATION = 882,
    RESET_SYM = 883,
    RESTART_SYM = 884,
    RESOURCES = 885,
    RESTORE_SYM = 886,
    RESUME_SYM = 887,
    RETURNED_SQLSTATE_SYM = 888,
    RETURNS_SYM = 889,
    REUSE_SYM = 890,
    REVERSE_SYM = 891,
    ROLE_SYM = 892,
    ROLLBACK_SYM = 893,
    ROLLUP_SYM = 894,
    ROUTINE_SYM = 895,
    ROWCOUNT_SYM = 896,
    ROW_SYM = 897,
    ROW_COUNT_SYM = 898,
    ROW_FORMAT_SYM = 899,
    RTREE_SYM = 900,
    SAVEPOINT_SYM = 901,
    SCHEDULE_SYM = 902,
    SCHEMA_NAME_SYM = 903,
    SECOND_SYM = 904,
    SECURITY_SYM = 905,
    SEQUENCE_SYM = 906,
    SERIALIZABLE_SYM = 907,
    SERIAL_SYM = 908,
    SESSION_SYM = 909,
    SERVER_SYM = 910,
    SETVAL_SYM = 911,
    SHARE_SYM = 912,
    SHUTDOWN = 913,
    SIGNED_SYM = 914,
    SIMPLE_SYM = 915,
    SLAVE = 916,
    SLAVES = 917,
    SLAVE_POS_SYM = 918,
    SLOW = 919,
    SNAPSHOT_SYM = 920,
    SOCKET_SYM = 921,
    SOFT_SYM = 922,
    SONAME_SYM = 923,
    SOUNDS_SYM = 924,
    SOURCE_SYM = 925,
    SQL_BUFFER_RESULT = 926,
    SQL_CACHE_SYM = 927,
    SQL_CALC_FOUND_ROWS = 928,
    SQL_NO_CACHE_SYM = 929,
    SQL_THREAD = 930,
    STAGE_SYM = 931,
    STARTS_SYM = 932,
    START_SYM = 933,
    STATEMENT_SYM = 934,
    STATUS_SYM = 935,
    STOP_SYM = 936,
    STORAGE_SYM = 937,
    STORED_SYM = 938,
    STRING_SYM = 939,
    SUBCLASS_ORIGIN_SYM = 940,
    SUBDATE_SYM = 941,
    SUBJECT_SYM = 942,
    SUBPARTITIONS_SYM = 943,
    SUBPARTITION_SYM = 944,
    SUPER_SYM = 945,
    SUSPEND_SYM = 946,
    SWAPS_SYM = 947,
    SWITCHES_SYM = 948,
    SYSTEM = 949,
    SYSTEM_TIME_SYM = 950,
    TABLES = 951,
    TABLESPACE = 952,
    TABLE_CHECKSUM_SYM = 953,
    TABLE_NAME_SYM = 954,
    TEMPORARY = 955,
    TEMPTABLE_SYM = 956,
    TEXT_SYM = 957,
    THAN_SYM = 958,
    TIES_SYM = 959,
    TIMESTAMP = 960,
    TIMESTAMP_ADD = 961,
    TIMESTAMP_DIFF = 962,
    TIME_SYM = 963,
    TRANSACTION_SYM = 964,
    TRANSACTIONAL_SYM = 965,
    TRIGGERS_SYM = 966,
    TRIM_ORACLE = 967,
    TRUNCATE_SYM = 968,
    TYPES_SYM = 969,
    TYPE_SYM = 970,
    UDF_RETURNS_SYM = 971,
    UNBOUNDED_SYM = 972,
    UNCOMMITTED_SYM = 973,
    UNDEFINED_SYM = 974,
    UNDOFILE_SYM = 975,
    UNDO_BUFFER_SIZE_SYM = 976,
    UNICODE_SYM = 977,
    UNINSTALL_SYM = 978,
    UNKNOWN_SYM = 979,
    UNTIL_SYM = 980,
    UPGRADE_SYM = 981,
    USER_SYM = 982,
    USE_FRM = 983,
    VALUE_SYM = 984,
    VARCHAR2_MARIADB_SYM = 985,
    VARCHAR2_ORACLE_SYM = 986,
    VARIABLES = 987,
    VERSIONING_SYM = 988,
    VIA_SYM = 989,
    VIEW_SYM = 990,
    VIRTUAL_SYM = 991,
    WAIT_SYM = 992,
    WARNINGS = 993,
    WEEK_SYM = 994,
    WEIGHT_STRING_SYM = 995,
    WINDOW_SYM = 996,
    WITHIN = 997,
    WITHOUT = 998,
    WORK_SYM = 999,
    WRAPPER_SYM = 1000,
    WRITE_SYM = 1001,
    X509_SYM = 1002,
    XA_SYM = 1003,
    XML_SYM = 1004,
    YEAR_SYM = 1005,
    PREC_BELOW_ESCAPE = 1006,
    CONDITIONLESS_JOIN = 1007,
    ON_SYM = 1008,
    PREC_BELOW_NOT = 1009,
    SUBQUERY_AS_EXPR = 1010,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1011,
    USER = 1012,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1013,
    EMPTY_FROM_CLAUSE = 1014
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;
  struct
  {
    enum sub_select_type unit_type;
    bool distinct;
  } unit_operation;
  struct
  {
    SELECT_LEX *first;
    SELECT_LEX *prev_last;
  } select_list;
  SQL_I_List<ORDER> *select_order;
  Lex_select_lock select_lock;
  Lex_select_limit select_limit;
  Lex_order_limit_lock *order_limit_lock;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  USER_AUTH *user_auth;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  st_select_lex_unit *select_lex_unit;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_sp_aggregate_type sp_aggregate_type;
  enum enum_view_suid view_suid;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (THD *thd);

#endif /* !YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:358  */

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  736
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   97909

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  782
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1206
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3383
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5845

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1014

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   775,     2,     2,     2,   764,   759,     2,
     771,   772,   762,   761,   774,   760,   779,   763,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   781,   778,
     757,   755,   756,     2,   780,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   765,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   776,   758,   777,   766,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     767,   768,   769,   770,   773
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2222,  2222,  2232,  2231,  2256,  2263,  2265,  2269,  2270,
    2271,  2276,  2277,  2278,  2279,  2280,  2281,  2282,  2283,  2284,
    2285,  2286,  2287,  2288,  2289,  2290,  2291,  2292,  2293,  2294,
    2295,  2296,  2297,  2298,  2299,  2300,  2301,  2302,  2303,  2304,
    2305,  2306,  2307,  2308,  2309,  2310,  2311,  2312,  2313,  2314,
    2315,  2316,  2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,
    2325,  2326,  2327,  2328,  2329,  2330,  2331,  2332,  2333,  2334,
    2338,  2345,  2346,  2351,  2350,  2361,  2367,  2369,  2366,  2378,
    2380,  2379,  2389,  2394,  2406,  2405,  2422,  2421,  2430,  2431,
    2435,  2439,  2443,  2447,  2451,  2455,  2465,  2470,  2474,  2478,
    2482,  2486,  2490,  2495,  2499,  2504,  2532,  2536,  2540,  2545,
    2548,  2550,  2551,  2555,  2561,  2563,  2564,  2568,  2574,  2576,
    2577,  2581,  2588,  2592,  2607,  2611,  2617,  2623,  2629,  2639,
    2643,  2647,  2661,  2673,  2660,  2696,  2695,  2751,  2758,  2750,
    2770,  2776,  2769,  2788,  2794,  2787,  2806,  2805,  2823,  2821,
    2836,  2834,  2847,  2846,  2857,  2856,  2866,  2865,  2877,  2875,
    2889,  2887,  2899,  2906,  2913,  2920,  2924,  2928,  2928,  2934,
    2935,  2939,  2940,  2944,  2949,  2955,  2961,  2969,  2975,  2981,
    2989,  2997,  3005,  3013,  3021,  3029,  3041,  3058,  3057,  3069,
    3070,  3074,  3079,  3084,  3089,  3094,  3099,  3104,  3112,  3111,
    3144,  3143,  3150,  3157,  3158,  3164,  3170,  3180,  3186,  3192,
    3194,  3201,  3202,  3206,  3216,  3217,  3225,  3225,  3267,  3279,
    3280,  3284,  3289,  3297,  3298,  3302,  3303,  3308,  3310,  3312,
    3314,  3316,  3318,  3320,  3326,  3327,  3331,  3332,  3337,  3336,
    3345,  3347,  3350,  3352,  3356,  3360,  3369,  3374,  3374,  3384,
    3385,  3389,  3397,  3402,  3409,  3415,  3420,  3425,  3433,  3435,
    3439,  3440,  3444,  3448,  3449,  3450,  3451,  3456,  3455,  3467,
    3468,  3472,  3473,  3478,  3481,  3493,  3498,  3504,  3510,  3519,
    3527,  3531,  3536,  3544,  3548,  3555,  3565,  3573,  3581,  3592,
    3593,  3600,  3602,  3601,  3620,  3619,  3633,  3635,  3640,  3650,
    3649,  3665,  3666,  3667,  3668,  3673,  3675,  3680,  3695,  3703,
    3707,  3727,  3728,  3732,  3736,  3742,  3748,  3754,  3760,  3770,
    3775,  3783,  3791,  3806,  3812,  3813,  3819,  3822,  3826,  3834,
    3851,  3853,  3871,  3877,  3879,  3881,  3883,  3885,  3887,  3889,
    3891,  3893,  3895,  3897,  3899,  3904,  3912,  3928,  3929,  3934,
    3940,  3949,  3956,  3965,  3974,  3979,  3988,  3990,  3992,  4001,
    4006,  4013,  4022,  4031,  4033,  4035,  4037,  4039,  4041,  4043,
    4045,  4047,  4049,  4051,  4053,  4055,  4060,  4061,  4069,  4081,
    4096,  4097,  4110,  4111,  4112,  4113,  4114,  4118,  4119,  4120,
    4121,  4122,  4123,  4124,  4125,  4126,  4127,  4131,  4132,  4133,
    4134,  4139,  4138,  4149,  4149,  4166,  4167,  4172,  4171,  4182,
    4193,  4193,  4197,  4202,  4207,  4213,  4222,  4227,  4232,  4238,
    4248,  4256,  4264,  4272,  4282,  4281,  4300,  4299,  4317,  4323,
    4331,  4332,  4336,  4344,  4349,  4354,  4362,  4363,  4371,  4389,
    4403,  4420,  4422,  4438,  4420,  4457,  4459,  4460,  4465,  4464,
    4534,  4536,  4534,  4545,  4550,  4551,  4555,  4556,  4561,  4565,
    4560,  4585,  4589,  4584,  4607,  4617,  4621,  4625,  4626,  4630,
    4641,  4639,  4656,  4655,  4670,  4669,  4686,  4687,  4691,  4699,
    4704,  4711,  4720,  4735,  4734,  4751,  4750,  4770,  4779,  4778,
    4786,  4785,  4794,  4799,  4808,  4793,  4818,  4817,  4828,  4827,
    4837,  4836,  4847,  4854,  4846,  4871,  4870,  4882,  4884,  4889,
    4891,  4893,  4910,  4915,  4921,  4928,  4929,  4937,  4943,  4952,
    4958,  4964,  4965,  4969,  4969,  4974,  4975,  4976,  4980,  4981,
    4982,  4986,  4990,  4991,  4992,  4996,  4997,  4998,  4999,  5000,
    5001,  5002,  5003,  5007,  5011,  5012,  5013,  5017,  5018,  5019,
    5020,  5021,  5025,  5029,  5030,  5031,  5035,  5036,  5037,  5038,
    5039,  5040,  5041,  5045,  5049,  5050,  5051,  5055,  5056,  5057,
    5062,  5070,  5078,  5086,  5099,  5112,  5117,  5122,  5130,  5138,
    5146,  5154,  5162,  5170,  5178,  5188,  5198,  5208,  5210,  5214,
    5219,  5229,  5230,  5243,  5242,  5245,  5246,  5260,  5261,  5265,
    5266,  5270,  5275,  5286,  5323,  5324,  5329,  5328,  5344,  5359,
    5358,  5380,  5379,  5385,  5393,  5392,  5395,  5397,  5400,  5399,
    5408,  5411,  5410,  5419,  5420,  5426,  5427,  5444,  5445,  5449,
    5450,  5454,  5468,  5478,  5489,  5498,  5499,  5512,  5514,  5513,
    5518,  5516,  5527,  5528,  5532,  5546,  5558,  5559,  5572,  5581,
    5603,  5604,  5609,  5608,  5632,  5644,  5660,  5659,  5674,  5673,
    5687,  5692,  5697,  5717,  5735,  5739,  5766,  5778,  5779,  5784,
    5793,  5783,  5818,  5819,  5823,  5834,  5853,  5866,  5892,  5893,
    5898,  5897,  5934,  5943,  5944,  5948,  5949,  5953,  5955,  5961,
    5967,  5969,  5971,  5973,  5975,  5977,  5982,  5983,  5989,  6005,
    6008,  6025,  6026,  6030,  6031,  6035,  6036,  6040,  6041,  6046,
    6049,  6057,  6060,  6067,  6071,  6077,  6079,  6083,  6084,  6088,
    6089,  6090,  6094,  6109,  6114,  6119,  6124,  6129,  6134,  6139,
    6154,  6160,  6175,  6180,  6195,  6201,  6219,  6224,  6229,  6234,
    6239,  6244,  6250,  6249,  6275,  6276,  6277,  6282,  6287,  6292,
    6294,  6296,  6298,  6304,  6309,  6314,  6323,  6332,  6338,  6344,
    6349,  6352,  6354,  6358,  6377,  6385,  6400,  6410,  6421,  6422,
    6423,  6424,  6425,  6426,  6427,  6431,  6432,  6433,  6437,  6438,
    6439,  6440,  6445,  6452,  6459,  6460,  6464,  6465,  6466,  6467,
    6468,  6472,  6474,  6480,  6479,  6487,  6486,  6494,  6493,  6501,
    6500,  6510,  6507,  6518,  6516,  6525,  6524,  6563,  6571,  6579,
    6587,  6588,  6592,  6602,  6603,  6607,  6608,  6612,  6617,  6616,
    6652,  6652,  6655,  6654,  6664,  6665,  6669,  6670,  6674,  6675,
    6679,  6680,  6684,  6685,  6686,  6687,  6689,  6688,  6694,  6699,
    6707,  6708,  6713,  6716,  6720,  6724,  6731,  6732,  6736,  6737,
    6741,  6747,  6753,  6754,  6762,  6761,  6783,  6784,  6794,  6802,
    6814,  6814,  6817,  6818,  6826,  6827,  6828,  6829,  6830,  6834,
    6835,  6836,  6852,  6856,  6860,  6864,  6866,  6873,  6875,  6880,
    6882,  6883,  6884,  6888,  6892,  6897,  6902,  6906,  6910,  6915,
    6920,  6928,  6946,  6947,  6954,  6975,  6986,  6991,  6996,  7001,
    7006,  7017,  7022,  7027,  7032,  7034,  7036,  7038,  7040,  7042,
    7044,  7046,  7054,  7056,  7061,  7062,  7063,  7064,  7065,  7066,
    7067,  7068,  7072,  7076,  7077,  7081,  7082,  7086,  7087,  7088,
    7089,  7090,  7094,  7095,  7096,  7097,  7098,  7102,  7108,  7109,
    7114,  7116,  7123,  7124,  7125,  7129,  7133,  7134,  7135,  7136,
    7137,  7138,  7142,  7143,  7144,  7145,  7149,  7150,  7154,  7155,
    7159,  7160,  7165,  7166,  7170,  7171,  7172,  7179,  7180,  7186,
    7193,  7197,  7198,  7202,  7203,  7207,  7215,  7223,  7232,  7236,
    7242,  7246,  7247,  7256,  7265,  7271,  7277,  7290,  7296,  7306,
    7320,  7321,  7325,  7330,  7334,  7335,  7339,  7340,  7344,  7351,
    7355,  7356,  7360,  7368,  7369,  7373,  7374,  7378,  7379,  7383,
    7384,  7385,  7393,  7394,  7398,  7399,  7400,  7401,  7405,  7406,
    7411,  7410,  7423,  7424,  7428,  7431,  7432,  7433,  7434,  7438,
    7446,  7453,  7454,  7458,  7468,  7469,  7473,  7474,  7477,  7479,
    7483,  7495,  7496,  7500,  7507,  7520,  7521,  7523,  7525,  7531,
    7536,  7542,  7548,  7555,  7565,  7566,  7567,  7568,  7569,  7573,
    7574,  7578,  7579,  7583,  7584,  7588,  7589,  7590,  7594,  7595,
    7599,  7603,  7615,  7616,  7620,  7621,  7625,  7626,  7630,  7631,
    7635,  7636,  7640,  7641,  7645,  7646,  7651,  7652,  7653,  7657,
    7659,  7664,  7669,  7671,  7679,  7687,  7693,  7702,  7703,  7707,
    7711,  7712,  7722,  7723,  7724,  7728,  7732,  7739,  7745,  7757,
    7758,  7762,  7764,  7774,  7790,  7773,  7812,  7811,  7828,  7837,
    7836,  7857,  7856,  7877,  7876,  7895,  7889,  7908,  7907,  7946,
    7951,  7956,  7961,  7967,  7966,  7973,  7980,  7992,  7979,  8014,
    8015,  8019,  8025,  8026,  8030,  8034,  8038,  8047,  8048,  8049,
    8050,  8054,  8055,  8067,  8068,  8072,  8073,  8076,  8078,  8086,
    8094,  8096,  8098,  8099,  8107,  8108,  8114,  8123,  8121,  8134,
    8147,  8146,  8159,  8157,  8170,  8177,  8187,  8188,  8197,  8204,
    8208,  8214,  8212,  8229,  8231,  8236,  8244,  8243,  8257,  8261,
    8260,  8272,  8273,  8277,  8290,  8291,  8295,  8299,  8306,  8311,
    8315,  8322,  8329,  8333,  8338,  8346,  8354,  8364,  8375,  8385,
    8396,  8406,  8412,  8418,  8423,  8429,  8443,  8457,  8462,  8466,
    8471,  8472,  8473,  8478,  8483,  8487,  8497,  8499,  8500,  8501,
    8502,  8506,  8511,  8519,  8524,  8532,  8533,  8537,  8538,  8542,
    8542,  8545,  8547,  8551,  8552,  8556,  8557,  8565,  8566,  8567,
    8571,  8572,  8577,  8586,  8587,  8588,  8589,  8594,  8593,  8603,
    8602,  8610,  8617,  8627,  8644,  8647,  8654,  8658,  8665,  8669,
    8673,  8680,  8680,  8686,  8687,  8691,  8692,  8693,  8697,  8698,
    8707,  8714,  8715,  8720,  8719,  8731,  8732,  8733,  8737,  8739,
    8738,  8745,  8744,  8765,  8766,  8770,  8771,  8775,  8776,  8777,
    8781,  8782,  8787,  8786,  8807,  8808,  8812,  8817,  8818,  8825,
    8827,  8832,  8834,  8833,  8846,  8848,  8847,  8861,  8862,  8867,
    8876,  8877,  8878,  8882,  8889,  8899,  8907,  8916,  8918,  8917,
    8923,  8922,  8945,  8946,  8950,  8951,  8955,  8956,  8957,  8958,
    8959,  8960,  8964,  8965,  8970,  8969,  8990,  8991,  8992,  8997,
    8996,  9006,  9013,  9019,  9028,  9029,  9033,  9049,  9048,  9061,
    9062,  9066,  9067,  9071,  9082,  9093,  9094,  9099,  9098,  9113,
    9114,  9118,  9119,  9123,  9134,  9146,  9145,  9153,  9153,  9162,
    9163,  9168,  9169,  9179,  9178,  9193,  9192,  9211,  9210,  9227,
    9225,  9246,  9247,  9252,  9251,  9265,  9275,  9264,  9285,  9297,
    9361,  9366,  9381,  9382,  9397,  9396,  9412,  9411,  9424,  9426,
    9441,  9449,  9447,  9463,  9481,  9483,  9493,  9497,  9538,  9547,
    9557,  9558,  9562,  9566,  9572,  9579,  9581,  9590,  9594,  9598,
    9605,  9614,  9618,  9625,  9642,  9645,  9653,  9656,  9663,  9667,
    9671,  9675,  9682,  9683,  9687,  9688,  9697,  9710,  9716,  9727,
    9730,  9739,  9742,  9747,  9755,  9756,  9757,  9771,  9776,  9798,
    9804,  9810,  9816,  9817,  9818,  9819,  9820,  9824,  9825,  9826,
    9830,  9831,  9832,  9836,  9837,  9842,  9893,  9900,  9943,  9949,
    9955,  9961,  9967,  9973,  9979,  9985,  9989,  9995, 10001, 10007,
   10013, 10019, 10023, 10029, 10038, 10044, 10052, 10058, 10067, 10073,
   10081, 10091, 10098, 10106, 10112, 10121, 10125, 10131, 10137, 10143,
   10149, 10156, 10162, 10168, 10174, 10180, 10187, 10193, 10199, 10205,
   10211, 10217, 10223, 10229, 10235, 10239, 10240, 10244, 10245, 10249,
   10250, 10254, 10255, 10259, 10260, 10261, 10262, 10263, 10264, 10268,
   10269, 10274, 10278, 10282, 10283, 10284, 10288, 10289, 10290, 10291,
   10292, 10293, 10297, 10298, 10299, 10304, 10303, 10309, 10317, 10340,
   10347, 10356, 10357, 10358, 10359, 10363, 10372, 10373, 10374, 10375,
   10376, 10377, 10378, 10379, 10411, 10412, 10413, 10414, 10415, 10416,
   10417, 10418, 10419, 10427, 10435, 10436, 10443, 10449, 10454, 10464,
   10469, 10474, 10480, 10485, 10491, 10502, 10509, 10514, 10519, 10524,
   10529, 10534, 10539, 10547, 10548, 10549, 10550, 10558, 10559, 10567,
   10568, 10574, 10578, 10584, 10590, 10599, 10600, 10609, 10616, 10630,
   10636, 10642, 10651, 10660, 10666, 10672, 10678, 10684, 10699, 10710,
   10716, 10722, 10728, 10734, 10740, 10748, 10755, 10759, 10764, 10772,
   10793, 10800, 10806, 10813, 10820, 10826, 10832, 10838, 10844, 10850,
   10856, 10862, 10868, 10875, 10881, 10888, 10894, 10899, 10904, 10909,
   10914, 10932, 10938, 10944, 10949, 10956, 10963, 10971, 10978, 10985,
   10992, 10999, 11016, 11022, 11028, 11034, 11040, 11047, 11053, 11059,
   11068, 11079, 11086, 11092, 11098, 11105, 11113, 11119, 11125, 11130,
   11136, 11144, 11150, 11156, 11162, 11168, 11176, 11188, 11195, 11210,
   11216, 11223, 11230, 11237, 11244, 11251, 11255, 11262, 11280, 11279,
   11347, 11355, 11357, 11362, 11363, 11367, 11368, 11372, 11373, 11377,
   11384, 11392, 11419, 11425, 11431, 11437, 11443, 11449, 11458, 11465,
   11467, 11464, 11474, 11485, 11491, 11497, 11503, 11509, 11515, 11521,
   11527, 11533, 11540, 11539, 11564, 11573, 11591, 11593, 11598, 11615,
   11622, 11629, 11636, 11643, 11650, 11657, 11664, 11671, 11678, 11689,
   11696, 11707, 11718, 11738, 11737, 11743, 11760, 11766, 11775, 11784,
   11794, 11793, 11805, 11815, 11823, 11828, 11836, 11837, 11842, 11847,
   11850, 11852, 11856, 11861, 11869, 11870, 11874, 11878, 11885, 11892,
   11899, 11912, 11911, 11928, 11931, 11930, 11935, 11934, 11939, 11938,
   11942, 11947, 11948, 11952, 11953, 11954, 11955, 11956, 11957, 11958,
   11959, 11963, 11964, 11965, 11966, 11973, 11974, 11978, 11983, 11991,
   11992, 11996, 12003, 12011, 12020, 12030, 12031, 12040, 12049, 12061,
   12062, 12074, 12085, 12086, 12092, 12097, 12111, 12119, 12117, 12137,
   12135, 12148, 12160, 12158, 12178, 12177, 12189, 12202, 12200, 12221,
   12220, 12233, 12247, 12248, 12249, 12253, 12254, 12262, 12263, 12267,
   12276, 12277, 12278, 12283, 12287, 12288, 12292, 12293, 12297, 12298,
   12306, 12314, 12322, 12323, 12336, 12354, 12363, 12364, 12369, 12372,
   12373, 12374, 12378, 12379, 12384, 12383, 12389, 12388, 12396, 12397,
   12400, 12402, 12402, 12406, 12406, 12411, 12412, 12416, 12418, 12423,
   12424, 12428, 12439, 12453, 12454, 12455, 12456, 12457, 12458, 12459,
   12460, 12461, 12462, 12463, 12464, 12468, 12469, 12470, 12471, 12472,
   12473, 12474, 12475, 12476, 12480, 12481, 12482, 12483, 12486, 12488,
   12489, 12493, 12494, 12498, 12506, 12508, 12512, 12514, 12513, 12527,
   12530, 12529, 12544, 12549, 12564, 12566, 12570, 12575, 12583, 12584,
   12601, 12624, 12625, 12631, 12632, 12636, 12649, 12648, 12657, 12658,
   12667, 12668, 12672, 12673, 12677, 12678, 12692, 12693, 12697, 12707,
   12716, 12723, 12730, 12740, 12741, 12748, 12758, 12759, 12761, 12763,
   12765, 12767, 12776, 12780, 12781, 12785, 12799, 12800, 12806, 12805,
   12816, 12822, 12831, 12832, 12833, 12838, 12839, 12844, 12851, 12857,
   12867, 12876, 12882, 12888, 12897, 12902, 12907, 12911, 12917, 12923,
   12932, 12941, 12945, 12952, 12953, 12957, 12962, 12967, 12980, 12984,
   12988, 12992, 12997, 13000, 13004, 13017, 13025, 13038, 13040, 13044,
   13045, 13049, 13050, 13051, 13052, 13053, 13054, 13058, 13059, 13060,
   13061, 13062, 13066, 13067, 13068, 13069, 13073, 13074, 13075, 13076,
   13077, 13081, 13082, 13083, 13084, 13085, 13089, 13094, 13095, 13099,
   13100, 13104, 13105, 13106, 13111, 13110, 13142, 13143, 13147, 13148,
   13152, 13162, 13162, 13174, 13175, 13178, 13198, 13202, 13207, 13215,
   13221, 13232, 13220, 13234, 13249, 13261, 13260, 13281, 13280, 13290,
   13289, 13312, 13318, 13332, 13347, 13355, 13359, 13364, 13363, 13372,
   13377, 13383, 13388, 13393, 13400, 13398, 13412, 13413, 13417, 13429,
   13442, 13443, 13447, 13461, 13465, 13474, 13477, 13484, 13485, 13493,
   13504, 13492, 13519, 13529, 13518, 13544, 13552, 13553, 13560, 13564,
   13565, 13574, 13575, 13579, 13579, 13592, 13593, 13595, 13594, 13607,
   13613, 13615, 13619, 13621, 13627, 13631, 13632, 13636, 13637, 13641,
   13651, 13652, 13656, 13657, 13661, 13662, 13666, 13667, 13672, 13671,
   13687, 13686, 13701, 13702, 13706, 13707, 13711, 13716, 13724, 13732,
   13743, 13744, 13750, 13758, 13760, 13762, 13760, 13772, 13786, 13793,
   13803, 13792, 13832, 13833, 13837, 13846, 13847, 13851, 13861, 13862,
   13869, 13868, 13885, 13888, 13895, 13896, 13904, 13919, 13927, 13938,
   13937, 13952, 13951, 13967, 13969, 13973, 13974, 13978, 13993, 14011,
   14012, 14016, 14017, 14021, 14022, 14023, 14028, 14027, 14048, 14050,
   14053, 14055, 14058, 14059, 14062, 14066, 14070, 14074, 14078, 14082,
   14086, 14090, 14094, 14102, 14105, 14115, 14114, 14133, 14140, 14148,
   14156, 14164, 14172, 14180, 14187, 14194, 14200, 14202, 14204, 14213,
   14217, 14222, 14221, 14228, 14227, 14233, 14242, 14249, 14254, 14259,
   14264, 14269, 14274, 14276, 14278, 14280, 14287, 14295, 14297, 14305,
   14312, 14319, 14327, 14333, 14338, 14346, 14354, 14362, 14366, 14371,
   14378, 14383, 14390, 14397, 14403, 14409, 14415, 14423, 14428, 14435,
   14442, 14449, 14456, 14461, 14466, 14471, 14476, 14483, 14505, 14507,
   14509, 14514, 14515, 14518, 14520, 14524, 14525, 14529, 14530, 14534,
   14535, 14539, 14540, 14544, 14545, 14549, 14550, 14558, 14570, 14569,
   14588, 14587, 14597, 14598, 14599, 14600, 14601, 14602, 14606, 14607,
   14611, 14618, 14619, 14621, 14622, 14626, 14627, 14640, 14641, 14642,
   14657, 14656, 14668, 14667, 14679, 14684, 14685, 14700, 14703, 14702,
   14715, 14716, 14721, 14723, 14725, 14727, 14729, 14731, 14739, 14741,
   14743, 14745, 14750, 14752, 14760, 14762, 14764, 14766, 14768, 14785,
   14786, 14790, 14794, 14807, 14806, 14819, 14827, 14828, 14831, 14833,
   14834, 14838, 14854, 14855, 14860, 14859, 14869, 14870, 14874, 14874,
   14878, 14877, 14883, 14887, 14888, 14892, 14893, 14900, 14905, 14904,
   14919, 14918, 14933, 14934, 14935, 14939, 14940, 14941, 14942, 14950,
   14954, 14963, 14963, 14968, 14969, 14978, 14990, 15004, 15015, 15028,
   14989, 15041, 15042, 15046, 15047, 15051, 15052, 15060, 15064, 15065,
   15066, 15069, 15071, 15075, 15076, 15080, 15085, 15092, 15097, 15104,
   15106, 15110, 15111, 15115, 15120, 15128, 15129, 15133, 15135, 15143,
   15144, 15148, 15149, 15150, 15154, 15156, 15161, 15162, 15171, 15172,
   15176, 15177, 15181, 15194, 15199, 15204, 15209, 15217, 15225, 15230,
   15238, 15246, 15261, 15268, 15274, 15284, 15285, 15293, 15294, 15295,
   15296, 15310, 15316, 15322, 15328, 15334, 15340, 15359, 15369, 15379,
   15385, 15392, 15402, 15409, 15416, 15427, 15426, 15449, 15450, 15455,
   15456, 15463, 15461, 15487, 15488, 15494, 15499, 15508, 15523, 15524,
   15528, 15533, 15541, 15546, 15554, 15559, 15564, 15569, 15575, 15580,
   15588, 15593, 15598, 15603, 15609, 15617, 15618, 15629, 15637, 15641,
   15647, 15653, 15663, 15669, 15678, 15688, 15689, 15693, 15694, 15695,
   15699, 15707, 15715, 15723, 15731, 15732, 15740, 15741, 15749, 15750,
   15755, 15764, 15765, 15773, 15774, 15782, 15783, 15784, 15788, 15799,
   15828, 15837, 15837, 15839, 15849, 15850, 15851, 15852, 15853, 15854,
   15855, 15856, 15861, 15862, 15863, 15864, 15865, 15866, 15867, 15868,
   15869, 15877, 15878, 15879, 15880, 15884, 15885, 15886, 15887, 15888,
   15889, 15890, 15891, 15895, 15896, 15897, 15898, 15899, 15900, 15901,
   15902, 15903, 15907, 15908, 15909, 15910, 15911, 15912, 15913, 15914,
   15927, 15928, 15929, 15930, 15931, 15932, 15933, 15934, 15935, 15936,
   15937, 15938, 15939, 15940, 15941, 15942, 15943, 15944, 15945, 15946,
   15947, 15948, 15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956,
   15957, 15958, 15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966,
   15967, 15968, 15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976,
   15977, 15978, 15979, 15980, 15981, 16022, 16023, 16024, 16025, 16026,
   16027, 16038, 16039, 16040, 16041, 16042, 16043, 16044, 16045, 16046,
   16047, 16051, 16052, 16053, 16060, 16061, 16062, 16066, 16067, 16068,
   16077, 16078, 16079, 16080, 16081, 16082, 16083, 16084, 16085, 16086,
   16087, 16088, 16089, 16090, 16091, 16092, 16093, 16094, 16095, 16096,
   16097, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106,
   16107, 16108, 16109, 16110, 16118, 16119, 16120, 16121, 16122, 16123,
   16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133,
   16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141, 16142, 16143,
   16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151, 16152, 16153,
   16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163,
   16164, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177,
   16178, 16179, 16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187,
   16188, 16189, 16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197,
   16198, 16199, 16200, 16201, 16202, 16203, 16204, 16205, 16206, 16207,
   16208, 16209, 16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217,
   16218, 16219, 16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227,
   16228, 16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237,
   16238, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247,
   16248, 16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257,
   16258, 16259, 16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267,
   16268, 16269, 16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277,
   16278, 16279, 16280, 16281, 16282, 16283, 16284, 16285, 16286, 16287,
   16288, 16289, 16290, 16291, 16292, 16293, 16294, 16295, 16296, 16297,
   16298, 16299, 16300, 16301, 16302, 16303, 16304, 16305, 16306, 16307,
   16308, 16309, 16310, 16311, 16312, 16313, 16314, 16315, 16316, 16317,
   16318, 16319, 16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327,
   16328, 16329, 16330, 16331, 16332, 16333, 16334, 16335, 16336, 16337,
   16338, 16339, 16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347,
   16348, 16349, 16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357,
   16358, 16359, 16360, 16361, 16362, 16363, 16364, 16365, 16366, 16367,
   16368, 16369, 16370, 16371, 16372, 16373, 16374, 16375, 16376, 16377,
   16378, 16379, 16380, 16381, 16382, 16383, 16384, 16385, 16386, 16387,
   16388, 16389, 16390, 16391, 16392, 16393, 16394, 16395, 16396, 16397,
   16398, 16399, 16400, 16401, 16402, 16403, 16404, 16405, 16406, 16407,
   16408, 16409, 16410, 16411, 16412, 16413, 16414, 16415, 16416, 16417,
   16418, 16419, 16420, 16421, 16422, 16423, 16424, 16425, 16426, 16427,
   16428, 16429, 16430, 16431, 16432, 16433, 16434, 16435, 16436, 16437,
   16438, 16450, 16449, 16465, 16471, 16464, 16491, 16492, 16498, 16497,
   16504, 16503, 16513, 16512, 16523, 16522, 16528, 16536, 16538, 16543,
   16543, 16552, 16551, 16565, 16564, 16569, 16573, 16574, 16575, 16579,
   16580, 16581, 16582, 16586, 16587, 16588, 16589, 16594, 16599, 16604,
   16613, 16618, 16623, 16628, 16633, 16638, 16643, 16648, 16662, 16673,
   16692, 16710, 16722, 16730, 16735, 16751, 16752, 16753, 16754, 16758,
   16777, 16795, 16796, 16800, 16801, 16802, 16803, 16807, 16821, 16825,
   16830, 16835, 16846, 16847, 16848, 16854, 16860, 16872, 16871, 16885,
   16886, 16892, 16901, 16902, 16906, 16907, 16911, 16930, 16931, 16932,
   16937, 16938, 16943, 16942, 16960, 16959, 16971, 16980, 16990, 16989,
   17030, 17031, 17035, 17036, 17040, 17041, 17042, 17043, 17045, 17044,
   17057, 17058, 17059, 17060, 17061, 17067, 17072, 17078, 17084, 17090,
   17097, 17104, 17108, 17115, 17124, 17126, 17131, 17136, 17143, 17150,
   17157, 17164, 17171, 17178, 17190, 17191, 17195, 17196, 17200, 17205,
   17213, 17223, 17242, 17245, 17247, 17251, 17252, 17259, 17261, 17265,
   17266, 17271, 17270, 17274, 17273, 17277, 17276, 17280, 17279, 17282,
   17283, 17284, 17285, 17286, 17287, 17288, 17289, 17290, 17291, 17292,
   17293, 17294, 17295, 17296, 17297, 17298, 17299, 17300, 17301, 17302,
   17303, 17304, 17305, 17306, 17307, 17308, 17312, 17313, 17317, 17318,
   17322, 17329, 17336, 17346, 17356, 17365, 17374, 17387, 17392, 17400,
   17405, 17413, 17418, 17425, 17425, 17426, 17426, 17429, 17435, 17441,
   17446, 17453, 17459, 17466, 17475, 17479, 17485, 17495, 17499, 17503,
   17504, 17508, 17536, 17538, 17542, 17546, 17550, 17557, 17562, 17567,
   17572, 17577, 17585, 17586, 17590, 17591, 17596, 17597, 17601, 17602,
   17606, 17607, 17611, 17612, 17617, 17616, 17626, 17635, 17636, 17640,
   17641, 17646, 17647, 17648, 17653, 17654, 17655, 17659, 17671, 17680,
   17686, 17695, 17704, 17717, 17719, 17721, 17729, 17730, 17731, 17735,
   17736, 17742, 17743, 17744, 17745, 17746, 17747, 17757, 17758, 17763,
   17776, 17790, 17791, 17792, 17796, 17797, 17801, 17802, 17807, 17808,
   17812, 17818, 17827, 17827, 17841, 17842, 17843, 17844, 17854, 17856,
   17862, 17868, 17878, 17887, 17893, 17898, 17902, 17876, 17952, 17951,
   17968, 17967, 17983, 17991, 17982, 18005, 18009, 18013, 18017, 18021,
   18025, 18033, 18034, 18050, 18057, 18064, 18074, 18075, 18076, 18080,
   18081, 18082, 18086, 18087, 18092, 18094, 18093, 18099, 18100, 18104,
   18109, 18116, 18121, 18130
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FOR_SYSTEM_TIME_SYM", "FROM",
  "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM", "GRANT", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HAVING", "HEX_NUM",
  "HEX_STRING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "PORTION_SYM", "POSITION_SYM", "PRECISION", "PRIMARY_SYM",
  "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM",
  "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM",
  "REF_SYSTEM_ID_SYM", "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME",
  "REPEAT_SYM", "REPLACE", "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT",
  "RETURNING_SYM", "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE",
  "RIGHT", "ROWS_SYM", "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW",
  "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_SMALL_RESULT", "SQL_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM",
  "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM",
  "ALWAYS_SYM", "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM",
  "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM",
  "BEGIN_ORACLE_SYM", "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM",
  "BOOLEAN_SYM", "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLON_ORACLE_SYM", "COLUMNS",
  "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM",
  "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM",
  "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM",
  "FIXED_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL",
  "GENERATED_SYM", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM",
  "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM", "PARTIAL",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM",
  "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM",
  "POLYGON", "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNKNOWN_SYM", "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM",
  "VALUE_SYM", "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "PREC_BELOW_ESCAPE", "CONDITIONLESS_JOIN",
  "ON_SYM", "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "','", "'!'", "'{'", "'}'", "';'", "'.'", "'@'", "':'", "$accept",
  "query", "$@1", "opt_end_of_input", "verb_clause", "statement",
  "deallocate", "deallocate_or_drop", "prepare", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_params", "help", "$@6", "change",
  "$@7", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "do_domain_id_list", "do_domain_id",
  "ignore_domain_id_list", "ignore_domain_id", "master_file_def",
  "optional_connection_name", "connection_name", "create", "$@8", "$@9",
  "$@10", "$@11", "$@12", "$@13", "$@14", "$@15", "$@16", "$@17", "$@18",
  "$@19", "$@20", "$@21", "$@22", "$@23", "$@24", "$@25", "opt_sequence",
  "sequence_defs", "sequence_def", "server_def", "$@26",
  "server_options_list", "server_option", "event_tail", "$@27",
  "ev_schedule_time", "$@28", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@29", "clear_privileges", "opt_aggregate", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call", "$@30", "opt_sp_cparam_list", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "$@31", "sp_fdparams", "sp_param_name",
  "sp_param_name_and_type", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_parenthesized_pdparam_list", "$@32", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "sp_decl_body",
  "$@33", "sp_decl_handler", "$@34",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@35", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@36",
  "sp_proc_stmt_statement", "$@37", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@38", "reset_lex_expr", "$@39",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "assignment_source_lex", "assignment_source_expr", "$@40",
  "for_loop_bound_expr", "$@41", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@42", "$@43", "$@44", "sp_elseifs",
  "case_stmt_specification", "$@45", "case_stmt_body", "$@46", "$@47",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@48", "$@49", "searched_when_clause", "$@50",
  "$@51", "else_clause_opt", "sp_label", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@52", "sp_unlabeled_block", "$@53",
  "sp_unlabeled_block_not_atomic", "$@54", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "while_body", "$@55", "repeat_body", "$@56", "pop_sp_loop_label",
  "sp_labeled_control", "$@57", "$@58", "$@59", "$@60", "$@61", "$@62",
  "sp_unlabeled_control", "$@63", "$@64", "$@65", "$@66", "$@67",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@68", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@69", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@70", "have_partitioning",
  "partition_entry", "$@71", "partition", "$@72", "part_type_def", "$@73",
  "$@74", "$@75", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@76",
  "$@77", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "$@78", "part_name", "opt_part_values", "$@79", "$@80", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item", "$@81", "$@82",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@83", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "opt_versioning_interval_start", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@84", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list",
  "create_field_list_parens", "field_list", "field_list_item",
  "column_def", "key_def", "$@85", "$@86", "$@87", "$@88", "$@89", "$@90",
  "$@91", "constraint_def", "period_for_system_time",
  "period_for_application_time", "opt_check_constraint",
  "check_constraint", "opt_constraint_no_id", "opt_constraint",
  "constraint", "field_spec", "@92", "field_type_or_serial", "$@93",
  "$@94", "opt_serial_attribute", "opt_serial_attribute_list",
  "opt_asrow_attribute", "opt_asrow_attribute_list", "field_def", "$@95",
  "opt_generated_always", "vcol_opt_specifier", "vcol_opt_attribute",
  "vcol_opt_attribute_list", "vcol_attribute", "parse_vcol_expr", "$@96",
  "parenthesized_expr", "virtual_column_func", "expr_or_literal",
  "column_default_expr", "field_type", "field_type_numeric",
  "opt_binary_and_compression", "field_type_string", "field_type_temporal",
  "field_type_lob", "field_type_misc", "spatial_type", "char", "nchar",
  "varchar", "nvarchar", "int_type", "real_type", "srid_option",
  "float_options", "precision", "field_options", "field_length",
  "opt_field_length", "opt_field_length_default_1", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "type_with_opt_collate",
  "charset", "charset_name", "charset_name_or_default",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "collation_name_or_default", "opt_default", "charset_or_alias",
  "opt_binary", "binary", "opt_bin_mod", "ws_nweights", "$@97",
  "ws_level_flag_desc", "ws_level_flag_reverse", "ws_level_flags",
  "ws_level_number", "ws_level_list_item", "ws_level_list",
  "ws_level_range", "ws_level_list_or_range", "opt_ws_levels",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@98", "$@99", "$@100", "$@101", "$@102", "$@103", "$@104",
  "$@105", "$@106", "$@107", "$@108", "opt_account_locking",
  "opt_password_expiration", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@109", "$@110", "$@111", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@112",
  "add_part_extra", "reorg_partition_rule", "$@113", "reorg_parts_rule",
  "$@114", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@115", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@116", "$@117", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@118",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@119", "opt_checksum_type",
  "repair_table_or_view", "$@120", "repair", "$@121", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@122", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@123", "persistent_index_stat_spec",
  "$@124", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@125", "check", "$@126",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@127", "opt_no_write_to_binlog",
  "rename", "$@128", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@129", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@130", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@131", "cache_keys_spec", "$@132", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "$@133", "$@134", "select_into", "$@135",
  "$@136", "simple_table", "table_value_constructor", "$@137",
  "query_specification_start", "$@138", "$@139", "query_specification",
  "select_into_query_specification", "query_expression",
  "query_expression_no_with_clause", "query_expression_body_ext", "$@140",
  "$@141", "query_expression_body_ext_parens", "query_expression_body",
  "$@142", "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "$@143", "dyncall_create_element", "dyncall_create_list",
  "plsql_cursor_attr", "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@144", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@145", "$@146", "$@147",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@148",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@149", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@150", "cast_type", "$@151", "$@152",
  "$@153", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@154", "$@155", "$@156", "$@157", "$@158", "$@159", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "table_primary_derived",
  "opt_outer", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "$@160", "$@161", "index_hints_list",
  "opt_index_hints_list", "$@162", "opt_key_definition", "$@163",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias_clause", "table_alias_clause", "opt_all",
  "opt_where_clause", "$@164", "opt_having_clause", "$@165", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@166",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@167", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@168", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@169",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@170", "$@171", "do", "$@172", "drop", "$@173",
  "$@174", "$@175", "$@176", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@177", "$@178", "replace", "$@179", "$@180",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "$@181", "insert_field_spec", "$@182", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@183", "no_braces_with_names", "$@184", "opt_values",
  "opt_values_with_names", "values", "values_with_names",
  "expr_or_default", "opt_insert_update", "$@185", "$@186",
  "update_table_list", "update", "$@187", "$@188", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@189", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "delete_single_table_for_period",
  "single_multi", "$@190", "$@191", "opt_select_expressions",
  "table_wild_list", "table_wild_one", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@192", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@193", "show_param", "$@194", "$@195", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "wild_and_where", "describe", "$@196",
  "$@197", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "flush", "$@198", "flush_options", "$@199",
  "opt_flush_lock", "flush_lock", "$@200", "flush_options_list",
  "flush_option", "opt_table_list", "backup", "backup_statements", "$@201",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@202", "reset_options",
  "reset_option", "$@203", "$@204", "slave_reset_options",
  "master_reset_options", "purge", "$@205", "kill", "$@206", "kill_type",
  "kill_option", "kill_expr", "shutdown", "$@207", "shutdown_option",
  "use", "load", "$@208", "$@209", "$@210", "$@211", "data_or_xml",
  "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "hex_or_bin_String",
  "param_marker", "signed_literal", "literal", "NUM_literal",
  "temporal_literal", "with_clause", "$@212", "opt_recursive", "with_list",
  "with_list_element", "$@213", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "label_ident", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@214", "$@215", "$@216",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@217", "$@218", "$@219",
  "start_option_value_list_following_option_type", "$@220",
  "option_value_list_continued", "option_value_list", "$@221", "$@222",
  "option_value", "$@223", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@224",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@225", "handler", "$@226",
  "handler_tail", "$@227", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@228", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "grant_role", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@229", "$@230", "$@231",
  "$@232", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "auth_expression",
  "auth_token", "opt_auth_str", "opt_column_list", "column_list",
  "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@233", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@234", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@235", "$@236", "$@237", "$@238", "$@239",
  "sf_return_type", "$@240", "sf_c_chistics_and_body", "$@241", "sp_tail",
  "$@242", "$@243", "xa", "opt_format_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "$@244",
  "opt_migrate", "install", "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,  1009,    61,    62,    60,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1010,  1011,  1012,
    1013,    40,    41,  1014,    44,    33,   123,   125,    59,    46,
      64,    58
};
# endif

#define YYPACT_NINF -5013

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5013)))

#define YYTABLE_NINF -3325

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7845,  4317,   216, 90449, -5013,    47, -5013,   601, -5013, -5013,
   -5013,  3127, -5013, -5013, -5013, -5013, -5013, -5013,   153,   404,
   -5013,   289, -5013, -5013,   461, 85955,   -56,   493, -5013, -5013,
   87239, -5013, -5013,   -55, -5013, 87239, -5013, -5013, 90449, -5013,
   -5013,   629, -5013,   484,  1991,    52,   977,   404,   496, -5013,
   -5013, 91091,   289,  1184, -5013, -5013,  1612, 90449,   289, -5013,
     496, 90449, -5013,   240,   352, -5013,  1683,  3260,   410,  1639,
    1515, -5013, -5013,  1234, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    4443, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  2090, -5013,
   -5013, -5013, -5013,  3194,  1772, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, 75016, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,   410, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, 90449, 90449,  1123,  1186, 90449,  1980,  2001, 86597,
   90449,  2001, -5013,    95, -5013, -5013,  1824, -5013,  1489, -5013,
     404,  1655, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  1484,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  1989,
    2041,  1001,  2094,  2234, 90449,  1131,  2001, -5013,  2001,  2001,
    2001,  2001,  2297,  2001,  2001, 90449, -5013,  2001,  2001,   855,
   90449, 36609, -5013,  1088,   867,  2402, -5013, -5013, -5013, -5013,
   -5013, -5013, 53076,   404, 22155,  2488, -5013, -5013,  2040,  4548,
    1830, -5013,  2326, -5013, -5013, 90449, -5013, -5013, 53076,  1187,
   -5013,  2326, 37354,  3164, -5013, 33751,  8077,  2326,   404,  2432,
   -5013,  1838, 22155, -5013, -5013, -5013, -5013, 90449, -5013, -5013,
   -5013,  2291,   496, -5013, 86597, -5013, -5013, -5013, -5013,  2645,
   22155,   132,  2381, -5013, -5013,  2282, 75658, 86597,  2586,  2041,
    2609, -5013,  1480,  1290, -5013,  1970,  2053,  2041,  1615,  2057,
    2041,  2458,  2001,  2001, -5013, -5013,  1866,  1866,  1866,  2286,
    1866, -5013,  1866,  2634,  1997,   160, -5013, -5013,  1978, 90449,
    2586, -5013, -5013, -5013,  2586,  2586,  2132,  2677,  2680,  2689,
     152,  2235,  1604,  1604,  1824, 55757,  1261,  2509, -5013,  2634,
    2600,  1846, -5013, -5013,  2061,  2600,   410,  2600, -5013,   231,
    1489,  1904, 90449, -5013, -5013, -5013,  2035, -5013, -5013, -5013,
    2102, -5013,  1407, 56463, -5013, 90449,  2747, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,   824, -5013, -5013,  2572,   210,
    2190,  2428,  2111, -5013,  2607, 86597, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,  2100, 90449, -5013,  2789, 22155,  1989,
   -5013,  2628, -5013, -5013, -5013, -5013, 75658, -5013, 90449, -5013,
    2871, -5013, -5013,  2793, -5013, -5013, 78893,   450, 90449,  2790,
   90449, 90449, 90449, 90449, 90449, -5013, 86597,  2226, -5013, -5013,
    2001,  2001, -5013,  2804,  2332,  2298,  2089,  2168,  2486, -5013,
    2412, -5013, -5013,  2271, -5013, -5013,   163, -5013, -5013, -5013,
      74,   157,   254,   274,  2792,   325,    35,   375,   383, -5013,
   -5013, -5013,  2727,  2820,  2236, -5013,  2604, 22155, -5013, -5013,
   -5013,  2909, -5013, -5013,   734,  2681,   452, 75658, 96227, 78241,
   97159, 97159, 97159, -5013,   138,  1991, 90449, 96693, 90449, 47001,
   -5013,  2251, -5013, -5013,  9762, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, 90449, -5013, -5013,  1585,  2694, -5013, -5013,
   -5013, -5013, -5013,  2252, -5013, -5013, -5013, -5013, -5013, -5013,
   26583, -5013,  2266,  2283,  2287, 18465,  2290,  2296,  2312,  2334,
    2351,  2168,  2168,  2168,  2358,  2362,  2365,  2370, -5013,  2377,
    2409,  2414,  2421, -5013,  2426, -5013,  2429,  2430,  2440, -5013,
   -5013,   107,   206,  2466,  2473, 22893,  2481, -5013, 69880,  2493,
    2496,  2503,  2504, -5013, -5013, 22155,  2358,  2510, -5013, -5013,
    2513, -5013,  2521,  2556,  2564,  2570,  2571,  2581,  2582,  2597,
    2602,  2846,  2603,  2611,  2613,  2621,  2358, -5013,  2624, -5013,
   -5013,  2034,  2168,  2358,  2358,  2632,  2641,  2655,  2664,  2667,
    2678,  2687,  2693, 87881,  2710,  2714,  2729,  2736,  2745,  2750,
    2761,    55,  2768,  2786,  2787,  2795,  2815,  2816,  2823,  2826,
    2831,  2833,  2850,  2855,  2861,  2862,  2867,  2868,  2335,  2879,
    2880,  2888,  2893,  2899,  2339,  2918,  2922,  2924,  2936,  2944,
    2955,  2957,    79,  2968,  2969,   106,  2971,  2972,  2973,  2974,
    2975,  2976,  2978,  2982, 27321, 28059, 26583, 16989, -5013, 90449,
   91733, -5013, -5013, -5013,  3184,  2133, -5013,  3154, 26583, -5013,
   -5013, -5013,  3055, -5013,  2932, -5013, -5013, -5013, -5013, -5013,
    2952,  2977, -5013,  2983, -5013, -5013,  3001,  2506, -5013,  2989,
   -5013, -5013, -5013, -5013, -5013,  2518,  2985,  3106,  3124, -5013,
   -5013,  1133, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,  2633,  2626, -5013,  2989, -5013, -5013,
   57164, 75658, 53751, -5013, -5013, -5013,  3294, -5013, -5013,  2332,
    2958,  3248, -5013,  3345, -5013,  3263, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,  3164, -5013, -5013,
   61316,  3303,   706,   395,   459,   769, 40789,   235, 83387,   947,
    1035,  2762, 66026, 41518,  2771,    96,  2875, -5013,  2981,  2984,
    2995,  2996,  3000,  3002,  3013, -5013, -5013, -5013,  2951,  2990,
    3270,   422, -5013, -5013,    -5,  2894,   417, -5013,  3158, -5013,
     422, -5013, 38021,  3461,   501, -5013,   825, -5013,  3533, -5013,
   -5013,  3074,  3066,  3112, -5013,  2299, -5013,  2041, -5013,   957,
   -5013,  3461,   422,   501, -5013,  3292,  3375,  1250,  3703, -5013,
     -96, -5013, -5013,  2909, -5013,  3022, -5013, -5013,  3035, 90449,
   75658, -5013, -5013, -5013,  3024, 75658, 75658,  1052,   176,  3184,
    3033, 22155, -5013, -5013,  5073, 35176,  3233,  1618,  1002, -5013,
   -5013,  1991, 90449, -5013, -5013,  1016, -5013,  3465, -5013,  3039,
   -5013, 92375,   176,  3722, -5013, -5013, -5013,   -94,  3434, -5013,
    3042, -5013, -5013, -5013, -5013, 75658, 90449,  2041, -5013, -5013,
   -5013, -5013,  3043, -5013, -5013,  3254,  3140, -5013,  3079, -5013,
   -5013,   438, -5013, -5013,  3759, -5013, 90449, -5013, -5013,  2586,
   -5013,  2586, -5013, -5013,  2586,  2586,  2586, -5013, -5013,  3105,
   -5013,  3392,  3393,  2607, -5013, 69238, 90449,  3753, -5013,  4685,
   -5013, -5013,  3075, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  3653,  3585,  3585, -5013, 66669, -5013, -5013,  3761,  2509,
    3584, 84029,  3744,  3844, -5013,  3461, -5013, -5013, -5013,   465,
   90449, -5013,   465,   465, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,   410, -5013, -5013,  1655, 43558, 90449,
    2600,  1846,  3810,  3477, -5013, -5013, -5013, -5013,  2168,  3109,
   -5013, -5013, -5013, -5013, -5013,  3880, -5013, -5013, 75658,  3310,
    3506,  3506,  3506,  3900, -5013, -5013, -5013, 56463, 75658, -5013,
   -5013, -5013,   210, -5013,   894, 90449, 75658,  3173, -5013, 75658,
   22155, -5013, -5013, 22155, 53076,  3492,  3184, -5013, -5013, 75658,
    1753, -5013, -5013, -5013,  3880,  3506, 75658,  3896, 75658,  3828,
    2509, -5013,  3149, -5013,  3145, -5013, -5013,  3846, 90449, -5013,
   -5013, -5013,  3157,  2226, 57864, -5013,   742,  3508, 57164, 75658,
   -5013, -5013,  3525,  3304, -5013, -5013, -5013, -5013, -5013, -5013,
    3245, -5013, -5013,  3174, -5013, -5013, -5013,  3177, -5013,  3177,
    3177, -5013, -5013,  3177, 57164, -5013, -5013, 56463,  1445,  5004,
    3834,  3542, -5013,  3294, -5013,  3484, 23631, -5013, -5013, -5013,
    3457,   219,   922, -5013, -5013,  3661, 90449,  3402,  3867,  3842,
   -5013, -5013, -5013, -5013, -5013, -5013,  3668,  3196,  3819,  3192,
   -5013, -5013, 22155,  3198, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, 75658,  3205, 26583, 26583, -5013,  3971,  3971,  3971, 22155,
    1885,  1283,  3563, 22155, 22155, 22155,  2253,  3207, -5013, -5013,
   -5013,  1510, -5013,  3212, 22155, 22155, 71164,  3214,   853,  4847,
   22155,  3919, 22155, 22155, 22155, 22155, 16989,  4839, 22155, -5013,
   -5013, 91733, 71164,  3666,  3217, -5013,  3213, -5013,  2348, 22155,
    2357, 22155, -5013, -5013, 22155, 22155,  3222, 22155, 22155, 28797,
    3223, 22155, 22155, 22155,  3224,  3357,  3971,  3971, 22155,  2392,
   -5013, 17727, -5013, -5013, -5013, -5013, -5013,  3971,  3971, 22155,
   22155,  2416, 22155, 22155, 22155, -5013,  3220, 22155, 22155, 22155,
   22155, 22155, 22155, 22155, -5013, 22155, 22155, 22155, 22155, 22155,
   22155,  1665, 22155, 22155, 75658, 22155, 22155, 22155, 22155, 22155,
   22155, 22155,  3909, 75658, 22155, 22155, 22155, 22155,  3910, 22155,
   22155, 22155,  3231, 22155, 75658, 22155, -5013, 22155,  2830,  2830,
   -5013, 22155, 17727, 22155,  3232, 71806, 22155, 22155, 22155, 22155,
   22893, -5013, 22893, -5013, -5013,  3237,  2164,   292,   410, 22155,
    3235, 67312, -5013, -5013, -5013, -5013, 22155, 22155, 22155, 28797,
   -5013,  1036, -5013, -5013, -5013, -5013, -5013, 16251, 28797, 28797,
    3241, 28797, 28797, 28797, 28797, 28797, 28797,  3876, 28797, 28797,
   29535, 30273, 28797, 28797, 28797, 28797,  2049, -5013, 86597, 26583,
   76942,  3247,  3922, -5013, 91733, -5013,  1893,   937, -5013,  2041,
    4548, 31739, -5013,  3250, -5013,  3757,  3255, -5013,  1029,  3252,
   -5013, -5013, -5013, 75658,  3261,  3945, 57164, 56463,  2264,  3276,
   -5013,  3262,   961,  3265, -5013, -5013, 57864, 90449, -5013, -5013,
   -5013, -5013, -5013,  4006, 22155, -5013, 57164, -5013,  1121, 15487,
   -5013,  1118,  1379,    96, -5013, -5013, -5013, -5013, -5013, 15487,
   90449, 62001,  3268,  3364,  3284,  2586, 90449, 75658, 90449, 93017,
   90449, 90449, 75658, 57164, 75658, -5013, -5013, -5013, 90449,   422,
     501,   863,   422,  3923, -5013,  1360,  1360, -5013, -5013, -5013,
   -5013, -5013, -5013,   422, 90449, 90449,   422, 56463, -5013,   501,
    1937, -5013,  3568,  3361, -5013, -5013, -5013,  3609, -5013, -5013,
    3963,  3286, -5013,  3633, -5013, -5013,  3381, -5013, -5013, 75658,
   -5013, -5013,   501, -5013,   501,   501, 22155,   422,   422,   422,
   70522,  3290,  3296, -5013,  3291, -5013,  3298, -5013, -5013, -5013,
    3293,  3947,  3301, -5013, -5013,  3882,   562, -5013,  3754, -5013,
    3877, -5013, 22155,  3184, 19203,  3602, -5013, -5013,  3614,  3616,
    3619, -5013, -5013, -5013, -5013,  3779,  3626, -5013,  2041,  3627,
   -5013, -5013,  3332, -5013, -5013, -5013, 31739, 86597, -5013,  3355,
   -5013,  3377, -5013,   192, -5013, -5013,  4049,  3469, 22155, -5013,
   -5013, 75658,  3878, -5013,  2041,  1480, 90449, -5013, -5013,  4142,
   -5013,  1717, -5013, -5013, -5013,  3486,  1615, -5013, -5013,  1029,
   -5013, -5013,  1866,  3564, -5013, -5013, -5013, 86597, -5013, -5013,
   -5013, -5013, -5013, -5013, 57864, 56463, 86597, -5013,  2586,  2586,
   -5013, 75658, -5013, -5013, -5013,  2586,  2586,  2586,  3418,   217,
    3385,  3386,  3388,  3390,  1424,  3396, 72448,  2373,   195,  4037,
    4044, -5013,  3985,  2610,  3985, -5013, -5013, 72448, 70522,  3405,
    3753, -5013, -5013, -5013, -5013, 86597,  3403, -5013, -5013,  3404,
   -5013, 22155,  4155,  4082,  3761,  1083, -5013, -5013,  3758, -5013,
   87881,  3962,  1201, -5013,  3413,  3547, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,   158, -5013, -5013, -5013,  1410,  3801,  2822, -5013,
   86597,  2822,  -113,  1553, -5013,  3439,  2041,  1125, -5013,  1125,
   -5013,  3740, -5013,  3746,    78, -5013,  1029, -5013, -5013, -5013,
   -5013, -5013, 75658,  3446, -5013,  3634,  3454,  3455,  3184,  3184,
   47676,  4199,  3940,  5803,   125,  3513, -5013, -5013, -5013, -5013,
   -5013, 75658, -5013, -5013,  1329,  3449,  3955,  3653,  3549, -5013,
    3472, -5013, -5013,   443,  4048, -5013, -5013,  4065, 90449,  4157,
   79535, -5013, -5013,  4075, 90449,   742,  3482, -5013, -5013, -5013,
   -5013, -5013,    96, -5013,  3483,   172, 75658, 75658, 53076, -5013,
    3489, -5013, -5013, 90449, -5013, -5013, -5013, -5013,  3991,   341,
   32388, 73090, -5013, 73090, 73090, -5013, -5013, -5013, -5013, -5013,
      35, -5013, -5013, -5013, -5013, -5013, -5013, -5013, 44259,  3184,
   -5013, 75658, -5013,  4150, -5013, -5013, 94943,   154, -5013, -5013,
     121, 75658, -5013, -5013, 22155, -5013,  4145,  3628, 90449, -5013,
    4212, -5013, -5013, -5013, -5013, -5013, -5013,  3184, 90449, 90449,
   53076, 53076, 22155, -5013,  1038, 22155, -5013,  3501, -5013,  3504,
    3505,  3658,  3866, 22155, 22155, -5013,  2403,   305,   232, -5013,
    3512,  3523, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    3516, -5013, -5013, -5013,   300,   315,  3522, -5013, -5013, -5013,
    3527,   410, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  4207, -5013,   359, -5013, -5013,   222,   242,   339,
     346,   351,  3546,   356,  3220,  1649,  3532, 71164, 91733,  3971,
    3539,   788,  3971,  3544,   366,  1162,   390, -5013,  1471,  1597,
    3320, -5013,   426,   445,   503, -5013, -5013,  3545,  3551,   238,
    3971,  3552, 19941, 20679, 21417,  4047,  3553,  3557,  3558,   516,
    1658,  3971,  3565,  1713,  1773,  1748, 91733,   576,  1781,   609,
   -5013,  1878,   639,   818,   857,   879,  1804,  1877,   899,   924,
     978,  1979, -5013, -5013, -5013, -5013,  3540,  1899,  1967,  3560,
    3569,  2025,  2045,  2048,  2063,  2051,  2144,  2185, 75658,  3572,
    2106,  2137,  1058,  2188, 75658,  2147,  2157,  1102, -5013,  2161,
    3561,  1119,   247,  3566,  3574,  2200,  3577,  1317, -5013, 91733,
   90449,  3578,  3567,   255,   218,  1380,  2288,  4839,  4839, -5013,
   22155,  3583,   205, 91733,  1379, -5013,  4080,  2663,  1442, -5013,
   -5013, -5013, -5013, -5013, -5013,   488, -5013,  3586, -5013,  3587,
    2939,  3591, 16989, -5013,  3328,  3591,   471,  3436,   430,   430,
   28797,  3007,  3040, 22893,   471, 22893,   471,  3591,  3591,  3591,
   -5013, 28797,  3590, 28797, 28797, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  4167,  3593,  1758,  3597, -5013, -5013, -5013, -5013,
   -5013, -5013,     2,  4000, -5013,  3787,   342, 22155, -5013,  3622,
    4105,  4108,  4112, -5013, -5013, -5013, -5013, 57164, 57164, 75658,
    4117, 22155, -5013,  2865, -5013,  3653,  4293, 57864,  4306, -5013,
    3631, 33037, 73090, 73090, 73090, -5013,  3637, -5013, 22155, 90449,
   90449, 15487, 61316,  4310,  4315,    96, 60631, -5013,  3184,    96,
   -5013,  3641,  3643, -5013, -5013, 26583,  2377, -5013,  3184, -5013,
     898,  3913, -5013,  3642,  3646, -5013,  3636,  3638,  3650, 64741,
   22155, -5013,    96,  1118, -5013, -5013, -5013, -5013, -5013,  3656,
   90449, -5013, -5013, -5013, 90449, -5013, -5013, -5013, -5013, -5013,
   -5013,  2041, 22155, -5013, -5013,   422, 90449,   422, -5013,  2041,
    4327, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,   422, -5013, -5013, -5013, -5013, -5013,  3824,  3461,  2299,
    3923, -5013,   501, 75658,   422,   422,  3184, -5013, -5013, -5013,
   -5013,  4197,  3653, 19203,  3665,  3659, -5013, -5013, 53076, 90449,
   90449, -5013,  4212, 86597, 62686, 75658, -5013, -5013, -5013,  2275,
   -5013, -5013, -5013, -5013, -5013,  3184,  2381,  2377, -5013,  3667,
    3184, -5013,  4377, -5013, -5013, -5013, -5013,  2041, -5013, -5013,
    5598, -5013, 75658, -5013, 68596, -5013, 68596,  1852, -5013, 93659,
   -5013,  2041,  3184, 75658,  1140,   121, -5013,  4434, -5013, -5013,
    3782, -5013, -5013, -5013,  3671, -5013,  3721, -5013, -5013, -5013,
    3674, -5013,  4359, -5013,   282,   391,    78, -5013, 90449, 90449,
   90449, 75658, -5013, 90449,  2586, -5013, -5013,  2586, 75658, 90449,
   90449,  2586, 72448, -5013, -5013, -5013, -5013, -5013, 72448, -5013,
     969, -5013,  3883,   749,   749, -5013, -5013, -5013, -5013, -5013,
    4326,  3985,  3985, 72448,  4330,  4100, -5013, 90449,  5985,  1094,
   -5013, 66669, 90449,  3184, 22155, -5013,  3718,  4082, -5013,   121,
   -5013, 85313, -5013,  4033, 85313, 85313, 91733,  3924, 22155,  3693,
   -5013,    96,    96,  3916,  4216,  4218,  3821,  2041,  4222,  4223,
    4224, -5013, -5013, -5013,  2041,  2041, -5013, -5013,    96, -5013,
    3128, -5013, -5013, -5013, -5013,  3979,  1693, -5013,    96,    96,
   -5013,  3639, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  1712,
   -5013,   181,  1292, 56463,  4175, -5013,  4298,  3707, -5013, 75658,
    4389, -5013, -5013, 22155,  4217, -5013, -5013,  3940, -5013,  3728,
    3731,  3736,  3738,  3741,  3743,  3745,  3747,  3749,  3750,  3755,
    3756,  3762,  3763,  3765,  3768,  3769,  3774,  3775,  3776,  3778,
    3784,  3791,  3794,  3734, -5013, -5013,  3783, -5013, -5013, -5013,
   -5013,    96,    96,    96,    96, -5013,  4569, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,  4014,  2661, -5013,   749, 90449,
    4236, 79535, -5013,  3965,  4397, -5013, -5013, 70522, -5013,  3771,
   75658, -5013, -5013, 57864, -5013, 86597, 57164, -5013, -5013, -5013,
    3777,  1038, 48351, -5013, -5013,  4481, -5013,  2191, -5013, 56463,
    4235, -5013, 73090,  3781, -5013,  3785,  4292,  4295,  4296,  4300,
   53076,  2865, -5013, -5013,  3799, -5013, -5013,  3882,  3585, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    3830,  4083,  4201, -5013, -5013, -5013,  2422, -5013, -5013,  3184,
   -5013, -5013, -5013,  4460, 55085, 49026,  3806, -5013, -5013, -5013,
    2203, -5013, -5013, 97159, 97159, 97159,  4212, -5013,  1390, -5013,
   22155, -5013, -5013, 22155, -5013,  3184,  3767,  3166, 42903, -5013,
   42903,  3166, 22155, -5013,  3818, -5013,  4473,  4474, -5013, -5013,
   -5013, 22155, -5013, 22155, -5013, 22155, -5013, 22155, 22155, 22155,
   22155, 22155, 22155, -5013, 28797, -5013,  3817,  3826, -5013, -5013,
    3827, -5013, 22155, -5013, 22155, -5013, -5013, 22155, 22155, 22155,
   22155, -5013, -5013, 22155, 22155,  3831, -5013, 22155,  4137, 22155,
    4196, 22155,  4214, 22155, -5013, -5013, -5013, 24369, -5013,  3832,
   -5013, -5013, -5013, -5013, -5013, 22155, -5013, 22155, -5013, 22155,
   22155, 22155, 22155, 22155, -5013, -5013, 22155, 22155, 22155, -5013,
   22155, -5013,  4416, 22155, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, 22155, -5013, -5013, -5013,
   -5013, 22155, -5013,   408, 25107, -5013, 22155, 22155, 22155, -5013,
   -5013, 22155,  3833,  3835, -5013, 90449, -5013, 22155,  2532,  2738,
     121,  3845, 22155, -5013,  3858,  3859,  3033, -5013, -5013, -5013,
   95585, 22155, -5013, -5013, -5013, -5013,   853, 28797,   259, 26583,
   -5013,  3436,  4839,  4839,  3026, 16989, -5013,  3328,  3436, 90449,
    4581,  3849, -5013, 22155, 91733, 22155,  3850,  3851, -5013,  3852,
   28797, -5013, -5013,  3855, -5013,   466,  2738,  3938,  4303, -5013,
    3184, 31739,  4358, -5013, -5013, 75658,  2921, 71806,  4331, -5013,
   -5013, -5013, -5013,   312, -5013, -5013,  4057, -5013, 57164, 56463,
   73090,  4541,  4542,  4544,  4546, -5013,  3184, -5013,  3862,    96,
      96, -5013, -5013,  8594, 57164, 15487, -5013, -5013, -5013, -5013,
    4381,  4382, -5013, -5013,   184,  4166,  4441, -5013, -5013, -5013,
    3873, -5013, -5013, -5013,   965, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013,  3184, 15487, -5013,  3268,  3879, 34465,     5,
   -5013, -5013, -5013,  3184, -5013, -5013, -5013, -5013,  3894, -5013,
   -5013, -5013,  4480, -5013, -5013,  4327,  2509,   501, -5013, -5013,
   71806,  2685, -5013, -5013, -5013, 19203, 49701, -5013,  2209, -5013,
    4647, 50376, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  3889, -5013, -5013, 19203,  3906, -5013, -5013, -5013,
    3777,  1431,  3908,  3890, -5013, -5013, -5013, -5013, -5013, -5013,
     294,   297,  2394,  2509, -5013, -5013,   161, -5013, -5013, -5013,
   -5013, -5013,  1061, -5013, -5013, -5013, -5013,  1717,  2127, -5013,
     121,  4130, -5013, -5013,   291,  4349, -5013,  4175,  4579,    73,
    4492,  4495, -5013,  3979, -5013, -5013, -5013, 90449, -5013,  3904,
    1224,  3911, 75658,  4685,  4685, -5013,   749,   323, -5013, 28797,
    4670, -5013,  4414, 72448,  4559,  4562, -5013, 72448, -5013, -5013,
    2210, -5013, -5013, 42247, -5013, -5013, -5013,  3184,   403,  1862,
   22155, 90449, -5013,  3718, -5013, -5013, -5013, 85313, -5013, -5013,
   -5013,  1083,  3921,  1862,  3925, 60631, 42247, -5013,  4307,  4308,
    1769, -5013, -5013, -5013, -5013, -5013, -5013,  4133,  1553, -5013,
      96,    96, -5013,   171,    96, -5013, -5013,   225, -5013, -5013,
    1440,   379,  3979, -5013,  2041,  2041,  2041,  2041,   121,  2041,
    2041,  2216, -5013,  4133,  4133,  1125, -5013,   985, -5013, -5013,
   -5013, -5013,   148, -5013, -5013, 86597, -5013,  4432,  4440, -5013,
    4448, -5013, -5013,   279, -5013,  2767,  4391,  7345,   854, -5013,
    4497, 90449,  4707,  3707, -5013,   373,  3184, 53076, 22155, -5013,
    3951,  3958,   121,  3960,   121,   121,  2041,  2041,  3894,  2041,
     121,  2041,  2041,  2041,  2041,  2041,  2041,  2041,   121,  2041,
    1209,  2854,  2041,   121,  5803, -5013,  2041,  2738,  4133,  4133,
    3449, -5013,  4634,    96, -5013,  4299, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,  3961, 70522,   785,
   -5013, 84671,  4510,  2509,  3975, -5013,  1029, -5013, -5013, -5013,
   -5013,  1508,  4652, -5013,  3976, 22155, -5013, -5013, 90449,   427,
    4172,  4479,  3992, 80177, 56463, 56463, 56463, 56463, 44976,  4574,
   75658, -5013,  4642, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  7026, -5013,
   -5013, -5013,  4301,  2484,  3982, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013,  3983, -5013, 22155, -5013,
   -5013,  4345, -5013, -5013, -5013, -5013, -5013, 51051, 22155,  3184,
    3184, 22155,  3993,  3993,  3994,  3995, -5013,  4711, -5013,  4649,
    3993,  3993, -5013,  3993,  4651,  3993,  3993,  4003, -5013, -5013,
    4007,  4008,  4013,  3033, -5013, 22155, 22155,  2308,   275,  2319,
    2327,  1450,  1460,   264, -5013,  2396,  3337, -5013, -5013,  2437,
    2468,  2471,  2497,  1479,  2558,   549,   273, -5013,  3184, 22155,
    3184, 22155,  3184, 22155,  3184, 22893,  2565, -5013,  2222,  3868,
   -5013,  2276,  4113,  2575,   278,  2605,  1522,  2279,   283,  2649,
    2656,  2668,  2318, -5013,  2204,  4602,  2338, 22893,  2674,  2700,
    1532,  1545,  2708, 91733, 90449,  4002,  2711,  4017,  4017,   168,
   -5013,  4019, -5013, -5013, -5013,  4022, -5013,  2715, 22155, 22155,
    4012,  3184,  4025, -5013, -5013, 22155, -5013, -5013, -5013, 28797,
     287, -5013,  4167, -5013, 22155, -5013,  4614,  4028,  3033, -5013,
    3184, -5013, -5013, 90449,  4032,  3436, -5013, 22155,  3894, -5013,
   -5013,  4776,  4034,  4051,  4036,  3855, -5013, 57164, -5013,  4589,
    4038,  4035, -5013, -5013, -5013,  4041,   410, 71806, -5013,  4719,
    3483, -5013,  4720, 56463, 56463, 56463, 56463, -5013, 40060, -5013,
   80819, 15487, 15487, -5013, -5013, -5013,  4050,  4054,   116,  4606,
   -5013, -5013, -5013, -5013, 90449, 90449, 15487, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,  3302, -5013,  3461, -5013, -5013,
   -5013,   422,  4053, -5013,    96,   676, -5013, 19203,  4058,  4055,
   -5013,  4521, -5013, 90449,  4060, -5013,  4064, 88523, -5013,  4066,
   -5013,  4626, -5013, -5013,  4011, 68596, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,  3461,  4304, -5013,
   -5013, -5013,  4084, -5013,  4068, -5013, -5013, 56463,  4391,  4449,
    1275,  1275,  4666, 75658, 75658, 10868,  8688,  3979,  4076, 90449,
   -5013,  3707, -5013,   587, -5013, -5013, -5013, -5013,  3436,   749,
     749,  4125,  4566, 72448, 72448,  4445,  4567, 22155,  4085, -5013,
   90449, -5013,   368, -5013,  4489, -5013, -5013, 22155, -5013, -5013,
   -5013, -5013,  3184,  4844,  4087, -5013, -5013, -5013, -5013, 22155,
   -5013, 22155,  4092,  4093, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
     408,   408, -5013, -5013,   408,   408, -5013, -5013, -5013, -5013,
     408,   408, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  1693, -5013, -5013, -5013,  1712, -5013, -5013,  4600,  1270,
   -5013,  4686, -5013, -5013, -5013, -5013,    91,   121,   121,   121,
    2854,  2003, -5013,  2767,  1728,  4285,  4030,  4501,  4678,  4501,
    4680,  4605,  2979,  4469,    96,  4683,  4853,    96, -5013,   234,
      96,    96,    96,    96,  4147,    96,    96,    96,    96,  4689,
      96,    96,  4477,    96,  4753,  4190,  4760,    96,  4694, -5013,
    4193,    96,    96,    96,    96,  4501,    96,    96,  4701,  4314,
    4704,  4712,    96,    96,   119, 90449,    96,    96,  4713, -5013,
   -5013,  8745, -5013, -5013, -5013, -5013, -5013, -5013, -5013,   143,
   73732, -5013, -5013, -5013, -5013,    96,  1991,  1671,  4638,  1538,
   -5013,  2341, -5013,  4899, -5013,   188, -5013, 45651,  3184,   527,
     703, -5013,   743, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, 90449,  4133,  2661, -5013, 79535,  2509, -5013, 90449,  4482,
    4688,  3276, -5013, -5013, -5013, -5013, -5013,   853, -5013,  3184,
   -5013, -5013,  4814, -5013, -5013, 56463, -5013, -5013,    78,    78,
      78,    78,  2742,  4504, -5013, -5013, -5013,  4642,  4422, -5013,
    1915, -5013,  3993,  3993,    30, -5013,  3994,  4721,  3994, -5013,
    4543,   764,  2860,  4543, -5013,   764,  3994, -5013,  4151, -5013,
    4543, -5013,   764,  3993, -5013,  3993, -5013, -5013,   764,  3993,
   -5013,  4153,  3994, -5013, -5013,  4543, -5013, -5013, -5013, -5013,
    1282,  2713,  3994, -5013, -5013, -5013,  3993,  -144,  3993,  3993,
    3993,  4356,  3993,  3993,  4006, -5013, -5013, -5013, -5013, -5013,
    3994,    12,  3993,  3993,  3993,  3993,  3995,  4866,  4836,  4837,
   -5013, 90449, -5013,  3184, -5013, 53076, 97159,   264,  3184,  1826,
   -5013, -5013, -5013,  2065, -5013, -5013, -5013,  4757, -5013, -5013,
    3993, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  4162,  4839,  4839, -5013,  4909,  4706, -5013, -5013,
   22155, 22155, -5013, 22155, -5013,  1439,  4164,  4648, -5013, -5013,
   -5013, -5013, 22155, -5013, 22155, -5013, -5013, 22155,  3184,  3184,
    3184,  4839, -5013, -5013,  2948, -5013, -5013,  3166, -5013, -5013,
   22155, -5013, 22155, -5013, 22155, -5013, 22155, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,   236,  4839, -5013, -5013, 22155,
   22155, -5013, -5013, -5013, 90449, -5013,  2738,  4171,  4444, -5013,
   -5013, -5013,  2738,  4312, -5013, -5013,  2738,   121, -5013, -5013,
   -5013, 90449, -5013,  2344, -5013, -5013, 22155,  4767,  4183,  4932,
    4188, -5013, 40060, -5013,  4189,  4191, -5013, -5013, -5013,  4839,
   -5013,  4821,  4771, -5013,  2738, 90449, -5013, -5013, -5013, -5013,
   71806, 81461,  4195,  4200, -5013,    96, 56463, 56463,  3631,  3631,
    3631,  3631, 89165, -5013, -5013, -5013, -5013,  1925, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,    96,    96, -5013, 34465, 61316,
   -5013, -5013, -5013, -5013, -5013, -5013,  3461, -5013, 71806,  2509,
   19203, -5013, -5013, -5013, 19203, -5013, -5013,   853, 38688, -5013,
    4198, -5013,  4204, -5013,  1996,  4532,  4826, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  4202, -5013, -5013,  2041,  2420, -5013,  4285,  4230,
   -5013, -5013, -5013, -5013, -5013, 75658, -5013, -5013, 39398,  4840,
   75658, -5013, -5013,  4785, -5013,  4438, -5013, -5013, -5013, -5013,
    1188,  4803,  4972,  4215, -5013, -5013, -5013, -5013,  4316,  4215,
    3707, -5013, -5013, -5013,  4708, -5013, -5013, -5013,  4709,  3184,
   90449, -5013, -5013, -5013,  1370,  2293,  4848,  1862,  4221, 90449,
    1862,  3184, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,  1000, -5013, 86597, -5013, -5013,
   -5013, -5013, -5013,  4817,  4820, -5013, -5013, -5013, -5013,  4561,
   -5013, 74374,  2586, -5013,   505,  4265, -5013, -5013, -5013,  1816,
   -5013,  2586,  2275,  2275,  4890,  2790,   289,  2790, 38688,  1094,
    2023,  4874,  2001,  2371,  4271,  4802,  2790,  2790,    96, 63371,
     289, 71806,   162, -5013, -5013, -5013, -5013, 75658,   215,   243,
     293, -5013, -5013, 64056,  3894,   121,   121,   289,  2041,  2041,
      96,   121, -5013, -5013, -5013, 86597, 90449, -5013,  1849,   121,
    3894,  3894,  2790,   302,  2041,   289, -5013,   289,   289,  1455,
     162, -5013, -5013, -5013,   121,   162, 38688, -5013, 10018, -5013,
   -5013, -5013, 39398, 90449,  1399,  4791, -5013,  4233, 58558, -5013,
    4421, 22155, 22155,  4834, 90449,  4841, -5013,  4653, -5013, 90449,
   -5013,   853, -5013, -5013, -5013,  4545,  4758,  2353, -5013, -5013,
    2354, -5013, -5013,  2384, -5013, -5013, -5013, -5013, -5013,  3771,
   -5013,  4933, -5013,  4601,  3637, -5013,   410,  4452,    78,  4731,
    4731,  4731,  4731, 53076, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  4911, -5013, -5013,  4543,    96,  4543, -5013, -5013,  1221,
   -5013,  1221, -5013,   399, -5013, -5013, -5013, -5013,   653, 42903,
    5018,  4662,  3303,  4543, -5013,  4745,   764, -5013, -5013,  1221,
    1866, -5013, -5013,  4543, -5013, -5013, -5013,  1866,  1221, -5013,
    4747, -5013, -5013, -5013,  1221,  4543,  4478, 90449,  4866,   764,
   -5013, -5013, 94301,   764,  1221, -5013,  4835, -5013,   653,  5018,
     764,  4543,  1221,  1221, 22155, -5013, -5013,   269,  4277, -5013,
   51726, -5013,  4278,  4279,  4281,  4283,   653,  2387,  4282, -5013,
     653,   653, -5013,  4286,  4287, 22155,  1866,  4917,  2757,  1560,
    2390,  4572,  4523, -5013,  4456, -5013,  2770,  2773,  2783,  1668,
    3994, -5013, -5013, -5013, -5013,  4945,  3993, -5013,  5037, -5013,
    3993, -5013, -5013, -5013, -5013, -5013, -5013,  4311,  2791,  3184,
    3184,  2812, -5013, -5013, -5013,  2461,  1918,  2834,  2840, -5013,
   -5013, -5013,  4313, -5013, -5013,   249, -5013,  4318, -5013, -5013,
    2477,  5044,  2087, 22155, -5013, -5013, -5013, 90449,  4395,   588,
   -5013,  2498, -5013, -5013,  4319, -5013, -5013,  4305, -5013, 71806,
   19203,  3631,  3631, -5013, -5013, 82103, 15487, 15487, -5013, -5013,
   -5013, -5013,  4065, -5013, -5013, -5013, -5013,  4325, -5013,  4328,
    4337, -5013, -5013, -5013, 88523, -5013,  2526, -5013, -5013,  5065,
   19203, -5013, -5013, -5013, 86597, -5013,  4333,  4341, 76300,  2769,
    2543, -5013, -5013, -5013, -5013, -5013, 75658, -5013,   437, -5013,
   11531, -5013,  8745,   326,  4430, -5013, -5013,  1729,  4431, -5013,
    4329, 90449,  2041,  4336,  5075, 22155,  4342, 22155,  4344,  2549,
   -5013,  2275, -5013,  2275, -5013,  1370,  5061,  5079,  5020,  5091,
    2293, -5013,  2268, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    4348, -5013, -5013, -5013, -5013,   553,  1991, -5013, -5013,   289,
    4350,  1991,  5032, -5013,  4355,  4999,  5000,  2275, -5013,  2586,
   76300, -5013,  2586,  2586, -5013, 76300, 38688, 76300, -5013, 42247,
   76300,  2790, 90449, -5013,  5038, -5013,  5003, 76300, 76300,  2041,
   -5013, -5013, 38688,  4360, -5013,  1862, -5013, -5013, -5013,  2488,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,  4367, -5013, -5013,
   -5013, -5013, -5013,  2738, -5013, -5013,  2041, -5013, -5013,  4838,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, 76300, -5013, -5013,
   -5013, 38688, -5013, 38688, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013,  4399,  1952, -5013,  4368,
    4372, -5013, 90449, -5013, -5013, 75658, -5013, 11791, 90449, -5013,
   -5013, -5013, -5013, -5013,  3184,  4839,  4765, -5013, -5013,  4486,
    2041,  4739, -5013,  4854, -5013, 90449,   193, 53076, -5013,   121,
   -5013,   121, -5013,   121, 28797, -5013, -5013,  4731,  1565, -5013,
   -5013, -5013, -5013, 52401, -5013,  5025,  4894, -5013, -5013, 90449,
   -5013,  4855,  4878, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,    96, -5013, -5013, -5013, -5013,  2554, -5013, -5013,
    2584, -5013, -5013, -5013, -5013, 94301,  6389, -5013,  2591, -5013,
   -5013, -5013,  4866,  4385, -5013, -5013,  4406, -5013, -5013, -5013,
   -5013,  5018, -5013, -5013,  3184, 77584, -5013, -5013, -5013, 90449,
    5074,  5076, -5013, -5013, -5013, -5013, -5013,  4989, -5013, -5013,
   -5013, -5013,  4393,  1862, -5013, -5013,  4400, 85313, -5013, -5013,
   22155, -5013,  4630, -5013,  4736, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,   653, -5013, -5013, -5013, -5013,  3894,
   -5013, -5013, -5013,  4401, -5013,   121, -5013, 22155, -5013, -5013,
    4405,  4470,  1862, -5013,   121, -5013,  4303,  4408, 90449, -5013,
    4771, -5013, 82745, -5013, -5013, -5013, -5013, -5013,  4397, -5013,
   -5013, 90449, -5013, -5013,  3894,  4772, -5013,  2616,  4604,  4415,
   90449, 90449, 90449, -5013, -5013, 39398,  4413, -5013,  5177, -5013,
    4785, -5013, -5013, -5013,  4417,  4418, -5013, 90449, -5013, -5013,
    5124, 53076, -5013, -5013, -5013,  5014,  1671, -5013,  4560,  4423,
   10595, -5013, -5013, -5013,  4560, -5013,  3184, 90449,  3184, 90449,
   -5013,  5103,  5103, -5013,  1866,  1866,  5172,  1866, -5013,  5173,
    5174,  2268, -5013,  4935, -5013,  5026, -5013,  5119, -5013, 90449,
    5120, -5013, 22155,  2586, -5013, -5013, 76300,  4919,  1578, 76300,
   76300,  1706, -5013, 76300,  1329,  4006, -5013, 76300,  4337, 90449,
   -5013, -5013,  1508, -5013, -5013, 71806, -5013, -5013, 75658, -5013,
   -5013,  4942,  1399, -5013, 90449, -5013, -5013, -5013,  4437, -5013,
    5176, -5013,  4435, -5013, -5013, -5013, -5013, -5013,  1172, -5013,
    2636, -5013, -5013, -5013, -5013, 46326, -5013, -5013, -5013,  3349,
   -5013,  4633, -5013,  1565, -5013,  4928, 75658, -5013, -5013, -5013,
   -5013,   653,  1866,   653,  4866, -5013, -5013, 90449, -5013, 90449,
    5039, -5013, -5013, -5013, -5013, 35893, -5013, -5013, -5013,  4763,
   -5013,  2643, -5013, -5013,  4446, 22155, -5013, -5013, -5013,  1239,
    2858, -5013, -5013, -5013,  4450, -5013,  4451,  3921, -5013,  3315,
    4575,  4105,  4108,  4112,  4621,  4790, -5013,  4629, -5013, -5013,
    4454, 28797, -5013,  1975, -5013, -5013, -5013, -5013, -5013, -5013,
    4873, -5013,  4457, 90449,  2671,  1862,  4458,  2682,  4468, -5013,
   -5013, -5013,   312,   437, -5013,  2499, -5013, -5013, -5013, -5013,
    4834, -5013, -5013, 90449,  1620,  4658, -5013, -5013, -5013,  2683,
    2723,  1984, -5013, -5013, -5013, -5013,  1866, -5013,  1866,  1866,
   -5013,  4472,  4843, 76300,  -131,  4466, -5013,  2872, 76300,  4919,
    1595,  1275, -5013,  1275, -5013, -5013,  5187,  5188,  1399, -5013,
   -5013, -5013, -5013, -5013,   289, -5013,  4483, 75658, -5013, -5013,
    4337,  1061, 90449,  5099,  3649, -5013, -5013,  3562, 90449,  4577,
   -5013, 53076,  4679,  5224,  5226, -5013, 90449, 89807, 28797, -5013,
   -5013, -5013,  3653, -5013, -5013, -5013, -5013, -5013,  4484, -5013,
   77584, -5013, -5013, -5013, -5013, 97159, -5013,  1862, 85313, 85313,
   -5013, -5013, -5013,   913, -5013,  5250,  1387, -5013, -5013,   547,
   -5013, -5013, 90449,  4490,  4573, -5013, -5013,  4563, -5013, -5013,
    3605, -5013,  1693,  2740,  1029, 90449, -5013,  5088,  1029, 90449,
    4961, -5013, -5013, -5013,  1538, -5013,  6389,  4430, -5013, -5013,
    4698, -5013, 90449, -5013, -5013, -5013,  5242, -5013,  5243,  4500,
    4502, -5013, -5013, -5013, -5013, -5013,  5176,  2738,  4771, -5013,
   90449, -5013, -5013, -5013,  1275, -5013,  4505, -5013,  4507,  4511,
   -5013, 31011, -5013, -5013, -5013, -5013,  5150, -5013,  2764, -5013,
    1262,  5102, -5013,  5155, -5013,  2041, -5013,  4591, -5013,  3649,
   -5013, -5013, -5013,  4558,  5163,  5118,    96, 86597, 31011, -5013,
    5012, -5013,  4970,  5236, -5013,  5289,  3772, -5013, -5013, -5013,
   22155,  4883, -5013, -5013,  4725,  4726, -5013, -5013,  2772, -5013,
   -5013,  3436, 71806, -5013, 90449, -5013, -5013, -5013, -5013, -5013,
   -5013,  3315, -5013, -5013,  4665,  1763, -5013,  2775, -5013, -5013,
   -5013,  2738, -5013,  4533, -5013,  4902,    96,    96,  4903,    96,
      96,    96,    96,  4547,  3605, -5013,  4892,  2782,  1029,  1008,
    1862,  4549,  1462,  4550, -5013, -5013, 75658,  4653, -5013, 54400,
   90449,  4536, -5013, -5013, 88523, 88523, -5013, -5013,  2821,  4551,
    4555,  4557, -5013, 90449,  4564, 90449, 90449,  2854,  2854, 16989,
   -5013, -5013, -5013, -5013, -5013, -5013,  2985, -5013,  4568, -5013,
   90449, -5013, -5013, -5013,  1231, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, 59252, -5013, -5013,  5145, -5013,  4593,  -104,
      96, -5013,  4009,  3184, 22155, -5013, -5013, -5013, -5013, 89807,
    4556, -5013,    96,  1094, -5013, -5013, -5013, -5013, -5013, -5013,
   90449, -5013,  4570, -5013, -5013,    99,    96,  2041,  2041,    96,
    3153,  3153,  2738, 86597,  4631, -5013, -5013,    96, -5013,  1164,
    4748,  2041,    96,   329,  1008, -5013, -5013,    96, -5013, -5013,
     329,  1462, -5013, -5013, 90449,  5239,  4920, -5013,  4554, 90449,
    4576,  2842, -5013, -5013, 90449, 90449,  4571,  2845, 90449,  2874,
    2883, -5013, -5013,  4578,  4771, -5013,  1025,  1025, -5013, -5013,
   -5013, -5013,  4580, -5013,  1051, -5013, -5013,  4009,  3184, -5013,
   71806, 19203, -5013,  4573, -5013, -5013,  2886, -5013, 25845, -5013,
   -5013, -5013,  2041, -5013, -5013,  2041, -5013, -5013, -5013, -5013,
   -5013,  2907, -5013, 86597,  1275,  1275,   329,  1164, -5013, -5013,
   -5013,  2803, -5013,   121, -5013,  5189,  5013, -5013, 59946, -5013,
   -5013,  4582, -5013, -5013, 90449,  4565, -5013, -5013,  2908,  2912,
   90449,  1164,  2913,  1008,  1462, -5013,  2934, -5013, -5013,  1932,
    5021,  5166,  5167,  1630, -5013,  3142,  3142,  1417, -5013, -5013,
    5123, -5013, -5013,  4570, -5013,  4583, -5013,  3436, -5013, -5013,
   86597, -5013,  4631, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   90449,  4791,  1164,  2942, -5013,  1164, -5013, -5013, -5013, -5013,
   -5013, -5013,  5064,  5290, -5013,  4584, -5013,  3142, -5013, -5013,
   -5013, -5013, -5013,  1330,  4884,  4489, -5013, 25845,  4586,  3605,
   -5013, -5013,  5284, -5013, -5013, -5013,  1164, -5013,  1025,  1025,
   -5013, -5013, -5013,  1330, -5013,  5334,  4848, -5013, -5013, -5013,
    4722, -5013, -5013, -5013, -5013,  1866,  5248, -5013, -5013,  5191,
    4592,  1496,  1963, 65383,  5128, -5013, -5013, 86597, -5013, -5013,
   -5013, -5013, -5013, 86597,  2946, -5013, -5013, 71806, -5013, -5013,
   53076, -5013, -5013, 67954,  4594, -5013,    96, -5013, -5013, 71806,
   -5013, -5013, 19203, -5013, -5013
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  1113,  2335,     0,   448,     0,  1330,   713,  2190,  2328,
    2329,  2117,     2,   502,   218,   401,  2119,  2400,     0,     0,
     498,  1346,   854,   609,     0,   326,     0,     0,   505,  2122,
     324,   218,  1395,  3041,  2235,     0,  3132,  2179,     0,  1393,
     500,  2497,  3383,     0,  3284,     0,     0,     0,  3289,    71,
    2085,     0,  1346,   347,  3134,    84,     0,     0,  1346,  2384,
    3289,     0,  2411,     0,     0,  2216,     0,     0,     0,     0,
       3,     8,    22,     0,    44,    27,    32,    17,    21,    16,
      46,    59,    52,    29,  3286,   397,   398,   399,   400,    42,
    3319,    41,    11,    62,    63,    19,    49,    12,    15,    18,
      40,    48,    36,    43,    56,    57,  1416,  1392,  1420,  1391,
    1387,  1383,  1402,  1403,  1404,  1410,    25,    26,    33,    50,
      67,    23,    64,    60,    24,  2335,    13,    28,    14,    51,
      45,    37,    61,    68,    38,     0,    58,    39,    66,    31,
      53,    30,     9,    10,    20,    54,    55,    47,    69,    34,
      65,    35,  1155,     0,     0,     0,     0,     0,  2115,     0,
       0,  2115,  1239,  1460,  3317,  3318,  3319,  1347,     0,  1348,
       0,     0,  2535,  2536,  2743,  2791,  2792,  2685,  2820,  2637,
    2915,  2937,  2963,  2725,  2724,  2727,  2726,  2728,  2729,  2730,
    2731,  2732,  2733,  2610,  2734,  2735,  2736,  2738,  2737,  2739,
    2740,  2741,  2611,  2684,  2612,  2690,  2742,  2692,  2691,  2744,
    2613,  2614,  2745,  2746,  2747,  2748,  2668,  2616,  2615,  2749,
    2751,  2750,  2693,  2694,  2671,  2752,  2753,  2754,  2756,  2617,
    2618,  2619,  2620,  2621,  2755,  2622,  2757,  2672,  2758,  2759,
    2623,  2760,  2761,  2762,  2763,  2765,  2764,  2665,  2766,  2767,
    2769,  2770,  2771,  2768,  2772,  2773,  2775,  2774,  2696,  2776,
    2695,  2777,  2624,  2778,  2779,  2780,  2781,  2782,  2783,  2784,
    2785,  2786,  2787,  2673,  2788,  2789,  2790,  2812,  2686,  2793,
    2795,  2794,  2697,  2796,  2797,  2798,  2800,  2799,  2801,  2803,
    2625,  2626,  2627,  2802,  2804,  2805,  2806,  2807,  2808,  2810,
    2809,  2814,  2815,  2698,  2628,  2669,  2629,  2630,  2811,  2813,
    3018,  2816,  2817,  2699,  2700,  2818,  2631,  2687,  2819,  2674,
    2822,  2821,  2632,  2823,  2633,  2824,  2825,  2826,  2827,  2828,
    2830,  2832,  2829,  2833,  2834,  2840,  2634,  2831,  2835,  2836,
    2837,  2838,  2839,  2841,  2701,  2842,  2666,  2844,  2843,  2845,
    2846,  2847,  2848,  2702,  2849,  2688,  2850,  2851,  2852,  2865,
    2866,  2856,  2857,  2859,  2860,  2863,  2858,  2864,  2869,  2868,
    2870,  2871,  2872,  2873,  2874,  2867,  2854,  2861,  2862,  2855,
    2875,  2876,  2853,  2877,  2879,  2878,  2880,  2703,  2881,  2882,
    2883,  2884,  2885,  2886,  2887,  2888,  2890,  2889,  2891,  2704,
    2705,  2706,  2892,  2893,  2894,  2681,  2895,  2707,  2708,  2896,
    2899,  2897,  2898,  2900,  2901,  2906,  2907,  2908,  2667,  2903,
    2902,  2904,  2905,  2709,  2710,  2711,  2909,  2910,  2911,  2912,
    2914,  2913,  2675,  2636,  2635,  2638,  2916,  2917,  2639,  2918,
    2920,  2919,  2683,  2640,  2921,  2922,  2924,  2923,  2712,  2713,
    2641,  2670,  2642,  2643,  2925,  2926,  2927,  2928,  2929,  2930,
    2931,  2932,  2933,  2934,  2935,  2936,  2714,  2715,  2938,  2939,
    2940,  2942,  2941,  2943,  2944,  2945,  2946,  2947,  2948,  2949,
    2644,  2950,  2676,  2951,  2952,  2645,  2954,  2953,  2646,  2955,
    2956,  2957,  2958,  2959,  2682,  2677,  2960,  2961,  2962,  2716,
    2964,  2965,  2966,  2678,  2967,  2968,  2969,  2647,  2970,  2971,
    2717,  2689,  2648,  2972,  2974,  2679,  2649,  2973,  2651,  2652,
    2975,  2976,  2977,  2650,  2978,  2653,  2979,  2980,  2982,  2981,
    2983,  2984,  2985,  2986,  2654,  2987,  2988,  2655,  2989,  2656,
    2990,  2991,  2992,  2993,  2995,  2994,  2996,  2997,  2998,  2999,
    3000,  3001,  3003,  3005,  3004,  3002,  3006,  3007,  2718,  3008,
    2657,  2719,  3013,  3014,  2720,  3009,  3010,  3011,  3012,  2680,
    3015,  3016,  3017,  2660,  3019,  3020,  3022,  3021,  2658,  2659,
    3023,  3024,  2664,  3025,  3026,  3031,  2721,  2722,  3027,  3028,
    3040,  3029,  3030,  3033,  3032,  3034,  3035,  2580,  2661,  3036,
    3037,  2662,  3038,  2663,  3039,  2723,   238,  2540,  2551,   222,
    2552,  2577,  2575,  2579,  2573,  2574,  2578,  2572,  2576,   450,
     129,     0,     0,     0,     0,  2211,  2115,  2089,  2115,  2115,
    2115,  2115,     0,  2115,  2115,     0,  2118,  2115,  2115,     0,
       0,     0,   441,  2125,  2402,     0,  2421,  2422,  2416,  3122,
    3123,  3117,   403,     0,     0,     0,  2302,  2301,     0,     0,
     311,   323,   326,   319,   322,     0,   218,  1349,   403,  2188,
     325,   326,     0,  1425,  3043,     0,  2307,   326,     0,  2188,
    2415,     0,     0,  2498,  2495,  2373,  2375,     0,  2371,  1530,
    1529,     0,  3289,  2541,     0,  1325,  1357,  1283,  3290,  3291,
       0,    76,    79,  2340,   348,     0,     0,     0,   711,     0,
       0,  1291,     0,  3291,  3301,  2413,     0,   129,  1264,     0,
     129,  2218,  2115,  2115,  3366,  3367,     0,     0,     0,  3361,
       0,  3368,     0,  1420,     0,  1406,     1,     5,     0,     0,
     711,  1070,  1071,  1069,   711,   711,     0,     0,     0,     0,
       0,  3324,  3317,  3318,  3319,     0,  2071,  1936,  1421,  1420,
    2018,  2022,  3305,  3304,  3306,     0,     0,  2018,  1411,  2807,
    2630,  2920,     0,  2320,  2334,  2318,  2529,  1389,  1385,  1116,
    1156,  1119,     0,     0,  1121,     0,     0,  1136,  2557,  2556,
    2555,  1133,  1132,  1131,  1129,     0,   573,   218,     0,  1241,
       0,     0,     0,  3325,  3324,     0,  1302,  2322,  2323,  2324,
    2325,  2326,  2327,  2330,   240,     0,   461,   464,     0,   453,
     456,     0,   130,   131,  1328,  1331,     0,   714,     0,   166,
       0,  2215,  2214,     0,  2213,  2191,     0,  2211,     0,  2113,
       0,     0,     0,     0,     0,   218,     0,  2303,   218,  2097,
    2115,  2115,   503,     0,  3187,  3202,  3203,  1473,  3199,  3204,
       0,  3201,  3193,     0,  3197,  3191,     0,  3223,  3195,  3200,
    2799,  2627,  2814,  2929,  2933,  2949,  2952,  2679,  2996,  3181,
    3166,  3182,     0,     0,  3185,  3189,     0,     0,  2126,  2127,
    2128,  1237,  2403,  2404,  2405,     0,  2425,     0,   416,     0,
       0,     0,     0,   405,   406,   472,     0,   412,     0,   403,
     387,     0,   386,   388,     0,   407,   382,   390,   389,   391,
     392,   393,   394,     0,   395,   396,   469,     0,   383,   384,
     499,   385,  2553,     0,  2554,  2582,  2584,  2581,  2583,  1344,
       0,  2485,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1473,  1473,  1473,  1470,     0,     0,     0,  2490,     0,
       0,     0,     0,  2481,     0,  2491,     0,     0,     0,  2483,
    2484,  2537,  2538,     0,     0,     0,     0,  2488,     0,     0,
       0,     0,     0,  2464,  1532,     0,  1470,     0,  2480,  2487,
       0,  2472,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1470,  2463,     0,  2482,
    2489,     0,  1473,  1470,  1470,     0,     0,  2726,  2610,  2741,
    2668,  2752,  2754,     0,  2617,  2618,  2619,  2620,  2621,  2665,
    2776,  2695,  2777,  2778,  2779,  2630,  2699,  2818,  2825,  2843,
    2845,  2702,  2884,  2886,  2891,  2704,  2705,  2706,  2897,  2898,
    2911,  2683,  2712,  2713,  2927,  2934,  2959,  2716,  2964,  2969,
    2972,  2992,  2719,  3013,  3014,  2720,  3012,  2680,  3025,  3031,
    3034,  3035,  2661,  2723,     0,     0,     0,     0,  1531,     0,
       0,  1770,  1418,  1606,   855,  1485,  1491,  1505,     0,  1604,
    1603,  1607,  1609,  1615,  1524,  1636,  1575,  1576,  1578,  1698,
    1577,  1582,  1583,     0,  1746,  1584,     0,     0,  1581,  2477,
    1580,  1579,  2478,  2479,  1574,  2515,  2551,     0,  2539,   611,
     610,     0,   338,   333,   341,   335,   337,   336,   342,   343,
     344,   339,   334,   340,   327,     0,   312,     0,   320,  3302,
       0,     0,   403,   506,  2189,  2130,  2133,  2129,   345,  3187,
    2727,  2933,  3155,     0,  3165,     0,  3316,  3311,  3313,  3312,
    3309,  3310,  3314,  1446,  3315,  1445,  1396,  1426,  1443,  1444,
       0,     0,     0,   991,  3066,  3067,  2681,  2683,  2682,  3068,
    3009,  2609,     0,     0,  2546,     0,     0,  2547,  2606,  2604,
    2608,  2603,  2607,  2602,  2605,  3042,  3052,  3048,     0,     0,
       0,  2315,  1066,  1065,     0,     0,     0,  2257,     0,   991,
    2315,  2258,     0,  1995,  2305,  2308,     0,  3070,  2271,  1067,
    3071,  2301,     0,  2243,  2259,  2220,  2264,   129,  3072,     0,
    2304,  1995,  2315,     0,  2236,     0,     0,     0,     0,  1459,
       0,   321,  3133,  1237,  2160,  1394,  2146,   501,     0,     0,
       0,  2372,   474,  3285,     0,     0,     0,     0,  3294,  1817,
    2086,     0,    80,    75,     0,     0,     0,     0,  2534,  3135,
      85,     0,     0,  3380,    73,     0,  2390,     0,  2388,  2385,
    2387,     0,  3294,     0,  2412,  1271,  1271,     0,     0,  1263,
    1265,  1266,  1271,  1271,  2219,     0,     0,     0,  2471,  2469,
    2470,  2542,  3363,  2468,  2467,  3372,  3374,  3357,     0,  3360,
    3359,  3369,  1409,  1408,     6,    70,     0,   218,   218,   711,
     168,   711,   140,   143,   711,   711,   711,   152,   156,     0,
     220,     0,     0,  3324,  1424,     0,     0,  1436,  1422,  1832,
    1423,  1834,  1831,  1830,  1829,  1860,  1861,  1863,  1862,  1864,
    1866,  1857,     0,     0,  2084,     0,  2079,  1937,  1944,  1936,
       0,     0,     0,     0,  2017,  1995,  2026,  2019,  1388,  2015,
       0,  1384,  1449,  1449,  3308,  3307,  3303,  2020,  1407,  1415,
    1413,  1414,  2021,  1405,     0,  2332,  2531,     0,  2337,     0,
    2018,  2022,  1007,     0,   223,  3322,  3323,  3321,  1473,  2558,
    2561,  3320,  2562,   223,  1130,     0,   574,  2116,     0,     0,
       0,     0,     0,     0,   576,   575,   512,     0,     0,  1245,
    1246,  1240,  1242,  1244,     0,     0,     0,     0,  2336,     0,
     242,   239,   221,     0,   403,     0,   451,   457,    86,     0,
    1332,  2106,  2108,   165,     0,     0,     0,  2192,     0,  1434,
    1936,  2194,  2199,  2205,  2209,  2212,  2091,     0,     0,  2094,
    2100,  2099,  2093,  2303,     0,  2103,   587,     0,     0,     0,
    2104,  2087,     0,   476,   478,  3188,  3186,  3220,  3219,  3224,
       0,  3221,  3217,     0,  3180,  3225,  3210,  3257,  3214,  3257,
    3257,  3211,  3218,  3257,     0,  3216,  3215,     0,  3183,     0,
       0,     0,  1238,  2133,  2406,  2407,     0,  1367,  2427,  2426,
    2423,  1928,  3119,  3124,   410,   417,     0,     0,  2897,     0,
     422,   421,   420,   273,   438,   410,   413,   430,     0,     0,
     271,   404,     0,   436,   439,   492,   488,   496,   490,   470,
     466,     0,     0,     0,     0,  1610,  1934,  1934,  1934,     0,
       0,  1825,     0,     0,     0,     0,  1934,     0,  1642,  1621,
    1622,     0,  1643,     0,     0,     0,     0,     0,     0,     0,
       0,  1776,     0,     0,     0,     0,     0,     0,     0,  2537,
    2538,     0,     0,     0,  1819,  1821,  2515,  2539,  1934,     0,
    1934,     0,  1478,  1652,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1934,  1934,     0,  1934,
    1660,     0,  2465,  2486,  1664,  1666,  1665,  1934,  1934,     0,
       0,  1934,     0,     0,     0,  2474,  2473,     0,     0,     0,
       0,     0,     0,     0,  2492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2494,     0,     0,     0,
    2493,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1612,     0,  1611,  1613,     0,  1418,   856,     0,     0,
       0,     0,  1528,  1527,  1526,  1525,     0,     0,     0,     0,
    1534,     0,  1536,  1538,  1533,  1535,  1537,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1614,     0,     0,
       0,     0,     0,  2466,     0,  1708,     0,   623,  2398,     0,
       0,     0,   310,  1351,  2563,     0,  1350,  1354,  3119,   485,
    2133,  2123,  2132,     0,  3186,     0,     0,     0,  3183,  1460,
    1442,     0,     0,  3044,  3046,   990,     0,     0,   993,   995,
    2151,  2150,   994,  1003,     0,   992,     0,  3107,     0,     0,
    3092,     0,  3073,     0,   999,  1001,  1000,  3087,   998,     0,
       0,     0,  3057,     0,     0,   711,     0,     0,     0,     0,
       0,     0,     0,  2286,     0,  1459,  1459,  2237,     0,  2315,
    2305,     0,  2315,  2311,  2270,     0,     0,   767,  2000,  1996,
    2263,  2309,  2310,  2315,     0,     0,  2315,     0,  2277,  2305,
    2315,  2232,     0,     0,  2224,  2229,  2225,     0,  2231,  2230,
    2233,  2221,  2222,     0,  2250,  2279,     0,  2262,  2269,     0,
    2249,  2256,     0,  2267,  2305,  2305,     0,  2315,  2315,  2315,
       0,  1460,     0,   483,  2496,  2499,  2503,  2507,  2374,   273,
       0,     0,  1359,  1361,  1360,  1377,  1285,  3293,     0,  3295,
       0,  3297,     0,    77,     0,     0,  2367,  2365,     0,     0,
       0,  2359,  2361,  2364,  2360,     0,     0,  2366,   129,     0,
    2362,  2341,  2344,  2351,  1459,  2342,     0,     0,   346,   349,
     351,     0,   354,  1928,  3138,  3137,     0,     0,     0,  1289,
    1292,     0,  2395,  2392,   129,     0,  2678,  3300,  3298,     0,
    1259,  1275,  1257,  1269,  1270,     0,     0,  1262,  1261,  3119,
    3381,  3382,     0,     0,  3358,  3375,  3356,     0,  3370,  3371,
    3355,     7,     4,   146,     0,     0,     0,   137,   711,   711,
     132,     0,   154,  1460,  1460,   711,   711,   711,     0,     0,
    1830,  1860,  1861,  1863,     0,  1862,     0,     0,  1928,     0,
       0,  1852,  1876,     0,  1876,  1854,  1855,     0,     0,     0,
    1436,  1858,  2543,  2080,  2083,     0,  2072,  2074,  2075,  2555,
    2077,     0,     0,  1939,  1944,  1451,  2008,  2009,     0,  2007,
       0,  1997,  2001,  2006,  2004,     0,  1988,  2025,  2016,  2064,
    1450,  2023,  2024,  1412,  2321,  2319,  2338,  2339,  2530,  1390,
    1386,  1008,  1007,   705,   708,   707,     0,     0,  1120,  2560,
       0,  1122,     0,  2303,  1137,     0,     0,  2303,   523,  2303,
     577,  2561,  3250,     0,  3262,  3239,  3119,  1243,  3326,  3327,
    1127,  1125,     0,  1303,  1304,  1307,     0,   243,   245,   462,
     403,     0,     0,     0,  1342,     0,  1340,  1339,  1337,  1338,
    1336,     0,  1327,  1333,  1334,  2303,   515,  1857,     0,  2195,
    2201,  2110,  2112,  2529,     0,  1435,  2197,  1986,     0,     0,
       0,  2207,  2114,     0,     0,   587,  2096,  3178,   590,   589,
    2101,   588,  2152,  3237,  2095,  1247,     0,     0,   403,   477,
     423,  3213,  1474,     0,  3194,  3198,  3192,  3196,     0,  3176,
       0,     0,  3184,     0,     0,  3222,  3205,  3209,  3208,  3206,
       0,  3207,  3212,  3190,   402,   442,  2120,  2408,  3025,  2409,
    2401,     0,  2424,     0,  1929,  1930,     0,     0,  1932,  3121,
    2027,     0,  3118,   418,     0,   410,     0,     0,     0,   433,
     269,   414,   410,   423,   432,   482,   272,   408,     0,     0,
     403,   403,     0,   273,  3119,     0,  1935,     0,  1791,     0,
       0,     0,     0,     0,     0,  1590,     0,     0,     0,  1729,
       0,  1791,  1753,  2057,  2058,  2038,  2039,  2037,  2040,  1471,
       0,  2041,  2056,  1676,     0,     0,     0,  1751,  1417,  1400,
       0,     0,  1904,  1905,  1906,  1907,  1908,  1909,  1910,  1911,
    1912,  1913,  1914,  1915,  1917,  1922,  1918,  1919,  1920,  1921,
    1916,  1923,     0,  1903,     0,  1777,  1742,     0,     0,     0,
       0,   856,     0,     0,     0,     0,     0,     0,     0,  1934,
       0,     0,  1934,     0,     0,     0,     0,  1752,     0,     0,
       0,  1750,     0,     0,     0,  1749,  1634,     0,     0,     0,
    1934,     0,     0,     0,     0,  1566,     0,     0,     0,     0,
       0,  1934,     0,     0,     0,     0,     0,     0,     0,     0,
    1559,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1926,  1924,  1927,  1925,     0,     0,  1817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1690,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1638,     0,
       0,     0,  2520,     0,  1036,     0,     0,     0,     0,  1605,
       0,     0,     0,     0,  3073,  1771,  1773,  1476,  1475,  1477,
    1488,  1481,  1486,  1479,  1483,     0,  1539,  2733,  1489,     0,
       0,  1521,     0,  1492,  1943,  1522,  1510,  1503,  1508,  1509,
       0,  1506,  1507,     0,  1512,     0,  1511,  1518,  1519,  1520,
    1523,     0,     0,     0,     0,  1608,  1002,  1616,  1956,  1744,
    1745,  1769,  1960,     0,  2516,  1460,  1562,  1561,  1563,  1564,
    1565,   624,     0,   618,   621,   635,     0,     0,  2397,     0,
    2695,  2719,  2720,   328,   331,   330,   332,     0,     0,     0,
       0,     0,  2131,     0,  2134,  1857,     0,     0,     0,  3241,
    3163,     0,     0,     0,     0,  1456,  1397,  1455,     0,     0,
       0,     0,     0,     0,  3090,     0,     0,  3089,  3088,     0,
    3109,     0,     0,  3094,  3115,  3116,  3113,  3114,  3112,  3093,
       0,     0,  3051,  3095,  3096,  3099,     0,     0,     0,     0,
       0,  3080,     0,  3009,  3053,  3054,  3059,  3049,  2278,     0,
       0,  2281,  2274,  2285,  2743,  2283,  2295,  2282,  2276,  2287,
    2275,     0,     0,  2292,  2288,  2315,     0,  2315,  2290,     0,
    2313,  2300,  2299,  2298,  2247,  2246,  2240,  2306,  2293,  2289,
     218,  2315,  2245,  2244,  2226,  2227,  2228,     0,  1995,     0,
    2311,  2280,  2305,     0,  2315,  2315,  2296,  2297,  2266,  2268,
    2178,     0,  1857,     0,     0,  2165,  2158,  2145,   403,     0,
       0,  2501,   269,     0,     0,     0,   608,  1377,  1363,  1379,
    1287,  1286,  1284,  3292,  3296,  1818,    79,  2171,  2172,    81,
    2170,    82,  2376,  2353,  2352,  2354,  2358,   129,  2363,  2355,
       0,  2368,  2369,   359,     0,   355,     0,     0,  3136,     0,
     712,     0,    74,     0,  1293,  2027,  2391,  2393,  2386,  3299,
       0,  1260,  1277,  1276,  1272,  1273,  1278,  1268,  1267,  2217,
    3364,  3373,  3377,  3362,  1007,  3174,  3262,   187,     0,     0,
       0,     0,   135,     0,   711,   153,   157,   711,     0,     0,
       0,   711,     0,  1873,  1865,  1867,  1868,  1869,     0,  1872,
       0,  1439,     0,  1427,  1427,  1437,  1875,  1856,  1853,  1877,
       0,  1876,  1876,     0,     0,  1836,  1835,     0,  1928,   996,
    2076,     0,     0,  1938,     0,  1940,  1951,  1939,  1453,  2027,
    1447,     0,  2473,     0,     0,     0,     0,     0,     0,     0,
     706,  2152,  2152,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   233,  2559,     0,     0,   521,   522,  2152,   520,
     563,   564,   567,   568,   569,     0,     0,   570,  2152,  2152,
     517,   543,   544,   547,   548,   549,   550,   551,   513,     0,
     518,     0,     0,     0,  3274,  1114,  1147,  3328,  1123,     0,
       0,  1306,   241,     0,     0,   449,   458,   452,   454,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    87,    88,   109,     0,  1329,  1341,  2107,
    1335,  2152,  2152,  2152,  2152,   519,   552,   553,   556,   557,
     558,   559,   562,   560,   561,     0,  2303,  2196,  1427,     0,
       0,     0,  2532,     0,  2011,  1987,  2206,     0,  2210,  2209,
       0,  2092,  2102,     0,  2153,     0,     0,  1249,  1248,  2098,
    2105,  3119,   403,   298,   426,   480,  3261,     0,  3260,     0,
       0,  3173,     0,  3233,  3236,  2529,     0,     0,     0,     0,
     403,     0,  2410,  1368,  1370,  1371,  1369,  1377,     0,  2544,
    1933,  2545,  2569,  2567,  2571,  2565,  2566,  2570,  2564,  2568,
       0,  3127,  3128,  3126,  2032,  2028,     0,  3120,  3125,   411,
     419,   434,   437,     0,     0,   403,     0,   415,   424,   428,
       0,   440,   493,   467,   467,   467,   269,  1345,     0,  1724,
       0,  1725,  1726,     0,  1591,  1826,     0,     0,     0,  1619,
       0,     0,     0,  1728,     0,  1472,     0,     0,  1594,  1586,
    1401,     0,  1755,     0,  1760,     0,  1758,     0,     0,     0,
       0,     0,     0,  1820,     0,  1822,  2516,     0,  1734,  1765,
       0,  1732,     0,  1754,     0,  1766,  1767,     0,     0,     0,
       0,  1738,  1736,     0,     0,     0,  1740,     0,     0,     0,
       0,     0,     0,     0,  1637,  1737,  1739,     0,  1672,     0,
    1722,  1673,  1674,  1675,  2519,     0,  1669,     0,  1670,     0,
       0,     0,     0,     0,  1623,  1624,     0,     0,     0,  1700,
       0,  1625,  1680,     0,  1599,  1701,  1682,  1630,  1631,  1702,
    1703,  1704,  1596,  1597,  1684,  1685,     0,  1706,  1598,  1686,
    1689,     0,  1633,  2027,     0,  1617,     0,     0,     0,  1635,
    1663,     0,     0,     0,  1595,     0,  1692,     0,     0,     0,
    2027,     0,     0,  1639,     0,     0,   857,  1419,  1587,  2517,
       0,     0,  1482,  1487,  1480,  1484,     0,     0,     0,     0,
    1501,  1500,     0,     0,     0,     0,  1493,  1943,  1504,  1958,
       0,     0,  1763,  1815,     0,     0,     0,  1718,  1719,     0,
       0,   617,   616,     0,   620,   696,     0,   637,   625,   614,
    2399,     0,     0,  1352,  1355,     0,     0,  2140,     0,  2137,
    2144,   601,  2124,     0,  2135,  2109,     0,  3164,     0,     0,
       0,     0,     0,     0,     0,  1460,  1461,  1461,  2515,     0,
       0,  3077,  3047,     0,     0,     0,  1006,  1005,  1004,  3108,
       0,     0,  3101,  3102,     0,     0,     0,  3074,  3075,  3076,
       0,  2592,  2548,  2550,     0,  2549,  2590,  2588,  2591,  2586,
    2587,  2585,  2589,  3083,     0,  3056,  3057,  3058,     0,     0,
    2273,  2284,  2316,  2317,  2241,  2294,  2291,  2312,  2027,  2251,
    2272,  2242,     0,  2265,  2223,  2313,  1936,  2305,  2238,  2239,
       0,  1436,  1461,  2161,  1460,  2162,   403,  2500,     0,  2505,
       0,   403,  1326,  1366,  1358,  1365,  1362,  1377,  1375,  1364,
    1062,  1061,     0,  1378,    78,     0,     0,  2356,  2357,  2350,
    2370,  2345,     0,   350,   360,   352,   356,   357,   358,   353,
    2815,  2897,     0,  1936,  3140,  3379,  1300,  1298,  1297,  1299,
    1288,  1294,  1295,  2396,  2394,  2389,  2414,  1275,     0,  1258,
    2027,     0,  3376,   147,  1007,     0,   164,  3274,     0,  1086,
       0,     0,   133,   169,  3352,   155,  3342,     0,   148,     0,
     222,     0,     0,  1870,  1871,  1833,  1427,  1429,  1428,     0,
       0,  1431,     0,     0,     0,     0,  1841,     0,  1837,  1839,
       0,  1901,  1893,     0,  2081,  2073,  2078,  2514,  1948,  1992,
       0,     0,  1398,  1951,  1452,  2010,  1999,     0,  2003,  2002,
    2005,  1451,  1989,  1992,  1460,     0,     0,  1118,     0,     0,
       0,   227,   230,   228,   229,   572,   571,     0,  2303,   565,
    2152,  2152,   183,  2152,  2152,   182,   184,     0,   178,   175,
     185,  2152,  1138,   171,     0,     0,     0,     0,  2027,     0,
       0,     0,   189,     0,     0,  2303,   545,   524,   525,   528,
     529,   530,     0,  3244,  3243,     0,  3264,     0,     0,  3266,
       0,  3265,  3263,  3229,  3240,     0,  1139,  1007,     0,  1149,
    1151,     0,     0,  3328,  1305,     0,   244,   403,     0,   455,
       0,     0,  2027,     0,  2027,  2027,     0,     0,  2027,     0,
    2027,     0,     0,     0,     0,     0,     0,     0,  2027,     0,
       0,     0,     0,  2027,     0,  1343,     0,     0,     0,     0,
    2303,   554,     0,  2152,   514,   531,   532,   535,   536,   537,
     538,   539,   542,   540,   541,  2193,  2111,  2209,     0,  2530,
    1459,     0,  2203,  1936,     0,  2208,  3119,  3179,   586,   766,
    3238,  1247,     0,   299,     0,     0,   423,  3258,     0,  3278,
       0,     0,     0,     0,     0,     0,     0,     0,   403,  2173,
       0,  1377,  1381,  2417,  3130,  3131,  3129,  2035,  2036,  2033,
    2031,  2034,   435,   302,   304,   301,   303,  2601,     0,   289,
     275,   291,     0,   378,   284,   376,   377,  2598,  2596,  2600,
    2594,  2595,  2599,  2593,  2597,   473,     0,   274,     0,   431,
     423,     0,   487,   489,   468,   497,   491,   403,     0,  1792,
    1823,     0,   956,   956,   942,   960,  1809,     0,  1803,  1806,
       0,   956,  1811,   956,  1804,   956,     0,     0,  1801,  1802,
       0,     0,     0,  1730,  1727,     0,     0,     0,  1780,     0,
       0,     0,     0,     0,  1515,     0,  1713,  1735,  1733,     0,
       0,     0,     0,     0,     0,     0,     0,  1741,  1572,     0,
    1570,     0,  1571,     0,  1573,     0,     0,  1723,     0,  1541,
    1560,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1818,     0,     0,  2043,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2521,     0,     0,     0,  1025,
    1031,  1034,  1035,  1037,  1029,     0,  1694,     0,     0,     0,
    1774,  1772,     0,  1498,  1494,     0,  1942,  1514,  1513,     0,
       0,  1502,  1960,  1959,     0,  1762,     0,     0,  1816,  2518,
    1461,  1709,  1460,   627,     0,   645,   619,     0,  2027,   622,
     636,     0,   648,     0,     0,     0,   329,     0,  1356,     0,
       0,  2141,  2143,  2509,  2508,  2520,     0,     0,  2136,     0,
    3162,  3242,     0,     0,     0,     0,     0,  1454,  1462,  1457,
       0,     0,     0,  3045,  3091,  3082,     0,     0,     0,     0,
    3106,  3100,  3097,  3098,     0,     0,     0,  3081,  3055,  3061,
    3060,  3063,  3065,  2261,  2260,     0,  2314,  1995,  2234,  2253,
    2255,  2315,  2180,  2183,     0,  1928,  2169,     0,     0,  2163,
    2167,     0,  2504,     0,     0,   475,     0,  1895,    83,     0,
    2348,     0,  2343,  2346,     0,     0,  3151,  3152,  3144,  3147,
    3145,  3146,  3150,  3153,  3154,  3141,  3148,  1995,     0,  1290,
    1296,  1274,     0,  1281,  1279,  3365,  3378,     0,  1139,     0,
       0,     0,     0,     0,     0,   715,  1007,   170,     0,     0,
     198,  3328,   160,     0,   158,   150,  1438,  1430,  1432,  1427,
    1427,     0,  1829,     0,     0,     0,  1829,     0,     0,   608,
       0,  1874,  1890,   997,  2431,  1949,  1950,     0,  1945,  1993,
    1994,  1947,  1941,     0,  1952,  1954,  1399,  1998,  1448,     0,
    1991,     0,     0,  2067,  2069,   765,   764,   232,   231,   236,
     237,  2053,  2054,  2051,  2052,   578,   591,  2055,   592,   566,
    2027,  2027,  2157,  2156,  2027,  2027,   177,   174,  2155,  2154,
    2027,  2027,   172,   193,   192,   194,   195,   197,   196,   191,
    1134,     0,   579,   580,   546,     0,   526,  3247,     0,  3254,
    3249,  3252,  3232,  3231,  3230,  3227,     0,  2027,  2027,  2027,
       0,  2027,  3273,  3275,     0,  1142,  1235,  1235,     0,  1235,
       0,     0,  1235,     0,  2152,     0,     0,  2152,   608,  1253,
    2152,  2152,  2152,  2152,     0,  2152,  2152,  2152,  2152,     0,
    2152,  2152,     0,  2152,     0,     0,     0,  2152,     0,  1218,
       0,  2152,  2152,  2152,  2152,  1235,  2152,  2152,     0,     0,
       0,     0,  2152,  2152,     0,     0,  2152,  2152,     0,  1163,
    1217,   717,   760,   744,   745,  1115,  1162,  1164,  1176,   604,
       0,  1194,  1220,  1221,  1219,     0,  3287,     0,     0,   203,
    3330,     0,  3332,     0,  1309,     0,  1308,   403,   459,  2027,
    2027,   102,  2027,    94,    95,    90,   122,   123,    92,    93,
      98,    97,    99,   100,   103,   104,   101,    96,    91,   126,
     128,   127,   105,   124,   125,    89,   585,   584,   583,   582,
     555,     0,     0,  2303,   533,     0,  1936,  2533,     0,     0,
    2012,  1460,  2198,  2200,  2090,  2088,   504,     0,   481,   427,
     479,  3259,     0,  3172,  3177,     0,  3235,  3234,  3262,  3262,
    3262,  3262,   445,     0,  2121,  1372,  1377,  1381,     0,  1373,
    2428,   936,   958,   956,   973,   922,   942,   938,   942,   932,
     973,   879,   879,   973,   935,   879,   942,   937,     0,   934,
     973,   933,   879,     0,   926,   958,   873,   874,   879,   956,
     892,     0,   942,   915,   914,   973,   918,   919,   917,   921,
       0,   923,   942,   928,   916,   920,     0,     0,   956,   956,
     956,     0,     0,   956,  1003,   864,   866,   865,   867,   868,
     942,   958,   958,     0,     0,   956,   960,   380,     0,     0,
     292,     0,   270,   425,   429,   403,   467,     0,  1824,     0,
     957,  1793,  1794,     0,  1808,   944,   943,     0,   961,  1810,
       0,  1807,  1796,  1813,  1800,  1805,  1812,  1798,  1589,  1620,
    1593,  1592,     0,     0,     0,  1650,     0,  1778,  1761,  1759,
       0,     0,  1627,     0,  1629,     0,     0,  1715,  1683,  1757,
    1653,  1687,     0,  1632,     0,  1659,  1657,     0,  1569,  1567,
    1568,     0,  1640,  1667,     0,  1558,  1668,     0,  1699,  1646,
       0,  1648,     0,  1649,     0,  1678,     0,  1651,  1681,  1705,
    1585,  2045,  2044,  2042,  1600,  2027,     0,  1654,  1618,     0,
       0,  1691,  2522,  2523,     0,  1693,     0,     0,  1036,  1022,
    1023,  1024,     0,  1026,  1028,  1030,     0,  2027,  1707,  1517,
    1516,     0,  1490,     0,  1499,  1496,     0,  1962,  1961,     0,
       0,  1710,  1462,  1720,     0,   628,   629,   631,   633,     0,
     698,   623,     0,   612,     0,   627,   615,  1353,   486,  2139,
       0,     0,     0,  2138,  2148,     0,     0,     0,  3159,  3158,
    3157,  3156,     0,  1458,  1466,  1465,  2512,  2516,  3079,  3078,
    3111,  3110,  3104,  3103,  3105,     0,     0,  3084,     0,     0,
    2049,  2050,  2048,  2046,  2047,  2252,  1995,  2248,     0,  1936,
       0,  1893,  1461,  2159,     0,   484,  2506,     0,     0,  1898,
       0,  1899,  1896,  1897,  2027,     0,     0,   368,   363,   371,
     365,   367,   366,   372,   373,   374,   375,   369,   364,   370,
     362,   361,     0,  3139,  1301,     0,     0,  3175,  1142,     0,
    1102,  1104,  1103,  1087,  1088,     0,   141,   144,   815,     0,
       0,   134,   596,   604,   716,   719,   593,   136,   267,   225,
       0,     0,     0,   247,   780,   781,   779,   778,     0,   247,
    3328,  1441,  1440,  1842,     0,  1846,  1851,  1847,     0,  1838,
       0,  1859,  1902,  1894,     0,     0,  2439,  1992,     0,     0,
    1992,  1461,  2065,  1460,   176,   181,   180,   173,   186,   179,
     190,   527,  3248,  3246,  3245,     0,  3253,     0,  3228,  3269,
    3267,  3268,  3271,     0,     0,  3270,  3272,  1140,  1141,     0,
    1135,  1109,   711,  1236,   709,     0,  1198,  1202,  1199,     0,
     816,   711,  1063,  1063,   709,  2113,  1346,  2113,     0,     0,
    2113,     0,  2115,  2113,     0,     0,  2113,  2113,  2152,     0,
    1346,     0,  2027,   606,  1256,  1254,  1255,     0,  2027,  2027,
    2027,   742,   763,     0,  2027,  2027,  2027,  1346,     0,     0,
    2152,  2027,  1211,  1158,  1212,     0,     0,  1159,     0,  2027,
    2027,  2027,  2113,  2027,     0,  1346,  1178,  1346,  1346,     0,
    2027,   750,   751,   749,  2027,  2027,     0,   718,  1007,  1160,
     605,  1161,   815,     0,  1250,   791,   818,  2525,     0,  3288,
       0,     0,     0,  1148,     0,   206,   204,   214,  3329,     0,
    1126,     0,  3332,  1311,  1312,     0,     0,     0,   115,   117,
       0,   119,   121,     0,   111,   113,   516,   581,   534,  2209,
    2202,     0,  2013,     0,  2204,   300,     0,     0,  3262,  3276,
    3276,  3276,  3276,   403,   441,   444,  2174,  1374,  1382,  2430,
    2429,     0,   959,   885,   973,   971,   973,   899,   974,   946,
     939,   946,   902,  1016,  1010,  1014,  1011,   908,  1012,     0,
    1018,   880,   922,   973,   910,     0,   879,   901,   907,   946,
       0,   896,   905,   973,   872,   909,   895,     0,   946,   911,
     924,   927,   929,   931,   946,   973,     0,     0,   380,   879,
     894,   893,     0,   879,   946,   989,   940,   925,  1012,  1018,
     879,   973,   946,   946,     0,   285,   294,  2027,   296,   379,
     403,   471,     0,     0,     0,     0,  1012,     0,     0,  1814,
    1012,  1012,  1731,     0,     0,     0,     0,  1784,     0,     0,
       0,     0,     0,  1588,     0,  1711,     0,     0,     0,     0,
     942,  1548,  1550,  1546,  1549,     0,   956,  1552,     0,   923,
     956,  1555,  1557,  1542,  1543,  1544,  1545,     0,     0,  1827,
    1828,     0,  2063,  2062,  2061,     0,     0,     0,     0,  2524,
    1020,  1696,     0,  1033,  1027,  1025,  1032,     0,  1775,  1495,
       0,     0,  1964,     0,  1764,  1721,   632,     0,   699,     0,
     652,     0,   650,   626,     0,  2142,  2510,  2521,   602,     0,
       0,  3161,  3160,  1464,  1463,     0,     0,     0,  3062,  3064,
    2254,  2182,  1986,  2184,  2177,  2168,  2166,     0,  1179,     0,
    1180,  1191,  1193,  1380,     0,  2381,     0,  2379,  2349,  2382,
       0,  1280,  1282,   163,     0,   138,     0,     0,  1109,  2640,
       0,   784,   786,   787,   788,   789,     0,   597,  2428,   603,
    1007,   720,   715,   263,  3353,   507,   508,     0,     0,  3332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1883,     0,  1882,     0,  1888,  1892,     0,     0,     0,     0,
    2432,  2434,     0,  2082,  1946,  1955,  1953,  1990,  2070,  2068,
       0,  3255,  3251,  2030,  2029,  1143,     0,   817,  1110,  1346,
       0,     0,     0,  1222,     0,     0,     0,  1063,   807,   711,
    1109,  1064,   711,   711,  1196,     0,     0,     0,  1170,     0,
       0,  2113,     0,  1224,     0,  1223,     0,     0,     0,     0,
    1233,  1234,     0,  1982,  1984,  1992,  2060,  2059,   739,     0,
    1215,   732,   731,   734,   733,   736,   735,     0,  1231,  1232,
     728,   725,   737,     0,   727,   752,     0,   740,   722,     0,
     776,   777,   775,   746,   753,   723,   724,     0,   730,   729,
     726,     0,  1186,     0,   768,   773,   771,   770,   769,   774,
     772,   741,   759,   738,   754,  1175,  1235,  1235,  1195,     0,
     782,  2528,     0,  1252,  1197,     0,   792,     0,     0,   758,
     757,   755,   756,   213,   202,     0,     0,  1150,  1152,     0,
       0,  1153,  3331,  3334,  1124,  1317,     0,   403,   107,  2027,
     108,  2027,   106,  2027,     0,  2014,  3279,  3276,     0,  3170,
    3169,  3168,  3167,   403,   446,     0,     0,   897,   975,     0,
     898,   948,   949,   947,   875,   871,  1017,   882,  1013,  1009,
    1019,  1015,   971,   881,   903,   904,   877,     0,  1111,   889,
       0,   878,   930,   876,   890,     0,     0,   281,     0,   279,
     288,   906,   380,   276,   887,   891,     0,   900,   883,   884,
     886,  1018,   869,   870,   381,  2027,   290,   309,   308,     0,
       0,     0,   954,   952,   955,   953,  1795,     0,  1797,  1799,
    1644,  1645,  1781,  1992,  1779,  1786,     0,     0,  1785,  1677,
       0,  1628,     0,  1712,     0,  1688,  1658,  1656,  1641,  1551,
    1547,  1554,   924,  1553,  1012,  1671,  1647,  1679,  1601,  2027,
    1655,  1661,  1662,     0,  1695,  2027,  1497,     0,  1967,  1966,
       0,     0,  1992,   630,  2027,   697,   625,     0,     0,   649,
       0,   613,     0,  2147,  2149,  2513,  3086,  3085,  2011,  2502,
    1376,     0,  1900,  2377,  2027,     0,  2347,     0,     0,     0,
       0,     0,     0,   790,   783,   815,     0,   595,   701,   721,
     604,   266,   264,   265,     0,   259,   261,     0,   234,   226,
       0,   403,   511,   509,   510,     0,     0,   149,     0,   248,
       0,   250,   251,   162,     0,  3332,  1843,     0,  1848,     0,
    1840,  1878,  1878,  1889,     0,     0,     0,     0,  2433,     0,
       0,  2440,  2442,     0,  1145,     0,  1144,     0,  1181,     0,
       0,  1200,     0,   711,  1059,  1060,  1109,  1084,  2525,  1109,
    1109,     0,  1169,     0,  1332,  1003,  1207,     0,  1165,     0,
    1209,  1210,  1247,   748,  1167,     0,  1985,   607,  2369,  1174,
     747,     0,  1250,  1166,  1188,  1172,  1201,  1251,  1041,   822,
     810,   820,  2527,   200,   205,   215,   216,  1128,     0,  3333,
       0,  1318,  1314,  1315,  1310,   403,   116,   120,   112,     0,
    3171,     0,  3283,  3277,  3281,     0,     0,   972,   950,   951,
     976,  1012,     0,  1012,   380,   280,   283,     0,   286,     0,
       0,   888,   318,   317,   315,   403,   305,   313,   307,     0,
     314,     0,   298,   494,     0,     0,  1783,  1743,  1787,  1788,
       0,  1714,  1716,  1556,     0,  1021,     0,  1963,  1957,     0,
       0,     0,     0,     0,     0,  1976,  1968,     0,  1768,   700,
       0,     0,   638,   655,   654,   651,  2511,  2181,  1192,  2380,
       0,  3149,     0,     0,     0,  1992,  1107,     0,     0,   785,
     598,   702,     0,  2428,   268,   263,   262,   235,  3354,  1460,
     211,  3348,   225,     0,     0,     0,   252,   225,   151,     0,
       0,     0,  1886,  1884,  2437,  2438,     0,  2435,     0,     0,
    2441,     0,     0,     0,  1183,     0,   710,     0,  1109,  1084,
    2525,     0,   793,     0,   797,   799,     0,     0,  1250,  1171,
    1216,  1208,  1225,  1206,  1346,  1983,     0,     0,  1205,  1187,
    1189,  1293,     0,  1045,   824,   819,   811,   832,     0,   207,
    1154,   403,     0,     0,     0,  1313,     0,  1320,     0,  3282,
    3280,  2175,  1857,   913,  1112,   912,   287,   282,   277,   941,
    2027,   295,   316,   297,   293,   467,   945,  1992,     0,     0,
    1626,  1602,  1697,     0,  1973,     0,     0,  1971,  1970,     0,
    1965,  1972,     0,     0,   646,   662,   658,     0,   660,   661,
     683,  2383,     0,     0,  3119,     0,  1106,     0,  3119,     0,
     761,   594,   260,  3343,   203,   212,     0,  3350,   161,   249,
       0,   257,     0,   159,  1845,  1850,     0,  1879,     0,     0,
       0,  2436,  2444,  2443,  3256,  1146,     0,     0,     0,  1182,
       0,   812,   805,   801,     0,  1085,     0,   795,     0,     0,
    1214,     0,  1204,  1168,   743,   608,     0,  1173,     0,  1044,
       0,  1049,  1039,   850,   987,     0,   853,     0,   823,   825,
     980,   981,   827,     0,     0,     0,     0,     0,     0,   964,
       0,   967,     0,     0,   821,     0,   833,   963,   970,  2526,
       0,   209,   217,  3335,     0,     0,  1319,  1324,     0,  1321,
    1323,  1433,     0,  2418,     0,   306,   495,  1782,  1790,  1789,
    1974,     0,  1975,  1978,     0,     0,  1979,     0,   642,   644,
     634,     0,   639,     0,   656,     0,  2152,  2152,     0,  2152,
    2152,  2152,  2152,   676,   684,   686,     0,     0,  3119,  1074,
    1992,     0,  1076,     0,   600,   762,     0,   214,  3349,     0,
       0,     0,  1881,  1880,  1895,     0,  1203,  1185,     0,     0,
       0,     0,   803,     0,     0,     0,     0,     0,     0,     0,
     862,   863,  1213,   859,   860,   861,     0,  1177,     0,  1042,
       0,  1046,  1047,  1048,     0,  1040,   851,   852,   988,   826,
     986,   979,   978,     0,   969,   965,     0,   841,     0,     0,
     971,   962,   834,   208,     0,   201,  3336,  3337,  1316,     0,
    2176,  2186,     0,   996,   278,  1969,  1977,  1981,  1980,   640,
       0,   647,   669,   659,   665,     0,  2152,     0,     0,  2152,
       0,     0,     0,     0,     0,   653,   685,  2152,   188,  1072,
       0,     0,  2152,  1226,  1075,  1100,  1082,     0,  1105,  1108,
    1226,  1077,  1099,  1080,     0,     0,     0,  3351,   255,     0,
       0,     0,  1184,   808,     0,     0,     0,     0,     0,     0,
       0,  2476,  2475,     0,     0,  1043,     0,     0,   985,   984,
     982,   983,  1467,   968,     0,   836,   977,   835,   210,  1322,
       0,     0,  2419,   646,   643,   669,     0,   667,     0,   663,
     657,   664,     0,   695,   689,     0,   691,   692,   690,   687,
     680,     0,   678,     0,     0,     0,  1226,  1073,  1098,  1097,
    1078,     0,  1092,  2027,   142,  1228,  1227,  1083,     0,   145,
    1081,     0,  1460,   216,     0,   253,  1887,  1885,     0,     0,
       0,  1072,     0,  1074,  1076,   858,     0,  1055,  1054,     0,
       0,  1051,  1050,     0,   966,   828,   828,   842,  2185,  2187,
    2445,   641,   666,     0,   674,   670,   672,   675,   694,   693,
       0,   677,     0,   688,  1089,  1090,   139,  1079,  1101,  1091,
    1230,  1229,  1096,  1095,  1093,  1094,   809,  3344,   199,   256,
       0,     0,  1072,     0,   794,  1072,   798,   800,  1190,  1058,
    1056,  1057,     0,     0,  1468,     0,   839,   829,   831,   838,
     844,   845,   843,   846,     0,  2431,   668,     0,     0,   683,
     682,   679,     0,   254,   806,   802,  1072,   796,     0,     0,
    1469,   830,   837,   847,   849,     0,  2439,   673,   671,   681,
       0,   804,  1053,  1052,   848,     0,  2447,  3345,  2446,     0,
    2451,  3340,     0,     0,  2458,  3338,  3339,     0,  3346,  2449,
    2450,  2448,  2453,     0,     0,  2455,  2456,     0,  2420,  3341,
     403,  2457,  2452,     0,  2459,  2461,     0,  3347,  2454,     0,
    1460,  2460,     0,  1461,  2462
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5013, -5013, -5013, -5013,  2267,  4455, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013,  2796, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  1987, -5013,   481, -5013,   487, -5013,   486, -3059,  -628,
    4149, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  2151, -2970, -5013, -5013,    23,  1566, -5013, -5013,   320,
   -5013,    15, -5013, -5013, -5013, -4272,  -116,  -303, -5013,    76,
    4639,  -117,  3990,  1085, -4508, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  1076, -5013,   439, -5013, -3560, -5013, -5013,   155,
   -5013, -5013, -5013, -1864,  -634,  -615, -5013,   464, -5013,   224,
   -5013,   142, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
     211, -5013, -5013, -5013,    72,   828, -4376, -5013, -5013, -5013,
   -5013,  2457, -5013,  1940, -5013, -1785,  3672, -5013, -5013, -5013,
   -5013, -5013,  2810, -2433, -5013, -5013, -5013,  1702, -5013,  2539,
   -5013, -4295,   -95,  -892,    37, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -1316, -5013, -5013, -5013, -5013, -5013, -5013, -2061,
    1935, -5013,  1990, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,   914, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013,  2670, -5013, -5013,  4607, -5013, -5013, -5013,
   -5013,  1343, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    3242, -5013,  3240,  3243, -5013,  3246, -5013, -2818, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
    3980, -5013, -5013, -5013, -2745, -5013, -5013, -3110,  3374, -5013,
   -2451, -5013, -5013, -2367, -5013, -5013, -2415,  1320, -5013, -5013,
    1865,  1589, -5013, -1845, -2536, -2534, -5013, -5013, -5013, -2679,
   -2651,  -748,  3323, -1366, -3007, -5013, -5013, -5013,   186,   189,
     382,  1524,  2091, -5013, -3666, -5013, -5013,   627, -5013, -5013,
   -5013, -5013, -5013,  1236,   423,  1235, -5013,   784,  3019, -2569,
   -5013, -5013, -5013, -5013, -5013, -5013,  -137,   223,  -206, -5013,
   -5012,   428, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -3363, -5013, -5013, -5013,  -328, -5013, -5013,  -282, -5013, -5013,
    -327, -5013,   -43, -5013, -5013, -5013, -5013,  2832, -1917,  1071,
    -643, -5013, -3567,  1556, -3952, -3189, -5013, -5013,    88, -1321,
   -1314,  -213, -5013, -5013, -5013, -5013, -5013, -5013,  1011,   419,
    1555, -3673, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -3670,
   -3668,   694, -5013, -4643, -5013, -5013, -5013, -4411, -5013, -5013,
   -5013, -5013, -5013, -5013,  -249, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -3498, -5013, -5013,   -61,   -90, -5013,    34,   606,
   -5013,  -553, -5013, -5013, -5013, -5013, -5013, -3519,  1340,  1463,
   -5013, -5013, -5013, -5013, -2650, -3180,   187, -1883, -3081, -1454,
    1411,   -84, -3636, -4641,  -611,  -706, -5013, -5013, -3138, -3593,
   -5013, -3686,  -668, -2792, -3143,   -93, -5013, -5013, -1702, -3891,
    2196, -5013,   959, -2092, -1283, -4156,  1905, -5013, -5013,  1311,
   -5013, -1707,  1309, -5013, -5013, -5013,  1318, -5013,  -262, -5013,
   -5013, -5013, -5013, -3568, -5013, -2501, -4005, -5013, -5013,  5400,
    5401, -3213,  -211,  -210, -5013, -5013, -5013,   220, -5013, -5013,
   -1224,  -177,  -110,  -102, -3643, -2017,   139, -3584,   958, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  1778,  1220, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  1600, -2517, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -4394, -4136, -5013, -5013,  1062, -4397, -3292, -3282, -3675,  4270,
   -5013, -5013, -5013, -5013,  4094, -3337, -3695, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,  3579,  1413, -5013, -5013,  2300, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,   213,  2306,
   -5013, -5013, -5013, -5013, -5013,  2780, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,   -48, -5013, -5013, -5013, -5013, -5013,
     411,  3440, -5013, -5013, -5013, -5013,   -11, -5013, -5013, -5013,
   -5013,  3088, -5013, -5013, -5013, -5013,  2963, -5013, -5013, -5013,
   -5013, -5013, -5013,  2092, -5013,  2688, -5013, -2456, -5013, -5013,
    1533,  -166, -5013, -5013,   -53, -5013, -5013, -5013, -5013, -5013,
      31, -5013, -5013, -5013,  5394, -1524,    16,   -67, -5013, -5013,
      11, -5013, -5013,  4152,  -508,  2502,  -727,  4780, -5013, -5013,
   -5013, -5013, -2492,  2382, -5013,  4205, -5013, -5013,  4378,  1402,
    4173,  2263,  1576,  2453, -1696,  -161, -3010,  1357, -5013,  1931,
     960, 10078, -5013, -1609, -1584, -5013, -5013,   -41, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,  2583,  2588, -5013,
   -5013,  3884, -4834, -5013, -5013,  -854, -5013, -2486, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  1939,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013,  3825, -1608, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,  1596, -5013, -2788, -5013, -5013, -5013,
   -5013, -5013, -5013,  -625, -5013,  3972, -5013,  4015, -5013, -1231,
   -1766,  3570, -5013,  4229, -5013, -5013, -5013, -5013, -5013, -5013,
    3576, -5013, -2049, -5013, -2478,  4232,  4234,  4237, -5013,  4238,
   -5013, -5013, -1653,   475, -5013,   823, -5013, -5013, -5013, -5013,
   -5013,  1319, -5013,    57,   881,    64, -4119, -1513,  1256, -5013,
   -5013, -1822,  3603,  4024, -1303, -5013,  2905, -5013,  2536,  3580,
    1981, -5013,  2315, -5013,  1254,  1258, -5013, -5013,  1992, -5013,
   -5013, -5013, -5013,   589,   128, -5013, -5013, -5013,   476,   920,
   -2038, -5013,   596, -3201,  4239,  -300, -1181, -5013, -1308,  2329,
     579,  4845,  -518, -5013, -5013,  4226, -5013, -2848, -5013,  1227,
   -1547,  -425, -2958, -4335, -3153, -5013, -1853, -5013, -5013, -5013,
   -5013, -5013,  1265, -5013, -5013, -5013,  2938, -5013,  5504, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  -684,
   -1190, -5013, -5013,  2814, -1036,  -142,  5524,   -52, -5013, -5013,
     -45, -5013, -5013, -5013, -5013,  4115,  3869, -5013,  2788, -5013,
   -5013, -5013, -5013,  2537, -5013, -5013,   954, -1104,  2779,  2313,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,   927, -5013, -1823,
   -5013, -5013, -5013, -5013,   -23, -5013, -5013, -5013,  1384, -5013,
     -22,  4954,   -17, -5013, -5013, -5013,  4798, -5013, -5013, -5013,
   -5013, -5013, -5013,  3541, -1412,  4801, -5013, -5013, -5013, -5013,
   -5013, -5013,  3101, -5013, -5013, -5013, -5013, -5013, -5013,  3829,
    4965,  -670, -1650, -5013,  -989,  3104,  2491,  -919, -5013, -5013,
   -5013,  4262,  4974, -5013, -5013,  5526, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013,  3062,   525, -5013, -5013, -5013,
   -5013, -5013,   620, -5013, -5013, -5013, -5013,  3730, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013,  1657,  -114, -5013,   908,  -133, -5013,   568, -5013, -5013,
   -5013, -5013, -5013,  -169, -5013, -5013,  -174, -5013, -1375,  4655,
   -1312, -5013, -1723, -3312, -5013,     4, -5013, -5013, -5013,  3108,
   -5013, -5013, -5013, -5013,  1458, -5013, -5013, -2626,  -927, -1494,
   -3639,   421, -5013, -5013, -5013,  -639,  4334,   151,  1253, -1258,
   -5013, -5013,  2639,    -3,  -877,  -139,  -723,  -740, -1083, -5013,
    7903, -5013, -5013, -5013, -5013,  -666,  -663,  -635,  1793,  -629,
    1703,  -623,  -572, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013,  2538, -5013, -5013, -5013,  1434, -5013,
    5001, -5013,  3311, -1721,  5002,  3188,  2566,  2568, -5013, -5013,
   -5013, -5013, -1726, -5013, -5013, -1715,   137, -5013,  3526, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013, -5013,  3732,  -558,
    -556,  3930,  5017,  4552, -5013,  4194, -5013, -5013, -5013, -5013,
   -5013,  1856, -5013, -1945,  2608, -1420, -2897, -5013, -5013,  2962,
    1341, -5013, -5013,  1316, -5013,  2272, -2550, -3025, -5013,  2472,
   -2872, -5013, -5013,   539, -5013, -5013, -5013,  1789,   166,  4993,
    4427, -5013, -5013, -5013, -5013,  5596, -5013, -5013,   221,  5621,
    5622,  5623,  -347, -5013, -3188, -5013, -3849, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013, -5013,   640, -5013,   458,
   -5013, -5013, -5013, -5013, -5013, -5013,  2531, -5013, -5013, -5013,
   -5013, -5013, -5013, -5013, -5013, -5013
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    69,   738,  1952,    70,    71,    72,    73,    74,  1918,
      75,  1261,  2576,  1263,  1884,  2579,    76,   707,    77,  2073,
    2773,  2774,  4483,  4484,  4477,  4478,  4480,  4481,  2775,   821,
     822,    78,  2631,  3735,  3233,  2628,  5039,  1958,  4706,  1959,
    4707,  2624,  3741,  4320,  1963,  2633,  1964,  4319,  4313,   746,
    3736,  3312,  3313,  1320,  3228,  3321,  3322,  2636,  4311,  4463,
    5309,  4467,  5451,  5565,  5374,  3349,  4881,  5310,  5311,   641,
    1331,   606,  2038,  5377,  2701,  5059,  2702,    79,   814,  1431,
    2066,  2067,  4730,  4731,  5069,  5070,  5071,  5054,  5055,  5056,
    5057,  4309,  4723,  2875,   909,  2170,  2876,  4942,  4936,  4937,
    4938,  4558,  3458,  3459,  3460,  4578,  3461,  4955,  4960,  3423,
    3424,  3977,  3462,  5185,  5186,  5187,   661,  1137,  5188,    80,
      81,   662,   671,   663,  1134,  2433,  1135,    82,    83,   705,
    1908,  1909,  1910,  1911,  3199,  2594,  3193,  3194,  4280,  4943,
    3464,  4575,   910,   911,   912,    85,   642,   913,   914,   915,
     916,  1532,  2163,  2164,   917,   918,   919,   920,   921,  2824,
    2879,  3478,  2825,  3425,  2880,  2174,   922,   923,   924,   925,
    1533,   886,   887,  2840,  3992,  4505,    86,   619,   817,   818,
    2072,  2747,   819,  2748,  3358,  4476,   820,  1433,  2744,  1435,
     926,  3482,   927,   928,  2183,   929,  1523,    87,  1869,  2120,
     852,  1474,   930,  1247,  2558,  1143,  2441,  3483,   931,  2180,
    2182,  2179,  3481,  5335,  2181,    88,   652,   682,   640,  1472,
     668,  4727,  5065,   792,   793,   829,  2796,   794,  1443,  1404,
    2043,  2728,  2729,  3327,  3328,  3394,  3395,  3396,  2720,  2721,
    2722,  2785,  2786,  2787,  2709,  2710,  2711,  2047,  2706,  2707,
     795,  1405,  1416,  2723,  2724,  2725,  3400,  2789,  2790,  2791,
    2792,  2726,  2110,  2727,  3795,  4301,  4722,  4302,  5047,  3080,
    4718,  4719,  4450,  4809,  3178,    89,   655,  1120,  1737,  2425,
    3625,  3063,  3065,  2426,  3624,  4194,  4195,  4196,  3061,  3062,
    5222,  3067,  3622,  5354,  5653,  5477,  5478,  3614,  5482,  4203,
    4661,  4662,  5018,  5223,  5360,  5585,  5483,  5660,  5583,  5656,
    5584,  5658,  5778,  5725,  5726,  5595,  5671,  5672,  5730,  5779,
    5493,  5494,  5495,  3619,  5015,  5242,  3223,  2032,  2033,  4772,
    1272,    90,  4303,  3900,  4304,  4305,  4817,  5504,  3902,  3903,
    3904,  3418,  1816,  4851,  4833,  4318,  4859,  4306,  4710,  4711,
    4712,  4713,  5406,  5524,  5408,  5409,  5521,  5626,  5520,  4714,
    4715,  5043,  5305,  4778,  4395,  4379,  4380,  4455,  4867,  5140,
    5307,  5304,  5428,  5429,  5766,  5767,  5444,  5717,  5445,  5773,
    5792,  5793,  5430,    91,   654,  1685,  5530,  5531,  5532,  4054,
    4055,  4527,  4056,  4057,  4058,  4059,  4060,  4061,  4062,  4063,
    4064,  4065,  4066,  4947,  4084,  4085,  4914,  4080,  4081,  4513,
    4089,  5446,  5447,  4908,  4517,  4518,  4923,  5562,  5431,  5448,
    5433,  4067,  4529,  1772,  1773,  3264,  1786,  1787,  3107,  2467,
    3108,  2036,  4530,  4917,  4531,  4921,  4167,  5003,  4173,  4174,
    4175,  3579,  3580,  3581,  3582,  3583,  3021,  5434,  4866,  5303,
    5418,  5421,  5545,  5711,  4779,  4381,  4782,  1233,   747,  4382,
    4383,  5676,  5603,  5610,  5677,  5611,  5604,  5282,  3732,  5678,
    5679,  5680,  5613,  5606,  4293,  5234,  5235,  4767,  4927,    92,
     162,  3347,  1392,  1394,  1403,  3353,  2737,  2736,  1409,  1408,
    2715,  3845,  4370,  3350,  3919,  5147,   779,  3905,  5294,  5114,
    5301,  3906,  4689,  3907,  5274,  5399,  3908,  5134,  5299,  5416,
    4690,  4691,  3909,  3910,  3911,  5684,  5685,  5686,  4384,  1503,
     798,   799,  1421,  1422,  1423,  2819,  4864,  4407,    93,  2616,
    2611,    94,  1289,  1290,  1291,  1930,  1931,  2614,  2615,  3219,
    3724,    95,  1256,  2572,  1920,  2603,    96,  1275,  3210,  3211,
    3212,  3719,    97,  1429,  2063,  2064,  2741,  3926,  4475,  4885,
    5154,  5317,  5150,  5458,  5459,    98,   825,  1439,    99,   621,
    2082,  2083,  2084,  2777,   100,  1541,   170,   101,  1141,  1743,
    1746,  1747,   102,  1255,  1871,  1872,  1873,  1874,  3174,   103,
    2151,  2843,  2844,  2845,  2846,  2567,  3696,  2568,  2569,  3183,
    3999,   104,   761,  1391,   105,   760,  1390,   106,   107,   681,
     733,   673,  1759,   109,   110,  3081,  2219,   112,   767,   765,
    1082,   114,  1384,  1380,   115,  2220,  1083,   757,   758,  1338,
    1166,  3249,  3250,  2095,  2096,  2668,  2655,  1167,  1168,  1364,
    2021,  2680,  2456,  2457,  1857,  2458,  3648,  4223,  5714,  1562,
    1484,  1259,  1085,  1086,  1087,  1697,  1698,  5435,  1088,  1707,
    2379,  4135,  4623,  4624,  4625,  4626,  4994,  2300,  2301,  2420,
    1089,  2286,  1090,  1091,  1092,  1093,  1094,  1095,  1096,  1097,
    1098,  1099,  1100,  2415,  4116,  4117,  4605,  3056,  3057,  3058,
    1101,  2902,  4102,  2913,  1102,  1103,  1104,  1105,  1106,  3606,
    1107,  4190,  3773,  1108,  1691,  2365,  2246,  4597,  4107,  4972,
    4976,  4977,  4978,  5198,  2187,  2890,  3507,  4586,  4590,  4591,
    3508,  3509,  3607,  3026,  1583,  1584,  1551,  1552,  3557,  1339,
    1340,  1341,  1342,  1343,  3757,  3758,  4735,  4324,  4737,  4328,
    1986,  1987,  1990,  1991,  1344,  1345,  1346,  1347,  1974,  1348,
    1349,  1350,  2660,  5262,  4743,  4744,  5390,  5389,  4745,  4333,
    4334,  3761,  3762,  4260,  4261,  4262,  3260,  2242,  2243,  2316,
    2156,  2157,  2158,  2188,  1358,  2001,  2676,  3270,  3040,  2003,
    3268,  3768,  3272,  3774,  3775,  2410,  3049,  3602,  3051,  4652,
    5010,  5011,  5215,  5344,  5345,  5350,  3914,  4803,  4804,  2804,
    1365,  2688,  3282,  3771,  1818,  1819,  1820,  2011,  3275,  3276,
    3412,  1367,  1368,  1378,  1383,  1371,  1369,  2866,  4365,  4807,
    3584,  3566,  4695,  3796,  2211,  2212,  4808,  4635,  1372,  2689,
    3782,  3783,  3784,  1354,  1355,  1996,  1997,  1998,  1373,  1356,
    2669,  3764,   116,   700,   117,  2117,   839,  1469,  2116,  3190,
    1441,  2444,  2090,  2091,  1458,   787,   639,   118,   643,  2841,
     119,   669,  2443,   891,  1146,  1751,  1752,  1753,  3082,  3637,
    3083,  3630,  3631,  3084,  1245,  4213,  4214,  2814,  3809,  3810,
    3804,  2557,  3165,  1246,  1861,  3688,  2554,  3689,  2555,  3690,
    3994,  4905,  5462,  2551,   120,   679,  4249,  3682,  3683,  5570,
    5571,  1147,   121,   625,  2089,   835,  1447,  1450,  1451,  2099,
    2800,  3972,  1452,  1453,  2802,   836,   837,   122,   721,  1295,
    1840,  1841,  1842,  2538,   123,   676,  1234,  3677,  4246,  2524,
     658,  1467,  1823,  1237,  1824,  2520,  3149,  1807,   124,  1388,
    1387,   813,   125,   126,   773,   171,  2025,   127,  1264,  1901,
    2592,  3702,  3703,  4265,  1902,  1903,  3191,   128,   688,  1250,
    3187,  4696,  4697,  5036,   129,   712,  1279,  1280,  1924,  1922,
    3215,  2606,   130,  2427,   131,   644,   894,  1506,  2150,   132,
     715,  1284,   133,   134,   896,  4000,  5573,  5720,   648,  2153,
    1510,  5048,  4336,  4750,  4751,  4753,  5091,  5092,  5775,  5810,
    5821,  5814,  5824,  5825,  5828,  5834,  5835,  1109,  1302,  1303,
    1110,  5535,  1111,  1112,  1113,  2221,  1249,   684,  1864,  1865,
    3170,  2561,  3168,  1866,  3632,  3633,  3097,  3269,  1114,  3634,
    4768,  1442,  2092,  1267,   607,  1115,   608,   789,  1304,  1993,
    2850,  1185,  3124,  1117,   933,  1399,  1744,  2052,  2053,  2851,
     610,   934,  3125,  3466,  1187,   611,   612,   613,   614,   615,
     616,   617,   618,   136,   675,  1170,  2463,  1763,  1195,  1792,
    1781,  1791,  2494,  3136,  2497,  3137,  3138,  4238,  3670,  4239,
    3671,  1240,  2489,  1764,  3672,  2482,  2483,  2484,  2485,  3661,
    1778,  2473,  2479,   137,   897,  2162,   651,  1512,  1513,  2863,
     138,   678,   139,   706,  1269,  2599,  3203,  3204,  3715,  4282,
    3716,   140,  1152,  1153,   141,   880,  3226,  2831,  2106,  1402,
    2107,  2134,   883,  1476,   884,   885,  1490,  1487,  1493,  1489,
    3836,  3342,  3343,  2836,  2114,  2054,  2450,  3335,  4355,  2055,
    3830,  3831,  4356,  2124,  2827,  2828,  2734,  5162,  3843,  3346,
    4899,  3983,  5163,  5164,   142,   692,   143,  5060,   699,  1258,
    1881,   144,   145,   146,   147,   766,  1376,  1169,   163,   164,
     165,   166,   802,   803,  3352,  3921,  4470,  4471,  5149,  5817,
    5818,  2635,  3739,  5506,  5782,  5811,  5830,  5252,  5376,  5378,
    5509,  3235,  3738,  5061,   148,  1309,  1305,   732,  1950,  1944,
    1946,  2622,  3222,   149,   150,   151
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     609,   734,   801,   691,   135,   807,  1236,  1183,  1232,  1188,
     653,   113,  1189,  2026,  2210,  2270,   111,  1529,  2435,   797,
     791,  1515,   664,  1520,  1521,  1522,  2405,   664,  1337,   937,
    1526,   108,   664,  2440,  1142,   680,   781,    84,  2797,   784,
    1190,   703,  2101,  1401,  2218,   937,  1191,   711,   702,  2013,
    1847,  1585,  1193,  2012,   710,  3912,  2004,  1745,   714,  2805,
    1400,  2581,  3283,  2491,  2252,  3913,  3485,  3486,  3182,  3952,
    2495,  2034,  1774,  1777,  1779,  1260,  3227,  2129,  2035,   735,
     938,  1789,  3780,   881,  3975,   882,  1545,  3649,  4294,  1286,
    2370,  2598,  1293,  4331,  2550,  1994,   938,  1316,  2378,  1466,
    2111,  1317,  1318,  1194,  1969,  1939,  3510,   672,  3511,  2511,
    2512,  3179,  2878,  3512,   881,  2690,  1154,  3401,   808,   809,
    3763,  2593,   776,  4870,  2380,  2381,   810,  2384,  2385,  2386,
    2387,  2388,  2389,  2434,  2391,  2392,  2394,  2396,  2397,  2398,
    2399,  2400,  1440,  3786,  3797,  3402,   113,  2097,   811,   780,
     609,   778,  3686,   609,   812,  3565,   790,   796,  3901,  3723,
    2515,  3192,  3252,  4565,   667,  3923,   108,  3251,  3251,  4307,
    3797,  3797,  4385,  4376,  4387,   135,  4377,  4397,  4378,  2531,
    4169,  2351,   113,  2435,   697,  3256,  2837,   111,  2838,  2839,
    3676,  4877,  4403,  3330,  4473,  3331,   695,  3802,  2712,  5152,
    2817,  4957,   108,  2154,  2544,  2545,  2154,  3332,  2591,  2171,
    4432,  4739, -2830,  1491,  1692,  1693,  5058,  2776,  -409,  2031,
    1681,  1683,  1684,  4806,  2619,  2864,   713,  1692,  1693,  3018,
    2154,  1692,  1693,  4170,  1727,  3797,  3797,  1385, -1117,  2065,
    2788,  1692,  1693,   762,  1849,  4404,   716,  1692,  1693,  1382,
    1529,  1692,  1693, -3222,  5659,  3718,  1692,  1693,  1381,  1979,
    3398,  4169,  3399,  4940,  1692,  1693,  2864,   645,  1692,  1693,
    3326,  4456, -1931,  1692,  1693,   937,  4811,   937,   937,   937,
     763,  5170,  1692,  1693,   937,  3964,   937,  1692,  1693,  3835,
    4829,  1814,  1692,  1693, -2331,  3299,  1692,  1693,  2434,  2732,
    3675,  1692,  1693, -2535,  4813,  2860,  3405,   806,  4567,  1692,
    1693,   751,  3251,  1848,  4170,  4088,  3822,  3823,   693,  2864,
    3842,  1634,  4632,  1419,  1692,  1693,   938,  1776,   938,   938,
     938,  2664,  2943,  1980,  1770,   938, -3205,   938,  3858,  1586,
    2864,  2735,  3812,  2031,  1981,  1666,   800,  2864,  1692,  1693,
   -2331,  1982,  2031,  4721,  4815,  1692,  1693,  1808,   719,  3730,
    1692,  1693,  -703,  4838,  2861,  1692,  1693,  3059,  1692,  1693,
   -1931,  -704,  1670,  2864, -3142,  1692,  1693, -3143,  4783,  3924,
    3806,  3958,  3959,  1983,  1626,  2113,  5518,   804,  1694,   167,
    1695,  3442,  1495,  1879,  3658,  2818,  3085,  2864,  5118,  1692,
    1693,  1694, -2536,  1695,  1329,  1694,  2864,  1695,  4515,  1770,
    3937,  2128,  4082,  4949,  3827,  1694,  1324,  1695, -2830,  3391,
    4093,  1694,  4094,  1695,  4096,  1694,  5132,  1695,  3673, -1931,
    1694,  1171,  1695, -3209, -3142,  1692,  1693, -3143,  1694,   764,
    1695,  1690,  1694,  5051,  1695,  1984,  3337,  1694,  3078,  1695,
    5052, -2331,  5397, -3208,  1692,  1693,  1694,  1427,  1695,  4106,
    1366,  1694,   167,  1695, -2331,  1366,  1694,  1366,  1695,  2887,
    1694,  3068,  1695,  1770,  3854,  1694,  1985,  1695,   656,  1933,
   -1346, -1891,  3333,  1694,   838,  1695,   840,   841,   842,   843,
    4232,   845,   846,  4535,  3616,   848,   849,  5306,  1694,  1709,
    1695,  2704,   879,  3161, -3206,  4405,  3091,  3092,  3093,  3094,
    1696,  4633,  1692,  1693, -2331,  5053,   660,  -599,  2900,   937,
    3675, -2331,  1694,  1696,  1695,  1692,  1693,  1696,  4362,  1694,
    4441,  1695, -2331,   879,  1694,  2626,  1695,  1696,  5644,  1694,
    1709,  1695,  1694,  1696,  1695,    32,   775,  1696,   646,  1694,
    4509,  1695,  1696,  4312, -3207,  1254,  3563,  1360,  1692,  1693,
    1696,  1805, -3212,   831,  1696,  1948,   620,  2620,  1270,  1696,
     938,  4556,  1876,  1694,  3032,  1695,  3338,  5534,  1696,  4957,
    1296,  1297,  3826,  1696,  1858,  1692,  1693,  3617,  1696,  3747,
     665,  2898,  1696, -3142,  1712,  1821, -3143,  1696,  4770,  1843,
    4192,   832,    39,  1508,  5534,  1696,  3618,  2705,  1337,  1694,
    1362,  1695,  1713,    41,  5094,  4621,  4771,  1770,  1692,  1693,
    1696,   796,  5706,  4884,   674,  1822,  1912,  4557,  1694,   685,
    1695,  2864,   796, -2668, -3226,  1712,  1859,   853,   790,  2216,
    5398,  4124,  2830,    32,  1696,  4314,  5473,  5178,  1692,  1693,
    4442,  1696,  1934, -1891,  3865,  1585,  1696,  4510,  2461,  4456,
    4200,  1696,  1139,  3033,  1696,   168,  1428,  5529,   649,   790,
    4523,  1696,  1186,  2448,  5095,  1809,  1956,  2714,  1957,  2490,
    3808,  1960,  1961,  1962,  1251,  1171,  1694,  2154,  1695,  1681,
    1683,   790,  3225,  2469,  2051,  1696,  1496, -2687,  3171,  1694,
      39,  1695,  5288,  1268,   790,  3765,  3766,  1465,  1470,  1471,
    4315,  2034,  3901,  3019,   169,  2105,  3401,  5016,  2035,  2794,
    2509,  1806,  2014,  1459,  1460,  1461,  1811,  4524,  3982, -2209,
    3162,  1696,  1694,  3828,  1695,  3101,  1315,  1880,  3925,  2111,
    5300,  3102,  1140,  3674,  3402,  2650,  4218,  4219,  4220,  4221,
    1696,  1209,   776,  5516,  3746,  2074,  2665,   649,   826,  1694,
    3251,  1695,  3807,  3034, -3226,   686,  3889,  3812,  5049,  1386,
    3675,   823,  5105,  3060,  2051,  3752,   851,  1379,  3340,  3756,
     790,  4523,  1406,  4079,  1420,  2115,   622,   169,  3731, -1931,
     939,  3330,  1694,  3331,  1695,  5181,  1171,  1692,  1693,  4316,
    2070,  4079,   790,  1325,  4171,  3069,  3041,  2864,  1696,  3797,
    3659,   937,  1432,  4456,  2436,  1242, -1891,  3044,  4366,  3047,
    3048,  1696,  1694,   776,  1695,  1406,  1635,  1692,  1693,  1410,
   -3324,  1509,   694,  1454,  4233,  1456,  3660,   609,   609,   609,
    1462,  1406,   683,   790,  3024,  3025,  3262,  2864, -3222,  2870,
    1667,  1771,  2733,  4488,  1696,  1411,  2877,  2184,  1253,  3398,
    1273,  3399,   938,  2543,   691,  2712,  1692,  1693,   823,  5058,
    5655,   823,  2029,  1417,  3824,  2407,  1381,  1671, -2535,  5326,
    5067,  1696,  2865,  3799,  3329,  4171,  4088,  3431,  1692,  1693,
    2514,  2779,  3156,  2518,   776,  5228,  1519,  1412,  1492,  2081,
    2862,   717,   647,  1524,  2526,  1527,   881,  2529,  1692,  1693,
   -2830,  2532, -1346, -1931,  1696,  3334,  -409,  4448,   135,  5646,
    1534,  1464,  4514,  2865,  1468,   113,  1771,  1586,  4172,  2197,
     111, -3205,  1313,  1692,  1693,  2081, -1117,  5474,  2547,  2548,
    2549,  2788,  2254,  1586,  1696,   108,  2081,  2155,  4546,   718,
    2155,  3397,  3565,  3565,  4957,  4487,  3565,  3565,  5259,  4474,
    5260, -1931,  3565,  3565,  5153, -1931, -3226,  4559,  4560,  4561,
   -1931,  1694,  4564,  1695,  2155,  1333,  2865, -2536,  5375,  2436,
     657,  4524,  3028,  2383,  4572,  3997,  1968,  1692,  1693,  4406,
    1771,  2642,  3020,  4364,  2914,  1413,  2915,  2865,  2294,  4525,
    2570,  1694, -2331,  1695,  2865,  1209,  2901, -2688,  3254,  3255,
     734,  1979,  2944,   720,  2916,  2311,  2917,  2449,  2319,  3005,
    2321,  3006,  3487,  3960,  2325,  2326,  2327,  3016, -3209,  3017,
    2865,  3594,  2333,  3595,  1400,  1414,  4112,  1775,  4113,  1780,
    1694,  3413,  1695,  1783,  1788,  4126,  1726,  4127, -3208,  1882,
    4139,  5017,  4140,  5707,  2865,  4145,  4206,  4146,   834,  4185,
    -703,  4186,  1694,  2865,  1695,  2842,  2360,  1692,  1693,  -704,
    1949, -2209, -3142,  1817,  2906, -3143,  1689,  2899,  2421,  1882,
    4351,  1688,  1694,    68,  1695,  1980,    32,  2530,  1686,  2907,
    1366,   696,  4524,  1696,  1667,  2414,  1981,  1812,  -258, -3206,
     650,   623,  1586,  1982,  1400,  5096,  3421,  1694,  5475,  1695,
    4525,  1692,  1693,  2918,  1504,  2733,  1209,   172,   173,   649,
    2919,  4526,  2371,  1696, -1931,  2920,  1171,  1266,  1692,  1693,
    2922,  2912,  4734,  1337,  1771,  1983,  4754,   790,   776,  4757,
    2932,  4337,  4515,    39,  2422,  3642,  5111,  1738,  5113, -3207,
   -2668,  5116,  2500,  4340,    41,  5050,  3912, -3212,  5121,  5122,
     687,  1694,  1696,  1695,  2934,  2813,  3913,  1762,  3564,  2865,
    2571,  1692,  1693,   790, -2668,   790,  1351,  3767,  1529,   790,
     790,    68,  4397,  4376,  1696, -2689,  4377,  1825,  4378,   650,
    1720,  1721,  1722,  1723,  1724,  1725,  5107,  1984,  4456,  1770,
    2938,  2733,  4725,  1770,  1696,  5312,   689,   690,   881,   790,
    2464,  2372,  3035,  5689, -2687,  -599,  2000, -2209,  5639,  2939,
     666,   807,  2801,   693,  5290,  2516,  5258,  4702,  1985,  1696,
    1916,  3916,  2051,  1722,  1723,  1724,  1725,  2604, -2687,   888,
     698,  1694,  4685,  1695,   831, -3050,  1867,   776,  5708,  1337,
    5175,  5476,   776,   776,  2562,  5666,  5667,  4321,  4322,  3901,
    1337,  1337,  5709,  3251,  3251,   649,   693,  1586,   734,  1917,
    2588,  4317,  3192,   172,   173,  4325,  4326,  2940,  1927,  5736,
     649,  4353,   832,  1696,  3401,  1694,  3626,  1695,  2865,  3330,
    2957,  3331,   776,  1940,  5636,  2713,  2607,  2058,   624,  -114,
    1257,  -114,  1694,  2034,  1695,  3797,  2108,  2690,  2060,  5600,
    2035,  2373,  3402,  1953,  4550,  2629,  2630,  2718,  1511,  4671,
    4672,  4125,  2638,  2639,  2640,   879,  1692,  1693,  2480,   892,
    2925,  4758,   776,  1976,   808,   809,  2081,  2793,  1144,  1688,
    3526,  1505,   810,  1766,  2714,  1694,  1686,  1695,  2435,  4627,
    2965,  4396,  1999,  5743,  3072,  3073,  4519,  3153,  4521,  2193,
    5470,  3105,  3698,  1696,   811,  3109,  4539,  2019,  2692,  2013,
     812,  2682,  2013,  2013,  2059,  4526,  3278,  3279,   823,  3655,
     823,  5601,  4548,  2967,  5256,  2027,  2028,  2470,  3134,  1692,
    1693,   135,  4554,  1954,  1955,  1379,   881,  3415,   113,  1692,
    1693,  1905,  1877,   111,  1739,   776,  4456,  1696,  3667,  3429,
    4566,  3243,  1921,  2970,   790,   776,  3675,  3244,   108,  2878,
    2794,  2075,   609,   776,  1696,  1844,   776,  3398,  3593,  3399,
    3404,  2155,  2820,  2821,  2423,  1415,   776,  5298,  4499,  4500,
    4501,  4502,  1171,   776,  2691,  2093,  1209,   937,  1941,  1352,
    5674,  1692,  1693,  2712,  3247,  2103,  4820,  2718,  3248,  1692,
    1693,   790,  2708,  2434,  2865,   790,   776,  1696,  5715,  1692,
    1693,  3112,  4835,  4836,  4456,  -118,  3615,  -118,  5291,  2109,
    1692,  1693,  3329,  4740,  2822,  1767,  4526,  2159,  1692,  1693,
    2852,   790,   889,  2853,   790,   937,  5602,  5246,   938,  3207,
    1694,  3917,  1695,  4911,  2865,  1826,   850,  3681,  5348,   734,
    4726,  2719,  2218,  2166,  5637,  -110,  4844,  -110, -3050,  3620,
    5313,  2854,  5279,  3700, -2688,  5284,  5285,  2856,  4912,  3597,
    3598,  1692,  1693,  2858,   893,  4991,  2817,  5601,   776,  4993,
    3442,  1692,  1693,  2517,  3336,  2788,   938,  1142, -2688,  2065,
    3397,   650,  2366,   890,  1692,  1693,  4354,   937,   937, -2209,
    2929,  1281,  1748,  1694,  3414,  1695,  3675,  2203,  2886,  1692,
    1693,   172,   173,  1694,   704,  1695,  4551, -2529,  3207,   113,
    1688,  2194,  3675,  3675,  2859,  4760,  5710,  1686, -2152,  2406,
    3443,  1145,  2971,  5412,  2159,   737,  3144,   833,  3146,  2204,
    3949,  2481,  2708,  2159,  5126,  4601,  1692,  1693,   938,   938,
    5423,  4086,  3151,  1878,  2205,  1852, -2152,  4092,  1586,  2926,
    4290,  1545,  1696,  4097,    68,  3158,  3159,   879,  4900,  4901,
    4902,  2972,  2424,  1694,  5396,  1695,  2130,  1845,  5405,   736,
    5407,   776,  3966,  1694,  3113,  1695,  5115,  3337,  2678,  2131,
     776,  2719,  5602,  2973,  1694,  4741,  1695,  2964,  2206,  2160,
    2375,   776,  1694,  5161,  1695,  3748,  3684,  1692,  1693,  3208,
    5314,  1868,  2352,  2976,  1353,  3046,  1875,  1535,  1770,  2501,
    2076,  2503,  2505,  2506,  2507,  1696,  2207,  2203,   790,  2108,
    5508,  2513,  2471,  5379,  5402,  1696,  2161,   650,  2977,   113,
    2553,  3974, -2689,  5425,  2361,  1694,  2472,  1695,  2528,  2132,
    3012,  5432,   650,  5541,  3968,  1694,  1771,  1695,     8,  2204,
    1771,  4862,  1692,  1693,  3029,   790, -2689,  2411,  1694,  5716,
    1695,  2818,  3701,  3420,  2205,  1536,   824,  4919,  4291,   834,
    2460,  3808,  3314,  1694,  3665,  1695,  3245,  1696,  3208,  5537,
     776,  1919,  2978,   790,   790,  1696,  1351,  1692,  1693,  3825,
    2374,  5522,  1209,   790,  2465,  1696,  2160,  2077,  2595,  2078,
    3950,  2684,  5196,   790,    16,  2160,  1696,  3338,  2206,  5286,
    1694,  1389,  1695,  4602,  1696,  5293,  2208,  2492,  1762,  3209,
    1692,  1693,  5062,   609,   776,   609,   609,   609,   609,   776,
     790,   776,  2634,  2637,  1537,   609,  2207,  1230,  2623,  5338,
    5561,  5218,  2081,  1692,  1693,   879,  5426,  2627,  4742,  3098,
    2679,  2527,   609,  3126,   790,  1287,  3127,  1696,  1914,  2044,
     739,  4845,  2996,  4846,  5472,  5601,  5549,  1696,  2486,  2056,
    3957,  1694,  4863,  1695,  5542,  2075,   776,  2061,  5063,  4774,
    1696,  3339,  1853,  3680,  3128,   762,  2670,   776,  3743,  2079,
    3130,  2521,  2109,  4251,  4252,  1696,  3131,  2087,  3209,  2087,
    4847,  4788,  3951,  4367,  3769,    29,  3001,  2487,   782,  5675,
    4913,  4781,  4781,  4582,  1298,  1538,  1692,  1693,    32,   881,
    2428,  3087,   763,  3004,  1692,  1693,  1694,  2133,  1695,  4848,
    3717,  2703,  1696,  2034,   790,  2522,  2208,  4775,  1692,  1693,
    2035,  1558,  1559,  1560,  2081,  1337,  1288,  3132,   776,  3206,
    4292,  1337,  5543,  2609,  3166,  4228,  4229,  3770,  1330,  4855,
    1529,  1694,  2714,  1695,  2933,   937,  1337,  2080,    37,  1395,
    4237,   783,  5815,  5287,   790,    39,  1854,  4465,  4897,  5577,
    5602,   790,   790,   790,  4466,  1912,    41,  1912,   776,  3188,
    4989,  1855,  2713,  1696,  1694,  2013,  1695, -2333,   756,  4973,
    1299,  1300,  1614,   776,  4583,  2685,  1692,  1693,  1915,  3340,
    3329,  2533,  5351,  3476,   776,   776,   938,  1694,  4390,  1695,
    4184,  3236,   790,  5759,  3237,  3651,  3652,  3967,  3242,  1276,
    4461,  3263,  4584,   815,  5770,  2113,  3484,  3484,  3484,  4368,
    2051,  5561,  5064,  5339,  3988,  3989,  3990,  3991,  1696,  4776,
    3666,  3654,  3751, -2333,  2794,  5160,  3755,  5012,  4509,  3404,
    2708,  5734,  5735,  2488,  5366,  4849,  5355,   790,  2793,  3341,
    2523,  5204,  2014,  4391,  2718,  2014,  2014,  3280,  3403,   823,
    1370,   764,  1298,  1696,  1692,  1693,  -219,  1692,  1693,   776,
    1694,  2312,  1695,  2313,  2401,  2320,  3180,  1374,  1694,  5712,
    1695,  4850,  1692,  1693,  2329,   823,  1805,  5578,   776,   785,
    1337,  3181,  1694,  5386,  1695,  2340,  1696,  1277,  3837,  3838,
    5816,  3011,  3839,  3840,  3841,  1454,  4777,  2809,  4462,  2013,
    5771,  2811,  4585,  3970,  2076,  5819,  2051,  5760,  1396,  1696,
    3973,  5387,   786,   776,   776,  1692,  1693,  2108,  3397,  4512,
    2826,  4516,  4582,  4086, -2333,  4086,  1397,  2835,  2835,  1375,
    2835,  2835,  1301,  4086,  1457,  4510,  5467, -2333,  1299,  1300,
    4543,  1278,  4512,  4215,  2436,   790,  1692,  1693,   776,  4086,
    1694,  3675,  1695,  5772,  3022,  -813,  1692,  1693,   776,  4086,
    3315,   689,   690,  4555,  3488,  2873,  1692,  1693,  5388,  4563,
    1692,  1693,  3789,  2402,  2445,  2881,   853,  4086,  4512,  4512,
    4570,  4571,  1696,  1549,   755,  3596,  3675, -2333,  2403,  2708,
    1696,  2077,  5820,  2078, -2333,  1771,  2647,  2717,  2648,   937,
   -2152, -2152,   708,   693,  1696, -2333,  3438,  4589,  3467,  1692,
    1693,  3468,   756,  4583,  1699,  5631,  5632,   937,  2502,  5657,
    5802,  5803,  5661,  2508,  4110,  2510,  -814,   155,  1694,  1700,
    1695,  1694,   113,  1695,  4111,  1230,  1806,  2910,  2719,  3469,
    5081,  4587,  5082,  2935,   805,  3471,  1694,   762,  1695,  3790,
     938,  3473,   937,  4122,  3055,   881, -1406,  3417,  1701,  2186,
     937,   937,   937,   815,  1702,  2404,  5356,  5357,   938,  5112,
    2542,  3316,  1696,   722,  1529,  5794,  4781,  3513,  3317,  3476,
     709,  2552,  2209,  2079,   763,  5124,  3318,   816,  3518,  1694,
    2109,  1695,  4830,  5283,  5008,  5804,  4142,  1692,  1693,  5608,
    1612,  1703,  3474,   938, -1406,  1831,  4159,   693,   879, -1406,
    5404,   938,   938,   938,   827,   734,  5009,  1692,  1693,  4160,
    1694,  2199,  1695,  4373,  5133,   776,  5135,  2406,  1692,  1693,
    1694,   776,  1695,   828,  4980,  5380,  1692,  1693,  2612,  4831,
    1694,  4585,  1695,  2416,  1694,  3551,  1695,  3013, -1406,  3641,
    1696,   723,  4151,  1696,  2186,   936,  4396,  4868,  2039,  3319,
    5776,  2080,  1733,  2186,  3126,  5358,  1400,  3127,  1696,  2936,
    2314,   936,  4746,  2315,  4868,  4747,  3562,  2417,  1192,  2651,
    4152,  3283,  2632,  1694,  2652,  1695,  1688,  3141,  2653,  3180,
    1742,  4557,  2613,  1686,  5741,  3128,   844,  1351,  2186,  3145,
    3797,  3130,  5764,  5740,  3181,  1692,  1693,  3131,  1351,  1351,
    4832,  1696,  1692,  1693,  2897,  3609,  2259,  1444,  3196,  3197,
    3320,  2923,  2186,  2257,  3172,  2262,    68,  4683,  3608,  2921,
    2958,  4686,  1586,  1463,   790,   790,   776,  3797,  3797,  1326,
    4988,  5359,  1696,   764,   790,   935,  1692,  1693,  2835,  2835,
    2835,  2835,  1696,  2418,   113,  2451,  3099,  3100,  3132,  1762,
    2280,   935,  1696,   790,  4793,  4643,  1696,  2654,  2452,  4645,
    1183,  1694,  1188,  1695,  4748,  1189,  4948,  1692,  1693,  3447,
    1692,  1693,  1457,  2738,  2291,  2961,   800,   670,  5754,   830,
    3706,  1694,   677,  1695,  4966,  3198,  4245,  3140,  4968,  4969,
     847,   609,  1694,  1190,  1695,  1696,  1692,  1693,  1327,  1191,
    1694,  3448,  1695,   609,  1119,  1193,  3234,  5466,  4679,  4069,
    2963,  5089,  3239,  3241,   895,  3707,  1337,  2081,  2132,  3053,
    1337,  4070,  2000,  5090,  2419,  3797,  4283,  3054,  4393,  5785,
     776,  1121,  5787,   937,  4207,  2962,  1529,  1882,   937,  3577,
    2713,  2834,  2834,  2966,  2834,  2834,  1867,  3169,  4749,  1136,
     790,  3175,   776,   659,  3578,  4498,  1194,  1692,  1693,  5337,
    3449,  4544,  2847,  5801,  1692,  1693,  2974,  5768,  5768,  1694,
    4250,  1695,  1511,  1144,  1692,  1693,  1694,  4852,  1695,   776,
    4593,  4594,  4854,  1696,   938,  3476,  3202,  3404,  3450,   938,
     776,   936,  1138,   936,   936,   936,  3150,  4568,  4569,  1244,
     936,  1148,   936,  1696,  1692,  1693,  5051,  1241,  4609,  4640,
    1694,  1252,  1695,  5052,  1696,  3229,  3230,  3231,   776,  5791,
     609,  3722,  1696,  2756,  2757,   776,  3240,   609,  2014,   776,
    3123,  1832,  2793,  4636,  2805,   776,  4394,  3403,  2769,  2975,
    2968,  1694,  2969,  1695,  1694,  1257,  1695,  4663,  1692,  1693,
     776,  1328,  3142,  4490,  3261,  1692,  1693,  1262,  1999,  3266,
    3147,  2981,  1692,  1693,   879, -2333,  3419,  1692,  1693,  2921,
    1694,  1337,  1695,  1692,  1693,  1833,  4658,  1834,  5053,  1265,
    5000,   935,  1360,   935,   935,   935,  3053,  1271,  3451,  1932,
     935,  1696,   935,  1274,  4675,  1937,  1938,  1283,  1696,  1692,
    1693,  2051,  2051,  2051,  2051,  1285,  2453,  1692,  1693,  1292,
    1692,  1693,  1294,  3927,  1692,  1693,  1980,  4086,   755,  1478,
     790,  2048,  2049,  4687,   937,  1308,   776,  1981,   823,  2982,
    1361,  1694,  1696,  1695,  2661,  1362,  2771,  2772,  1694,  2992,
    1695,  2979,  3205,  1882,  3684,  2998,  1314,  2865,  1694,  1775,
    1695,  1775,  4247,  4363,  2865,  2086,  1692,  1693, -2378,  1312,
   -2378,  2018,  2014,  1696,  2020,  2020,  1696,  2094,  1977,  1692,
    1693,  1835,  1692,  1693,  1363,   938,  1479,  1319,  1694,  1480,
    1695,  1321,  1692,  1693,  1322,  2203,  3407,  2985,  3409,  1882,
    1692,  1693,  1696,  1323,   776,  2125,  2126,   776,  1357,  2127,
     790,  4458,   790,   790,  1389,   937,  1481,  2986,  4503,  4504,
    2987,  1692,  1693,  2989,  1482,  1882,   790,  2204,  1393,  2835,
    1836,  1407,  1694,  5844,  1695,  2988,  1418,  3708,  2662,  1694,
    1424,  1695,  2205,  1692,  1693,   936,  1426,  5024,  3291,  1692,
    1693,  1694,   113,  1695,  1425,  3295,  3296,  1694,   800,  1695,
    1748,  5042,  4770,  1696,   937,  1434,   938,  1692,  1693,  1985,
    1696,  1430,  2834,  2834,  2834,  2834,  1445,  4523,  2994,  1837,
    1696,  1692,  1693,  1694,  3709,  1695,  2206,  1446,  1704,  1705,
    1706,  1694,  4532,  1695,  1694,   790,  1695,   790,  1694,  1438,
    1695,  1457,  5203,  2449,  2449,  2449,  2449,  4805,  1230,  2995,
    1696,   958,   172,   173,  2207,   938,  2990,  1593,  1882,  2999,
    1400,  1400,  1400,  1400,  2343,  2344,  2756,  2757,  1473,  3000,
    1692,  1693,  1475,  3002,  4162,   935,  1313,  1610,  1477,  1483,
    1694,  2769,  1695,   965,  1615,  1616,  4682,  4883,  3710,  3037,
    5026,  5027,  1485,  1694,  1696,  1695,  1694,  2991,  1695,  1882,
    2997,  1696,  1882,  3427,  3157,  3428,  1694,  1488,  1695,  1838,
    4183,  1494,  3009,  1696,  1694,  3479,  1695,  3480,   734,  1696,
    4005,  3692,  3759,  3693,  3760,  2694,  3177,  4287,  3820,  1486,
    3821,  1839,  3711,  2718,  4133,  1694,  2969,  1695,  1497,  1498,
    3077,  3078,   977,  3687,  1400,  1696,  4610,  4552,  1709,  4553,
    1499,  4227,  3575,  1696,  2208,  4390,  1696,  1694,  4611,  1695,
    1696,  1500,  1502,  1694,  5237,  1695,  1337,  1337,  1507,  1530,
     989,  2695,  1539,  1540,  2781,  1529,  3599,  1546,  4612,  2771,
    2772,  1694,  1605,  1695,  1692,  1693,  3603,   113,  4136,  1688,
    1882,  4143,  3232,  4144,  1547,  1694,  1686,  1695,  1548,  3238,
    3023,  1553,  1696,  1351,  1652,  4680,  1912,  1554,  1658,  1351,
    4391,  4613,   776,  2696,  3635,  1696,  1709,  3967,  1696,  5323,
    4105,  5325,  3636,  1555,  1351,   790,   790,  2835,  1696,  1728,
    4150,  4108,  1882,  3180,   113,  1709,  1696,  1729,    32,  4109,
    3393,   790,  3079,  1712,  1694,  1556,  1695,   135,  3181,  1709,
    4154,  4670,  4155,  4468,   113,  4469,  4649,  1696,  1882,   111,
    3740,  1713,  1557,  3781,  1775,  4888,  4890,  4889,  4891,  1561,
    1010,  4676,  4677,  1563,   108,  1186,  1564,   936,  2708,  1696,
      84,  1565, -1748,  2189,  2190,  1696,  2406,  1775,  1566,  3712,
    3713,  3714,  2200,  4533,  4024,    39,  4892,  2352,  4893,  4964,
    4614,  4967,  4981,  1696,  1882,  4928,    41, -1747,  4114,  1708,
    1156,  1712,  4928,  1730,  4392,  4215,   626,  1696,  1715,  1716,
    1567,  3123,  -813,  3492,  2260,  1568,  2263,  2719,  4524,  1713,
    1712,  1731,  1569,  1692,  1693,  2697,  3829,  1570,  3493,  3484,
    1571,  1572,  2277,  2278,  1712,  2281,  4525,  2698,  1713,  4118,
    2203,  1573,  1209,  2287,  2288,  3403,  5363,  2292,  1694,  2782,
    1695,  4974,  1713,  1709,  3494,  2108,  1696,   935,  1351,  2233,
    4615,  3416,  1157,  4998,   609,  4999,  3495,  1574,  4515,   776,
    4119,   627,  2204,  4120,  1575,  4918,  1715,  1716,  1732,  5006,
     776,  1882,  1578,  2834,   776,  1301,  3496,  3791,  1306,  1307,
     790,  1310,  2051,  1311,  1588,  1715,  1716,  1589,  2411,  4121,
    5019, -1038,  5020,  5463,  1590,  1591,  5129,   762,  1710,  1715,
    1716,  1594,   790,   790,  1595,  4918, -1406,  3497,  5217,  3498,
    3837,  3838,  1596,  1711,  3839,  3840,  3841,  1734,  5033,  2234,
    5034,  3792,  1736,  4918,   937,  4528,  4528,  4918,  4918,  4528,
    5159,  2699,   689,   690,   763,  5044,  4528,  5045,  1712,  1795,
   -2552,  5080,  4528,  3760,   689,   690,  5171,  1597,  5172,  3793,
    4123,   628,   790,   941, -1406,  1598,  1713,  4132,  3629, -1406,
    1696,  1599,  1600,  1230,  4616,  5422,  4617,  4138,  3920,  4785,
    4373,  4787,  1601,  1602,  4790,   938,  5173,  4794,  5172,  4240,
    4797,  4798,  5143,  5176,  2235,  5177,  2236,  1694,  1603,  1695,
    1714,  2237,   958,  1604,  1606,  4344,  4345,  4141, -1406,  4346,
    4347,  1741,  1607,  2700,  1608,  4348,  4349,  2867,  5231,  1709,
    4254,  4241,  1609,  1715,  1716,  1611,  4837,  1709,  2109,  4522,
     629,   963,  4537,  1617,   965,   776,  1709,  1740,  5315,  4541,
    5316,  4909,  1618,  1158,  1159,  5333,  1750,  5253,  1709,   969,
     970,  4147,  5423,  1160,  4549,  2826,  1619,  1756,  4148,  3794,
    2028,   790,   790,   790,   790,  1620,  2238,   776,  1621,  1757,
    4149,  4580,  1758,  5364,  2937,  5365,  4157,  1863,  3499,  1622,
    4242,  3055,   937,   937,  5368,  5384,  5365,  3760,  1623,  4534,
    3500,  4115,  4538,   977,  1624,  3813,  3814,  3815,  3816,  4542,
    3818,  3819,  4158,   764,  1796,  4545,  2449,  2449,  4243,  2239,
    4161,  1627,   983,  4165,  1712,  1628,  5346,  4178,  4600,  1696,
     988,   989,  1712,  1400,  1400,  5385,  3628,  3760,  4618,  4619,
    1629,  1712,  1713,   938,   938,  1709,  5627,  1630,  5629,  5630,
    1713,  2834,  5498,  1712,  5365,  5425,  1631,  3935,  3936,  1713,
    3938,  1632,  3940,  3941,  3942,  3943,  3944,  3945,  3946,  4979,
    3948,  1713,  1633,  3953,  1797,  1755,  5539,  3956,  5540,  1636,
    1765, -2580,  4985,  1798,  5568,  4986,  5569,  5579, -2303,  5580,
   -2551,  1692,  1693,   630,  5598,  4987,  3821,  1637,  1638,  1715,
    1716,  4650,  3501,  4996,  3502,  4393,  1639,  1715,  1716,  2240,
    1183,  4163,  1188,  -840,  1810,  1189,  1715,  1716,  4244,   631,
    2241,  1007,  4526,  1813,  4997,  1799,  1640,  1641,  1715,  1716,
    1009,  1010,  1011,  5622,  1642,  5020,  5437,  1643,   724,   725,
    1712,  1361,  1644,  1190,  1645,  2708,  5001,  5698,  5699,  1191,
    4197,  5702,  5002,  1793,  5697,  1193,  4694,  5701,  1713,  5365,
    5318,  1646,  4310,  5438,   790,  1827,  1647,   632,  5426,  1161,
    5340,  4805,  1648,  1649,  2352,   726,    68,  3615,  1650,  1651,
     790,   790,   790,   790,  5401,  4225,  5703,   113,  5365,  5499,
    1653,  1654,  4212,  5502,  1790,  5704,  4620,  5365,  5722,  1655,
    5723,  4235,  4236,  3745,  1656,  2013,  1194,  1692,  1693,  5199,
    1657,   172,   173,  4394,  1351,  1715,  1716,   727,  1351,  5731,
    5751,  5732,  5365,  5753,  5752,  5755,  5365,  5365,  1529,  1659,
    4256, -1038,  2108,  1660,  4263,  1661,  1800,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  5210,  5758,  1662,  5020,  5264,
    5265,  4918,  5267,  5211,  5786,  1663,  5365,  3503,  5832,  5485,
    5833,  4789,  1801,   -72,   790,  1694,  1664,  1695,  1665,  4769,
     776,   776,   689,   690,  5461,  5554,   609,  5439,  4780,  1668,
    1669,  5440,  1672,  1673,  1674,  1675,  1676,  1677,  5346,  1678,
     776,   776,  3039,  1679,  1828,  5117,  1735,  4332,   172,   173,
   -2577,  1794,  1829, -2575,   633,  5422,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,   936, -2579, -2574,  1692,  1693, -1038, -2578,
    1830, -2572,   634,  5599,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725, -2576,  1850,  1851,  1856,  1862,  5324,  1870,  4224,
    1720,  1721,  1722,  1723,  1724,  1725,  5437,  1882,  1913,  2145,
    1230,  4495,  1923,  1925,  1929,  1935,  1936,  1942,  4909,   689,
     690,   936,  2781,  1717,   635,  3504,  1943,   636,  5719,  1351,
    4528,  1945,  3213,  5438,  1947,  1162,  1163,  1164,  1165,  1951,
    1965,  1694,  5423,  1695,  1966,  1967,  1977,  1696,  1989,  1988,
    5517,  1992,  5422,  4528,   637,  2927,   728,  4528,  2930,  2857,
    2002,  3996,   638,   935,  4528,  2109,  5424,  2005,  2015,  4903,
    2016,  2031,  2037,   729,  3505,  4459,  2945,  1692,  1693,  4134,
     937,   172,   173,   936,   936,  2042,  2045,  2959,  4918,  2040,
    4918,  5391,  4443,  5392,  5393,  5441,  3467,  3506,   730,  3468,
    2046, -1038,  3298,  4907,  2050,  4910,  3274,  4457,  2062,  2071,
    2088,   935,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,
    2094,  1802,  4924,  2098,  2100,  2893,  2708,  3469,  2112,  5423,
    2102,   938,  4929,  3471,  5581,  5425,  2104,  2118,   731,  3473,
    2119,  2121,   689,   690,  4934,  2144,  2122,  5439,  2123,  2855,
    1694,  5440,  1695,  5424,  2147,  2152,  2167,   937,  4486,  2165,
    4951,  2168,  4489,  1696,  2169,  4491,  2172,  2173,  5572,  2175,
    2176,  2718,  2178,   935,   935,  5422,  2185,  2186,  5486,  2202,
    2195,  4496,   790,  4925,  2213,  5487,  2217,  2245,   113,  2256,
    3474,  2257,  2258,   111,  2267,  2271,  2275,  1803,  2276,  2296,
    5488,  2328,  2334,  2338,  2348,  1804,  4941,  2782,   938,  2359,
    4944,  1529,  2382,  2108,  2363,  2390,  5442,  4950,  2412,  5843,
    5212,  2413,  5425,  5213,  2437, -2303,  2013,  2013,  2438,  2439,
    5468,  5469,  5343, -3024,  3491,  2446,  3609,  2447,  2455,  2462,
    2466,  2459,  2496,  5437,  2498,  5668,  2499,  2519,  5426,  2534,
    2536,  1694,  5423,  1695,  2535,  2537,  1692,  1693,  2540, -2303,
    2539,  2541, -2164,  -815,  2783,  2559,  4371,  2556,  4579,  2560,
    5438,  2564,  1696,  2563,  5727,  2565,  5424,  2566,  1718,  1719,
    1720,  1721,  1722,  1723,  1724,  1725,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,  2574,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  2582,  2573,  5441,  2590,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  2583,  2708,  2584,   172,   173,
    2585,  -815,  1692,  1693,  4137,   741,  2586,  2587,  2589,  2596,
    5489,  1230,  2597,  2600,  3300,  5426,  5106,  2601, -1038,  5109,
    5110,  2953,  1979,  5490,  3180,  5425,  1692,  1693,  2610,  2605,
    5560,  2617,  2621,  2641,  4296,  4297,  5572,  2643,  2644,  3181,
    2645,  4639,  2646,  5491,  2657,  2719,  5765,  1979,  2649,  5248,
    2784,  2658,  2659,  1696,  1351,  1351,  2667,  2671,  4648,   689,
     690,  2674,  3781,  2672,  5439,  2675,  2109,  2681,  5440,  4225,
    2203,  2683,  2686,  5727,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,  4197,  2108,  2687,  1692,  1693,  3635,  4667,  2693,
    2716, -2563,  5422,   790,   790,  5443,  1980,  2731,  3829,  4674,
    2739,  2740,  2204,  1692,  1693,  4372,  2742,  1981,  2745,  2743,
    1694,  3539,  1695,  -815,  1982,  1186,  1762,  3791,  2746,  2778,
    2795,  1980,   172,   173,  2798,  2352,  2799,  3585,  2803,  1363,
    4792,  2807,  1981,  5155,  2810,  4692,  2813,  2816,  5426,  1982,
    2823,   936,  2829,  1529,   937,  2848,  1983,  2871,   113,  3467,
    2872,  2874,  3468,  2889,   742,  5605,  2891,  2892,  5612,  3258,
     937,  3792,  3129,  2894,  2903,  2904,  4828,  1230,  2905,  5423,
    3541,  1983,   776,  5331,  2908,  4457,  1694,   776,  1695,  2909,
    3469,  2911,  5492,  2924,  4323,  5427,  3471,  2921,  3543,  3793,
    -815,  2928,  3473,  5424,  2980,   938,  2931,  2941,  3031,  5826,
    1694,  1230,  1695,  2942,  2946,  2954,  3301,  3261,  1984,  2955,
    2956,   938,  5553,  5836,  2983,  3003,  2411,  2960,  2014,  5826,
    3007,  2984,  5441,  4224,  2993,  5836,  3015,  4878,  3008,  3010,
    3014,   935,  1696,  1984,   790,  3027,  1725, -1540,  3036,  1985,
    4267,  3045,  3050,  3474,  3052,  3059,   152,  4268,  4457, -1717,
    3066,  1634,  3302,  4673,  1666,  4786,  2109,  3071,  1670,  1694,
    5605,  1695,  5425,  4269,  1985,  4692,  3259,  5612,  3075,  4802,
    1775,  3086,  5427,  4270,  4271,  4272,  4801,  1694,  2352,  1695,
    3088,  4373,  3103,  4273,   776,  3089,  4823,  3104,  3114,  3794,
    4819,  3095,  3110,  3325,  3111,  3117,  3115,  3118,  1696,  5452,
    3116,  3148,   790,  4692,  4841,  5443,  4842,  4843,  3139,  3119,
    5808,  3152,  -815,  3164,  3160,  4371,  4701,  3163,   937,  3186,
    3214,  3185,  1696,  4692,  3216,  3217,  3218,  3725,  3220,  4457,
    4861,  3221,  3246,  3253,  3303,  4872,  4909,  3257,  3484,  3271,
    5278,   609,  3277,  3281,  3284,  3287,  4882,  3288,  5651,  3289,
   -1007,  3290, -1007,  3292,  3293,  3294,  3345,  3348,  3351,  5605,
    5612,  3355,   113,  3360,  3357,  5209,  3361,  1979,   941,   938,
    -815,  3362,   740,  3363,   741,  5426,  3364, -3287,  3365,  2031,
    3366,  1696,  3367,  5688,  3368,  3369,  4761,   113,  3384,  3385,
    3370,  3371,   778,  3180,  3392,  5427,  3304,  3372,  3373,  1696,
    3374,   153,  3408,  3375,  3376,   936,   790,   958,  3181,  3377,
    3378,  3379,   937,  3380,  3410,  3305,  3306,  3411,   741,  3381,
    3307,  3308,  3309,   936,  4274,  3817,  3382,   172,   173,  3383,
    3414,  2081,  3853,  3426,  4939,  3430,   963, -1068,  4275,   965,
    3432,  1980,   937,  3434,  3433,  5038,  3435,  3436, -3319,  4824,
    4825,  3437,  1981,  3440,   969,   970,  3444,  3472,   936,  1982,
    3446,  3445,  3452,   938,  3477,  4840,   936,   936,   936,  3931,
    3514,  3933,  3934,  2694,  3515,  3516,  3054,  3939,  3527,  3528,
     689,   690,  -815,  3537,  3547,  3947, -1756,  3604,  3310,  4871,
    3954,  1983,  3573,   938,  3574,   935,  4374,  3586,   977,  3588,
    3589,  3605,  3611,  3613,  4327,  3612,  3060,  3621,  3623,  3627,
    3857,  2718,    41,   935,  3639,  3643,  3644,   983,  3645,  2695,
    3646,  3650,   154,   742,  4276,   988,   989,  3656,  3657,  2481,
    1775,  2480,  3664,  3669,  4197,  2865,  3678,  3311,  3694,  4277,
    3697,  3699,  5443,  3704,  3705,  3726,  2352,  3470,   935,  3727,
    3729,  3733,  2781,  1984,  3734,  3742,   935,   935,   935,  -815,
    3749,  2696,  3744,  4459,  5533,  3750,  3753,   742,   937,  3754,
    5496,  4263,  3860,  3861,  3862,  3779,  4278, -2066,  3832,  2014,
    2014,   790,  3787,  3788,  1985,  4457,  3833, -2117,  4915,  3844,
    4279,  5533,   937,   776,  3834,  3918,  4705,  3863,  3922, -2303,
     155,  4717,  3929,   743,  4375,  5097,  4926,  1979,  5072,  3930,
    5100,  3932,  5840,  3961,  3971,  4931,  1007,  2808,  3393,   938,
    3965,  4933,  3864, -3319,  3976,  1009,  1010,  1011,  3978,  3984,
    3985,  4945,  5427,  3993,  3986,  3998,  4071,  4075,  5098,  4952,
    4953,  4072,  4068,   938,  4079,  4083,  4087,  4090,   154,   156,
    4373,  3866,  4091,  3867,  4095,  4098,  2708,  5108,  4153,  4099,
    4100,  4164,  4457,  4692,  4457,  4101,   790,  4457,  4166,  4692,
   -1007,  4181,  3868,  4176,  4457,  4457,  4177,  4182,  4189,  4692,
    4191,  1980,  4201,  2697,  4198,  4202,  4204,  4205,  4208,  4210,
    4209,  3870,  1981,  4216,  4217,  2698,  4234,   157,  3871,  1982,
    4211,  4255,  4230,  3129,  5496,  2719,  4231,  4248,  4810,  4254,
    4253,  4257,  5533,  3872,  4457,  4258,  4266,  4264,  4692,  4285,
    4692,  1192,  4286,  3873,  4289,  4295,   155,  4308,  1692,  1693,
    4284,  1983, -1844, -1849,  4335,  4338,  4330,  2782,  3877,  5137,
    5210,  4339,   776,  2108,  4342,  5142,  4352,  4343,  5211,   936,
    4369,  4357,  4373,  4386,   936,  4388,  4389,  4398,  4400,  4401,
    4412,  4422,  5151,  5073,  4417,  4420,   937,  4423,  4424,  4426,
    4427,  2815,  2222,  2223,  2224,  2225,  4435,  1122,  4436,  4437,
    2222,  2223,  2224,  2225,  1123,  3263,  5167,  4438,  4446,  4464,
    4472,  4492,  4497,  1984,  5189,  4508,  3881,  4493,  4506,  2699,
    1124,  4515,  4540,  4520,  4547,  4562,  3882,  4574,  4576,  4577,
    1125,  1126,  1127,  4588,  4592,  4595,  4603,   938,  5837,  3019,
    1128,  4596,  2781,  4641,  1985,  2226,  2227,  2228,  4171,  4604,
    5123,  4651,  5190,  2226,  2227,  2228,  5072,  3767,  4653,   935,
    4654,  4656,  2421,  3883,   935,  4657,  4660,  4668,   158,  4698,
    4693,  4699,   159,  4700,  4669,  4704,  3884,  5130,  4694,  4716,
    3858,  1230,  4728,  4729,  4732,  4374,   932,  -246,  1116, -2303,
    4752,  2700,  2408,  4763,  4736,  4738,  4764,  4765,  4773,  2229,
    2230,  4771,   932,  4791,  4795,  4796,  4865,  2229,  2230,  1184,
    1239,   855,  4868,  4876,   160,  5224,  1116,  3886,  4873,  4639,
    4879,  4886,  1694,  3887,  1695,  4887,  4880,  4894,  4692,  4896,
    4895,  5145,  4898,  4906,  1116,  4920,  2109,  5236,  5236,  5238,
    4922,  4567,  4457,  4932,   161,   856,  2708,  4935,  4959,  4946,
    4962,  4963, -3319,  4964,  5072,  4965,  4967,  4975,  4970,  4971,
     936,  4982,  4983,  4984,  4359,  4360,  4361,   858,  4990,  4992,
    5007,  2231,  5014,  3963,  3261,  5035,  3261,   859,  5066,  2231,
     744,  1129,  3892,  4995,  5022,  5004,  5075,  5084,  5373,  3893,
    1885,  5021,  5005,  4375, -2117,  1130,  5275,  5029,  -167,  5086,
    5030,  5068,   860,  5280,  5040,  5085,  4457,  4457,  5074,  5496,
    4457,  5031,  5041,  5077,  4457,  5079,  5292,  5087,   861,  5093,
    3894,  5099,  2352,   862,  5042,   776,  5102,  2782,  5103,  5104,
    5119,  4692,  5120,  2108,  5125,  3895,  3896,  5046,  5128,  5131,
    5136,   936,  3916,   636,  1696,  2232,  5045,  5144,  3897,   863,
     935,  5146,  1116,  2232,  5165,  5148,  4479,  4482,  5166,  4485,
    5169,  5180,  5168,   776,  5179,  5194,  5192,  5195,  5193,  5201,
     745,  5202,  5197,  5205,  4939,  5212,  5328,  5208,  5213,  5221,
    5232,  5230,   172,   173,  2783,  5240,  5233,  5214,  5241,  5244,
     936,  5247,  5245,  5249,  5251,  5261,  1131,  5253,  5266,  5268,
    5269,  5271,  5272,  5273,  5276,  5281,  5297,   937,  5302,  4774,
    5319,  5321,  4720,  5332,  5308,  5329,  5348,  5347,  5336,   864,
    5349,  1116,  5341,  5342,  5351,  5352,  5361,  5382,  5362,  5367,
    5236,   935,   932,  1132,   932,   932,   932,   865,  2233,  5369,
    5400,   932,  5395,   932,  5394,   866,  2233,  1133,  5410,  5411,
    5072,  1230,  5420,   113,  5450,  5414,  5453,  5454,   938,  5455,
    5471,  5481,  5480,  5464,  5501,  3864,  5484,  5510,  5512,  5513,
    4457,  5514,  5538,  5515,  1116,  4457,  5523,   867,  5525,  1116,
     935,  5544,  5526,  5413,  5546,  5548,  5138,   868,   869,  5189,
    2784,  5550,  5551,  5552,   776,  5556,  5557,  5558,  2406,  5419,
    5559,  5564,  5566,  5567,  5582,  5449,  2109,  5576,  2234,  1116,
    5586,  5589,  5597,  5456,  5460,  5619,  2234,  5642,  5594,  1116,
    5670,  5609,  5643,  5623,  5614,  1886,  5624,  5190,  5625,  5681,
    5650,  5692,  5693,  5694,  3854,  5628,  4459,   649,  3865,  5634,
    5761,  5655,  5700,  3390,  5750,  5762,  5763,  5788,  5696,  5479,
    5705,  5713,  5774,  5789,  5746,  5795,  5790,  5777,  5798,  5800,
    5805,  5809,  5236,  5813,  5807,  5827,  5503,  5812,  5839,  1531,
    3653,  3955,  3184,  2235,  5158,  2236,  5156,  5157,  1846,  5511,
    2237,  2235,  4634,  2236,  3737,  5497,  5250,  4350,  2237,  5507,
    5748,  5616,  1332,  2041,  4724,  4733,  5381,  5519,  5191,  5174,
    5372,  5327,  5465,  5334,  4647,  4956,  3195,  4281,  1116,  1116,
    1116,  1116,  2429,  3463,  5617,  4074,  3980,  3359,  4904,  4581,
    2883,  2882,  1116,  2730,  2085,  2885,  1437,  2884,  2812,  5371,
    2135,  5370,  5243,  4449,   790,  2136,  5127,  4659,  3899,  5220,
    4664,  5013,  3064,  5654,  5353,  2238,  2137,  5721,  5225,  5797,
    5781,  5596,  5799,  2238,  5669,  4784,  3224,  4447,  5505,  2352,
    5733,  5574,   734,  4860,  5239,  4454,  5101,  5769,  5633,  5645,
    3285,  3286,  5555,  5141,  4622,  4536,   932,  4573,  5647,  1887,
    5652,  3785,  4916,  4168,  4644,  4646,  4642,  3297,  2239,  5784,
     748,   749,  5756,  1888,  5757,  1889,  2239,  3323,  3324,  5403,
    5737,  5690,  5687,   776,  5500,  4930,  4288,  5618,  4703,  4451,
    4858,  4263,  4263,  1860,  5417,  2618,  2057,  3721,  3720,  3354,
    5236,  5649,  5236,  5236,  2780,  5289,  1890,  3074,  3176,   777,
    4507,  5747,  3995,  1688,  3419,  3441,  2023,  5635,  3592,  1359,
    1686,  1891,  1978,  3685,  3778,  1760,  2022,  4494,  3647,  4655,
    5641,  4193,  3550,  3548,  2255,  2409,  2346,  5263,  2666,  2663,
    3386,  3387,  3388,  3389,  1970,  2192,  5460,  1971,  5083,  1972,
    4684,  5620,  1973,  1975,  1892,  5032,  5547,  5479,  2240,  5621,
    2201,  2656,  3273,  3601,  2677,  4188,  2240,  5322,  3776,  2241,
     790,  5780,  1893,  4756,  4187,  1116,  4755,  2241,  1904,  5575,
    5216,  5295,  5028,  5207,  2017,  2138,  3777,  5227,  4759,  3265,
    1377,  5691,   759,  3406,   750,  1885,  5695,  2030,  2146,  2442,
    3638,  5236,  5236,  5023,  3811,  5236,  2139,  5037,  5718,  3439,
     936,  2140,  4681,  1243,  1449,  4812,  4814,  4816,  1455,  2806,
    3154,  1235,  4821,  4822,  3155,  2525,  3679,  2352,  4827,  2024,
    1238,   774,  3189,  5296,  5229,  2608,  4834,  4511,  5088,  5270,
    4839,  5796,  2141,  5806,  5838,  5841,  1613,  3167,  4665,  3590,
     790,  4853,  4678,  1894,  3668,  3030,  1196,  1197,  5829,  5842,
    1895,  3135,  3663,  3662,  5831,  5745,  2625,  2868,  2454,  1155,
    1896,  5749,  4358,  2143,  2142,  3344,  3640,  5236,  4762,  3728,
    3981,  1754,  5320,  1897,  5640,  4460,  1282,   172,   173,  1928,
     768,   752,   753,   754,  5257,  5383,     0,     0,  5415,     0,
     935,     0,     0,     0,     0,     0,     0,   790,     0,     0,
       0,     0,     0,     0,  1898,     0,     0,  1899,  5663,  5664,
       0,     0,     0,     0,     0,     0,     0,  5783,     0,     0,
       0,     0,  5682,  1900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,  1116,   932,   650,
       0,     0,     0,     0,     0,     0,     0,     0,   936,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4958,     0,     0,     0,     0,     0,
    2352,     0,     0,  5728,   790,     0,  5729,     0,     0,     0,
     790,     0,     0,     0,  2352,     0,     0,     0,     0,     0,
    2352,     0,     0,     0,     0,     0,  2352,     0,     0,  5744,
    1116,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1886,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1116,     0,   935,   935,
       0,     0,     0,     0,  2749,     0,     0,  1116,  1116,     0,
       0,     0,     0,  1116,     0,     0,     0,  1116,  1116,  1116,
       0,     0,     0,     0,     0,     0,     0,     0,  1116,  1116,
       0,     0,     0,     0,  1116,     0,  1116,  1116,  1116,  1116,
    1116,     0,  1116,     0,     0,  2750,     0,     0,     0,     0,
       0,     0,     0,  1116,     0,  1116,     0,  5615,  1116,  1116,
       0,  1116,  1116,  1116,     0,  1116,  1116,  1116,     0,     0,
       0,  1192,  1116,     0,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,  1116,  1116,  2751,  1116,  1116,  1116,     0,
       0,  1116,  1116,  1116,  1116,  1116,  1116,  1116,     0,  1116,
    1116,  1116,  1116,  1116,  1116,     0,  1116,  1116,     0,  1116,
    1116,  1116,  1116,  1116,  1116,  1116,     0,     0,  1116,  1116,
    1116,  1116,     0,  1116,  1116,  1116,  2154,  1116,     0,  1116,
       0,  1116,     0,     0,  1887,  1116,  1116,  1116,     0,     0,
    1116,  1116,  1116,  1116,  1116,     0,  1116,     0,  1888,     0,
    1889,     0,     0,  1116,     0,     0,     0, -1931,     0,     0,
    1116,  1116,  1116,  1116,     0,     0,     0,     0,     0,     0,
       0,  1116,  1116,  1116,     0,  1116,  1116,  1116,  1116,  1116,
    1116,  1890,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,
       0,     0,     0,  1116,     0, -1931,  1891,     0, -1931,     0,
       0,     0,     0,     0,     0,     0,     0, -1931,     0,  3800,
    3801,     0,  3803,  3805, -1931,     0,     0,     0, -1931,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1931,  1892,
       0, -1931,     0,     0,     0, -1931,     0, -1931,  1116,     0,
       0,     0, -1931,  1116,     0,     0,  4479,  1893,  4482, -1931,
    4485,     0,     0,  1116,     0, -1931,     0,     0,     0,     0,
   -1931,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1931,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1931,     0,     0,     0,     0, -1931,
       0,     0,  3962,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4958,     0,     0,     0,     0,     0,     0, -1931,
    1116,     0,     0,     0,     0,     0,     0,     0,  1894,     0,
       0,     0,     0,     0,     0,  1895,   936,     0,     0,     0,
       0,     0,     0, -1931,     0,  1896,  1116,     0,  1116,     0,
       0,     0, -1931,     0,     0,     0,     0,     0,  1897,     0,
       0,     0,  5206,     0,     0,     0,     0,     0,     0,     0,
       0,  5219,     0,     0, -1931,     0,     0,     0,     0,     0,
       0,     0,  1116,     0,     0,     0,     0,     0,     0,  1898,
       0,     0,  1899,     0, -1931,  3472,     0,     0,     0,     0,
   -1931, -1931,     0,     0,     0,  2752,     0,     0,  1900,     0,
       0,     0,     0,   936, -1931,     0, -1931,     0,     0, -1931,
       0,     0,     0,     0,     0,     0,   935,     0,     0,     0,
       0,     0,     0,     0,     0,  2753,  2754,     0,  2755,  2756,
    2757,  2758,  2759,     0,  2760,  2761,  2762,  2763,  2764,  2765,
    2766,  2767,     0,  2768,  2769,  2770,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3470,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   935,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   932,  4001,  4002,     0,     0,     0,
       0,  4003,  4004,     0,     0,     0,     0,     0,     0,     0,
       0,  4005,  2771,  2772,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1931,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4006,     0,     0,
       0,     0,   932,     0,     0,     0,     0,     0,     0,  4007,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4008,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2849,     0,     0,     0,     0,     0,     0,     0,  1116,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4009,     0,   932,   932,  1116,     0,     0,  1116,
       0,     0,     0,     0,     0,     0,     0,  1116,  1116,     0,
       0,     0,     0,     0,     0,  4010,  4011,     0,  4012,     0,
       0,     0,     0,     0,     0,     0,  4013,  4014,  4015,     0,
       0,     0,     0,     0,     0,     0,     0,  4958,     0,     0,
       0,     0,     0,     0,     0,     0,  4016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4017,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1116,  1116,  1116,     0,
       0,     0,     0,     0,     0,     0,  4018,     0,     0,     0,
       0,     0,  4019,  4399,     0,     0,  4402,     0,  3472,  4408,
    4409,  4410,  4411,     0,  4413,  4414,  4415,  4416,     0,  4418,
    4419,     0,  4421,     0,     0,     0,  4425,  4020,  4021,  4022,
    4428,  4429,  4430,  4431,     0,  4433,  4434,     0,     0,     0,
       0,  4439,  4440,     0,     0,  4444,  4445,     0,     0,     0,
     935,     0,  4023,  4024,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1116,     0,   935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1116,     0,     0,     0,
       0,     0,     0,     0,  1116,     0, -1931,  1116,  3470,  1116,
    4025,     0,  4026,  4027,     0,  1116,     0,  1116,  1116,     0,
    2155,     0,     0,     0,     0,     0,     0,     0,  4028,     0,
       0,     0,     0,     0,     0,     0,     0, -1931,     0, -1931,
       0,  1116, -1931, -1931,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4029,     0,  4030,     0,     0,
       0,     0,  1116,     0,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1116,
    4031,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3122,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,  4032,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4033,  4034,  1116,     0,     0,     0,
       0,     0,     0,     0,   935,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4035,     0,     0,     0,
       0,     0,     0,     0,     0,  4036,     0,  1116,   936,     0,
       0,     0,   932,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5739,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1904,     0,     0,     0,     0,     0,
       0,  4037,  4038,  4039,     0,     0,     0,     0,     0,  4040,
    4041,     0,     0,     0,     0,     0,     0,     0,   935,     0,
       0,     0,     0,     0,     0,     0,  4042,  4043,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   935,     0,
    4044,  4045,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4046,
       0,     0,     0,     0,     0,     0,     0,     0,  1116,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,  1116,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,  4001,  4002,     0,     0,     0,     0,  4003,  4004,
       0,     0,     0,     0,     0,     0,     0,     0,  4005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1116,     0,     0,
       0,     0,     0,     0,  4006,     0,     0,     0,     0,     0,
       0,  4048,     0,     0,  4049,     0,  4007,  4050,     0,     0,
       0,     0,     0,     0,   935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4008,     0,     0,     0,
    4052,     0,     0,     0,     0,     0,     0,     0,   935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4053,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4009,
       0,     0,     0,     0,     0,     0,   932,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4010,  4011,   932,  4012,     0,  4799,     0,     0,
       0,     0,     0,  4013,  4014,  4015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4826,
       0,     0,     0,  4016,     0,     0,     0,     0,  3465,   932,
       0,     0,   936,     0,     0,     0,     0,   932,   932,   932,
       0,     0,     0,     0,  1116,     0,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,  1116,     0,  4017,     0,
       0,     0,     0,     0,     0,  1116,     0,  1116,     0,  1116,
       0,  1116,  1116,  1116,  1116,  1116,  1116,     0,  1116,     0,
       0,     0,     0,  4018,     0,     0,  1116,     0,  1116,  4019,
       0,  1116,  1116,  1116,  1116,     0,     0,  1116,  1116,     0,
       0,  1116,     0,  1116,     0,  1116,     0,  1116,     0,     0,
       0,  1116,     0,     0,  4020,  4021,  4022,     0,     0,  1116,
       0,  1116,   935,  1116,  1116,  1116,  1116,  1116,     0,     0,
    1116,  1116,  1116,     0,  1116,     0,     0,  1116,     0,  4023,
    4024,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1116,     0,     0,     0,     0,  1116,     0,     0,  1116,     0,
    1116,  1116,  1116,     0,     0,  1116,     0,     0,     0,     0,
    3846,  1116,  3847,  3848,     0,     0,  1116,     0,     0,     0,
       0,     0,     0,     0,  3122,  1116,     0,  4025,     0,  4026,
    4027,  1116,     0,  1116,     0,     0,  3849,     0,  3850,  1116,
       0,     0,     0,     0,  3851,  4028,     0,  1116,     0,  1116,
       0,     0,     0,     0,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3852,     0,
       0,     0,  4029,     0,  4030, -1157,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1116,
       0,     0,     0,     0,     0,     0,     0,  4031,     0,     0,
       0,     0,     0,     0,   172,   173,     0,     0,     0,  3853,
       0,     0,     0,     0,     0,     0,     0,     0,  1116,     0,
    4032,     0,  1184,     0,     0,     0,     0,     0,     0,     0,
       0,  4033,  4034,     0,     0,     0,     0,     0,     0,     0,
    3854,     0,     0,     0,     0,     0,     0,     0,     0,  1116,
     932,     0,     0,     0,     0,   932,     0,     0,     0,     0,
       0,     0,     0,  4035,     0,     0,     0,     0,     0,  1116,
       0,     0,  4036,     0,     0,  3855,     0,     0,     0,  3856,
       0,     0,     0,   936,     0,     0,     0,  3857,     0,     0,
    3858,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3859,     0,     0,     0,     0,  4037,  4038,
    4039,     0,     0,     0,     0,     0,  4040,  4041,     0,     0,
       0,     0,     0,  1116,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4042,  4043,     0,     0,     0,     0,  3860,
    3861,  3862,     0,     0,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4044,  4045,     0,
       0,     0,     0,   935,  3863,     0,     0,     0,     0,     0,
       0,  3798,     0,     0,     0,     0,  4046,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3864,
       0,     0,     0,     0,     0,     0,     0,  3798,  3798,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4047,     0,
    3865,     0,     0,     0,     0,     0,     0,     0,  3866,     0,
    3867,  3915,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   932,  1116,     0,     0,     0,     0,     0,     0,  3868,
       0,     0,     0,     0,     0,     0,  3869,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3870,     0,
       0,     0,  3798,  3798,     0,  3871,     0,     0,  4048,     0,
       0,  4049,     0,     0,  4050,     0,     0,     0,     0,     0,
    3872,  4051,     0,     0,     0,     0,     0,     0,     0,     0,
    3873,     0,     0,     0,  3874,  3875,     0,  4052,     0,  1116,
       0,  3876,     0,     0,     0,  3877,     0,     0,     0,     0,
       0,     0,   932,  3878,     0,     0,  4053,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3879,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1116,     0,     0,     0,     0,     0,     0,  3880,
       0,   932,  1116,  3881,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,  3882,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1116,
    1116,     0,     1,     2,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3883,     0,     3,  1116,     4,  1116,     5,  1116,     6,  1116,
       0,     0,     0,  3884,     0,  3885,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,     0,     0,     8,     0,
       9,    10,     0,     0,     0,     0,     0,     0,    11,     0,
       0,     0,  1116,  1116,  3886,    12,     0,     0,     0,  1116,
    3887,     0,     0,  1116,     0,     0,     0,    13,  1116,     0,
       0,     0,     0,    14,     0,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,    15,  3888,     0,     0,
       0,     0,     0,     0,    16,     0,     0,     0,  3889,  3890,
    3891,     0,     0,     0,     0,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1116,  1116,     0,    18,  3892,
      19,     0,     0,     0,     0,    20,  3893,     0,     0,     0,
    1116,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,    21,     0,  3894,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
      23,     0,  3895,  3896,     0,     0,     0,     0,     0,     0,
      24,    25,     0,     0,     0,  3897,     0,     0,  3898,     0,
       0,     0,    26,    27,    28,    29,     0,    30,     0,  3915,
    3915,     0,    31,     0,     0,     0,     0,     0,    32,     0,
       0,     0,    33,  1198,     0,     0,    34,    35,     0,     0,
       0,  1116,     0,     0,   656,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,     0,     0,     0,  1171,
       0,     0,     0,  1116,     0,  1116,     0,  1199,  1200,     0,
       0,     0,     0, -1157,     0,     0,    36,  1201,    37,     0,
      38,     0,     0,     0,     0,    39,     0,     0,     0,     0,
       0,     0,     9,    10,     0,    40,    41,     0,     0,     0,
       0,     0,     0,    42,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    43,    44,     0,    45,   172,   173,     0,     0,
       0,  1202,    46,     0,     0,     0,     0,     0,     0,    47,
       0,     0,     0,     0,     0,  1203,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      48,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,   932,     0,     0,     0,  5587,  5588,     0,  5590,  5591,
    5592,  5593,     0,     0,     0,     0,    51,     0,     0,     0,
       0,  1204,     0,     0,     0,     0,     0,     0,     0,     0,
      52,     0,     0,     0,     0,     0,  3798,     0,     0,     0,
       0,     0,     0,    53,     0,     0,    54,     0,     0,    55,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    56,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1205,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5662,     0,     0,  5665,     0,
       0,     0,     0,     0,     0,     0,  5673,     0,     0,     0,
       0,  5683,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1206,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1207,   932,
     932,     0,     0,     0,     0,     0,     0,  1208,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1209,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1210,    57,     0,     0,  1116,  1116,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,  1116,     0,  1116,     0,
       0,  1116,     0,     0,  1211,     0,     0,     0,     0,     0,
      58,     0,     0,    59,  1116,     0,  1116,     0,  1116,     0,
    1116,     0,     0,    60,     0,     0,     0,     0,     0,     0,
       0,    61,     0,  1116,  1116,     0, -2303,  1212,     0,     0,
    1213,     0,  1214,    62,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1116,     0,     0,    63,     0,     0,    64,     0,  1215,  1216,
       0,     0,     0,     0,     0,     0,  1217,  1218,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1219,     0,     0,     0,  1118,    65,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    66,     0,
       0,     0,  1184,     0,     0,  1220,     0,     0,     0,     0,
       0,     0,     0,     0,  1116,  1118,     0,     0,  1116,     0,
       0,     0,     0,    67,     0,     0,  1221,     0,     0,     0,
       0,     1,     2,  1118,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    68,     0,     0,     0,
       0,     3,     0,     4,     0,     5,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,  3915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1222,     0,     0,     0,     0,     8,     0,     9,
      10,     0,     0,     0,     0,     0,  1223,    11,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1224,     0,     0,
    1225,  1226,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,    14,     0,     0,  1227,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    15,     0,     0,     0,     0,
       0,     0,     0,    16,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,    17,     0,     0,     0,     0,     0,
       0,  1228,     0,     0,     0,     0,     0,    18,  1229,    19,
       0,     0,     0,     0,    20,     0,     0,     0,     0,  2031,
       0,     0,     0,     0,     0,     0,     0, -3069,     0,  1230,
       0,     0,     0,     0,     0,     0,     0,     0,  -715,     0,
       0,     0,     0,     0,    21,     0,     0, -1007,     0, -1007,
       0,     0,  3915,     0,     0,     0,     0,     0,    22,    23,
    1118,     0,     0,     0,     0,  1116,  1116,   172,   173,    24,
      25,     0,  3853,     0,     0,     0,  2031,     0,     0, -3069,
       0,    26,    27,    28,    29,  1231,    30,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,    32,     0,     0,
       0,    33,     0,     0,     0,    34,    35,   932,     0,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,   172,   173,     0,     0,     0,  3853,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,     0,    37,  1118,    38,
    3857,  1587,     0,     0,    39,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,    40,    41,  3465,     0,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,  1116,     0,
       0,     0,     0,     0,   932,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1587,     0,     0,  1116,
       0,    43,    44,     0,    45,     0,     0,  3857,     0,     0,
       0,    46,  3860,  3861,  3862,     0,     0,     0,    47,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3863,     0,    48,
       0,     0,     0,     0,     0,     0,     0,  1118,  1118,  1118,
    1118,     0,     0,  1587,     0,     0,     0,  1116,     0,     0,
       0,  1118,  3864,     0,    49,     0,     0,     0,     0,  3860,
    3861,  3862,     0,     0,  1116,     0,    50,     0,     0,     0,
    1116,  1116,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3866,     0,  3867,  3863,    51,     0,     0,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,     0,     0,    52,
       0,     0,  3868,     0,     0,     0,     0,     0,     0,  3864,
       0,     0,    53,     0,  3915,    54,  3915,     0,    55,     0,
       0,  3870,     0,     0,     0,     0,     0,     0,  3871,  1116,
       0,  1116,     0,    56,     0,     0,     0,     0,  3866,     0,
    3867,     0,     0,  3872,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3873,     0,     0,     0, -1007,     0,  3868,
       0,     0,     0,     0,     0,     0,     0,     0,  3877,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3870,     0,
       0,     0,     0,     0,     0,  3871,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3872,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1118,  3877,  3881,     0,  1587,     0,
       0,     0,     0,     0,     0,     0,  3882,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      57,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3883,     0,     0,     0,     0,     0,    58,
       0,   932,    59,  3881,     0,     0,  3884,     0,  1116,     0,
       0,     0,    60,  3882,     0,     0,     0,   932,     0,     0,
      61,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    62,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1587,     0,     0,  3886,     0,  3465,
    3883,     0,    63,  3887,     0,    64,     0,     0,     0,     0,
       0,     0,     0,  3884,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    65,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,    66,     0,     0,
       0,     0,     0,     0,  3886,     0,     0,     0,     0,     0,
    3887,     0,  3892,  1118,     0,     0,  1118,     0,     0,  3893,
       0,  1116,    67,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    68,     0,     0,     0,     0,
    3894,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3895,  3896,     0,     0,  3892,
       0,     0,     0,     0,     0,   932,  3893,     0,  3897,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3894,     0,     0,
       0,     0,     0,     0,     0,  1118,  1116,     0,     0,     0,
       0,     0,  3895,  3896,     0,     0,  1118,  1118,     0,     0,
       0,     0,  1118,     0,     0,  3897,  1118,  1118,  1118,     0,
       0,     0,     0,     0,     0,     0,  -715,  1118,  1118,  1587,
       0,     0,     0,  1118,     0,  1118,  1118,  1118,  1118,  1118,
       0,  1118,     0,     0,  1587,  1587,     0,     0,     0,   932,
       0,     0,  1118,     0,  1118,     0,     0,  1118,  1118,     0,
    1118,  1118,  1118,     0,  1118,  1118,  1118,     0,     0,     0,
       0,  1118,     0,     0,  1118,     0,     0,     0,     0,   932,
       0,     0,  1118,  1118,     0,  1118,  1118,  1118,     0,  1116,
    1118,  1118,  1118,  1118,  1118,  1118,  1118,     0,  1118,  1118,
    1118,  1118,  1118,  1118,     0,  1118,  1118,     0,  1118,  1118,
    1118,  1118,  1118,  1118,  1118,  1116,     0,  1118,  1118,  1118,
    1118,     0,  1118,  1118,  1118,     0,  1118,     0,  1118,     0,
    1118,     0,     0,     0,  1118,  1118,  1118,     0,     0,  1118,
    1118,  1118,  1118,  1118,     0,  1118,     0,     0,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,     0,     0,  1118,
    1118,  1118,  1118,     0,     0,     0,     0,     0,     0,     0,
    1118,  1118,  1118,     0,  1118,  1118,  1118,  1118,  1118,  1118,
       0,  1118,  1118,  1118,  1118,  1118,  1118,  1118,  1118,     0,
       0,     0,  1118,     0,     0,     0,     0,  1587,  5436,     0,
       0,  5436,     0,     0,  1587,   932,     0,     0,     0,     0,
       0,     0,  1116,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   932,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5536,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1118,
       0,     0,     0,  5436,     0,     0,     0,     0,     0,     1,
       2,     0,  5536,     0,     0,     0,     0,     0,     0,     0,
    5436,     0,     0,     0,  1116,  1118,     0,  1118,     0,     3,
       0,     0,     0,     5,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     7,     0,     0,     0,     0,     0,  1587,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,     0,     8,     0,     9,    10,     0,
       0,     0,     0,  5607,     0,    11,  5607,     0,     0,     0,
       0,     0,     0,   932,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      14,     0,     0,  1116,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    17,     0,     0,     0,  5436,     0,  1116,     0,
       0,     0,     0,     0,  1118,    18,     0,    19,     0,     0,
       0,     0,     0,  1587,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5607,     0,     0,     0,     0,  5607,     0,
       0,     0,    21,     0,     0,  5607,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    24,    25,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    26,
      27,  5436,    29,     0,    30,  1116,     0,     0,     0,    31,
       0,     0,  1116,     0,     0,    32,     0,     0,     0,    33,
       0,     0,     0,    34,    35,     0,     0,     0,     0,     0,
       0,  5607,     0,     0,     0,  5738,     0,     0,     0,     0,
       0,     0,     0,  4856,     0,  3847,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5607,     0,  5607,  5607,     0,
       0,     0,     0,    36,     0,    37,     0,    38,     0,  3849,
       0,     0,    39,     0,     0,     0,     0,  3851,     0,     0,
       0,     0,     0,    41,     0,     0,     0,  1118,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,  2031,
       0,     0,     0,     0,     0,  1118,  5607,     0,  1118,  5607,
       0,  4857,     0,     0,     0,     0,  1118,  1118,     0,    43,
       0,     0,    45,     0,     0,     0,     0,     0,     0,    46,
       0,  1116,     0,     0,     0,     0,    47,     0,     0,     0,
    5607,     0,     0,     0,     0,     0,     0,   172,   173,     0,
       0,     0,  3853,     0,     0,     0,     0,    48,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1587,  1587,    49,  3854,   932,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    50,     0,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,  1118,  1118,  1118,     0,     0,
       0,     0,     0,    51,     0,     0,     0,     0,     0,  1587,
       0,     0,  3856,     0,     0,     0,     0,    52,     0,     0,
    3857,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      53,     0,     0,    54,     0,     0,    55,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3859,     0,     0,     0,
       0,    56,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1587,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,     0,  1587,     0,     0,     0,
       0,     0,  3860,  3861,  3862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1118,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,     0,  1118,  3863,  1118,     0,
       0,     0,     0,     0,  1118,     0,  1118,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3864,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3865,  1118,     0,     0,     0,     0,     0,
       0,  3866,     0,  3867,     0,     0,     0,     0,    57,     0,
       0,  1118,     0,     0,  1118,     0,     0,     0,     0,     0,
       0,     0,  3868,     0,     0,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,     0,     0,     0,    58,     0,     0,
      59,  3870,     0,  1118,     0,     0,     0,     0,  3871,     0,
      60,     0,     0,     0,     0,     0,     0,     0,    61,     0,
       0,     0,     0,  3872,     0,  1118,     0,     0,     0,     0,
      62,     0,     0,  3873,     0,     0,     0,  3874,     0,     0,
       0,     0,     0,     0,  3876,     0,     0,     0,  3877,     0,
      63,     0,     0,    64,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1118,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3879,     0,     0,     0,
       0,     0,     0,     0,     0,    65,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    66,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3881,  1587,     0,  1587,
       0,     0,     0,     0,     0,     0,  3882,     0,     0,     0,
      67,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    68,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3883,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3884,     0,  3885,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,  1587,     0,     0,  1587,  1587,  1587,
       0,  1118,     0,     0,     0,     0,     0,  3886,     0,     0,
       0,     0,     0,  3887,     0,     0,     0,     0,     0,     0,
       0,  4001,  4002,     0,     0,     0,     0,  4003,  4004,     0,
       0,     0,     0,     0,     0,     0,     0,  4005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1118,     0,     0,     0,
       0,     0,     0,  4006,     0,     0,     0,     0,     0,     0,
       0,     0,  3892,     0,     0,  4007,     0,     0,     0,  3893,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4008,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3894,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3895,  3896,     0,  4009,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3897,     0,
       0,     0,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,  4010,  4011,     0,  4012,     0,     0,     0,     0,     0,
       0,     0,  4013,  4014,  4015,     0,     0,     0,     0,     0,
    1248,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,     0,  1118,     0,     0,     0,
       0,     0,     0,     0,     0,  1118,     0,  4017,     0,     0,
       0,     0,     0,     0,  1118,     0,  1118,     0,  1118,     0,
    1118,  1118,  1118,  1118,  1118,  1118,     0,  1118,     0,     0,
       0,     0,  4018,     0,     0,  1118,     0,  1118,  4019,     0,
    1118,  1118,  1118,  1118,     0,     0,  1118,  1118,     0,     0,
    1118,     0,  1118,     0,  1118,     0,  1118,     0,     0,     0,
    1118,     0,     0,  4020,  4021,  4022,     0,     0,  1118,     0,
    1118,     0,  1118,  1118,  1118,  1118,  1118,     0,     0,  1118,
    1118,  1118,     0,  1118,     0,     0,  1118,     0,  4023,  4024,
       0,     0,     0,     0,     0,     0,  1436,     0,     0,  1118,
   -1007,     0, -1007,     0,  1118,     0,     0,  1118,     0,  1118,
    1118,  1118,     0,     0,  1118,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,  1118,     0,     0,     0,  2031,
       0,     0,     0,     0,  1118,     0,  4025,     0,  4026,  4027,
    1118,     0,  1118,     0,     0,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,  4028,     0,  1118,  1587,  1118,     0,
       0,     0,     0,  1118,     0,  1501,     0,     0,     0,     0,
       0,     0,     0,     0,  1587,     0,     0,   172,   173,     0,
       0,     0,  3853,     0,     0,     0,     0,     0,     0,     0,
       0,  4029,     0,  4030,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4298,     0,  4299,     0,  4300,  1118,     0,
       0,     0,     0,     0,     0,     0,  4031,     0,     0,     0,
       0,     0,     0,  1550,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,  4032,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4033,  4034,     0,  1577,     0,     0,     0,     0,     0,     0,
    3857,     0,     0,  1592,     0,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4035,     0,     0,     0,     0,     0,  1118,     0,
       0,  4036,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3860,  3861,  3862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4037,  4038,  4039,
       0,     0,     0,     0,     0,  4040,  4041,  3863,     0,     0,
       0,     0,  1118,     0,     0,  1687,     0,     0,     0,     0,
       0,     0,  4042,  4043,     0,     0,     0,     0,     0,     0,
       0,     0,  3864,  1118,     0,     0,     0,     0,     0,     0,
    1587,     0,     0,     0,     0,     0,  4044,  4045,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3866,     0,  3867,     0,  4046,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1007,     0,  3868,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5254,     0,     0,
       0,  3870,     0,     0,     0,     0,     0,     0,  3871,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,  3872,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3873,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3877,     0,
       0,     0,     0,     0,     0,     0,     0,  4048,     0,     0,
    4049,     0,     0,  4050,     0,     0,     0,     0,     0,     0,
    5255,     0,     0,     0,  1587,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4052,     0,  1118,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1883,
       0,     0,     0,     0,     0,  4053,  3881,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3882,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,  3883,  1118,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3884,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1118,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1118,     0,  1118,     0,  1118,  3886,  1118,     0,
       0,     0,     0,  3887,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,  1587,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1118,     0,     0,     0,     0,     0,  1118,     0,
       0,     0,  1118,     0,     0,     0,     0,  1118,  2068,     0,
       0,  2069,  3892,     0,     0,     0,     0,     0,     0,  3893,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3894,     0,     0,  1587,  1118,  1118,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3895,  3896,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,  3897,     0,
       0,     0,     0,     0,  2149,     0,     0,     0,     0,     0,
    1118,     0,  2031,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1587,     0,
    2177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2191,     0,     0,
       0,  2196,     0,  2198,     0,     0,     0,     0,     0,     0,
     172,   173,  2214,  2215,     0,  3853,     0,     0,  2244,     0,
    2247,  2248,  2249,  2250,  2251,     0,  2253,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0,  2261,     0,  2264,
    1118,     0,  2265,  2266,     0,  2268,  2269,     0,     0,  2272,
    2273,  2274,  1118,     0,  1118,     0,  2279,     0,     0,  2285,
       0,     0,     0,     0,     0,     0,     0,  2289,  2290,     0,
    2293,     0,  2295,     0,     0,  2297,  2298,  2299,  2302,  2303,
    2304,  2305,     0,  2306,  2307,  2308,  2309,  2310,     0,     0,
    2317,  2318,     0,  3857,  2322,  2323,  2324,     0,     0,     0,
       0,     0,  2330,  2331,  2332,     0,     0,  2335,  2336,  2337,
       0,  2339,     0,  2341,     0,  2342,     0,     0,     0,  2345,
    2285,  2347,     0,     0,  2353,  2354,  2355,  2356,  2357,     0,
    2358,     0,     0,     0,     0,     0,     0,  2362,     0,     0,
       0,     0,     0,     0,  2367,  2368,  2369,     0,     0,     0,
       0,     0,     0,     0,     0,  3860,  3861,  3862,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4001,  4002,     0,
    3863,     0,     0,  4003,  4004,     0,     0,     0,     0,     0,
       0,     0,     0,  4005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4006,
       0,     0,  2468,     0,     0,     0,     0,  2478,     0,     0,
       0,  4007,     0,     0,  3866,     0,  3867,  2478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4008,     0,     0,     0,  3868,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3870,     0,     0,     0,     0,     0,
       0,  3871,     0,     0,  4009,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3872,     0,     0,     0,
       0,     0,     0,     0,  2546,     0,  3873,  4010,  4011,     0,
    4012,     0,     0,     0,     0,     0,     0,     0,  4013,  4014,
    4015,  3877,     0,     0,     0,     0,     0,     0,     0,     0,
    2575,     0,  2580,     0,     0,     0,     0,     0,  4016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2602,     0,     0,     0,
       0,     0,     0,  4017,     0,     0,     0,     0,     0,  3881,
       0,     0,     0,  1118,  1118,     0,  1118,     0,     0,  3882,
       0,     0,     0,     0,     0,  1118,     0,  1118,  4018,     0,
    1118,     0,     0,     0,  4019,     0,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,  1118,     0,  1118,     0,  1118,
       0,     0,     0,     0,     0,     0,  3883,     0,     0,  4020,
    4021,  4022,  1118,  1118,     0,     0,     0,     0,     0,  3884,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2673,
       0,     0,     0,     0,  4023,  4024,     0,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3886,     0,     0,     0,     0,     0,  3887,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4025,     0,  4026,  4027,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4028,     0,     0,  1118,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3892,     0,     0,     0,     0,
       0,     0,  3893,     0,     0,     0,     0,  4029,     0,  4030,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4031,  3894,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3895,  3896,
       0,     0,     0,     0,     0,  4032,     0,     0,     0,     0,
       0,  3897,  2869,     0,     0,     0,  4033,  4034,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1248,     0,     0,  2888,     0,     0,     0,     0,     0,     0,
       0,  2895,  2896,     0,     0,     0,     0,     0,  4035,     0,
       0,     0,     0,     0,     0,     0,     0,  4036,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4037,  4038,  4039,     0,     0,     0,     0,
       0,  4040,  4041,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4042,  4043,
    2948,  2950,  2952,     0,  1118,  1118,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4044,  4045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4046,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5139,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3038,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3042,     0,  3043,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4048,     0,     0,  4049,     0,  1118,  4050,
       0,     0,     0,     0,     0,  3070,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3076,
       0,     0,  4052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3096,     0,     0,  2478,
       0,  4053,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1118,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3133,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,  1587,  1118,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3143,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2580,     0,     0,     0,     0,     0,     0,  1118,     0,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3267,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3267,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3356,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1587,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3489,     0,
       0,  3490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3517,
       0,     0,     0,  3519,     0,  3520,  3521,  3522,  3523,  3524,
    3525,     0,     0,     0,     0,  1118,     0,     0,     0,     0,
    3529,     0,  3530,     0,     0,  3531,  3532,  3533,  3534,     0,
       0,  3535,  3536,     0,     0,  3538,     0,  3540,     0,  3542,
       0,  3544,     0,     0,     0,  3546,     0,     0,     0,     0,
       0,     0,     0,  2299,     0,  3549,     0,  2299,     0,  3552,
    3553,  3554,     0,     0,  3555,  3556,  3558,     0,  3559,     0,
       0,  3560,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3561,     0,     0,     0,     0,     0,
       0,     0,  3568,     0,  3569,  3570,  3571,     0,     0,  3572,
       0,     0,     0,     0,     0,  3576,     0,     0,  1118,     0,
    3587,     0,     0,     0,     0,     0,     0,     0,     0,  3591,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3600,  1118,     0,     0,     0,     0,     0,
       0,     0,     0,  3610,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2478,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1587,  1587,  2580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1587,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1587,     0,     0,     0,     0,     0,     0,  3772,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1118,     0,     0,     0,  3928,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3979,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1118,     0,  4073,     0,     0,     0,
       0,  1118,     0,     0,     0,     0,  4077,     0,     0,  4078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4103,  4104,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4128,     0,  4129,
       0,  4130,     0,  4131,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4156,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4179,  4180,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,  3267,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4199,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2478,
    2478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2478,  1118,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2580,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4329,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3267,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3267,     0,  4341,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4598,  4599,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4606,     0,  4607,     0,     0,  4608,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4628,     0,
    4629,     0,  4630,     0,  4631,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4637,  4638,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2580,     0,
       0,     0,  2580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4874,
    4875,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4954,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3267,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3267,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2580,     0,
       0,     0,     0,     0,  2478,  2478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2580,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5076,     0,  5078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5200,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3267,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5277,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3267,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2474,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2475,   941,   942,   943,   944,     0,
       0,     0,     0,     0,     0,     0,   945,   946,     0,   947,
       0,     0,     0,     0,     0,     0,   948,   949,  5563,     0,
     950,   951,   952,   953,     0,   954,   955,     0,   956,   957,
       0,     0,     0,     0,   958,     0,     0,     0,  2476,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,   962,   963,     0,   964,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,   971,   972,   973,     0,
       0,     0,     0,     0,     0,     0,   974,  1687,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
     978,   979,  5648,   980,     0,     0,     0,     0,     0,   981,
       0,   982,     0,     0,   983,     0,     0,   984,   985,   986,
       0,   987,   988,   989,     0,   990,  2477,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   997,   998,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2580,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1002,  1003,     0,  1004,  1005,  1006,
       0,     0,     0,  1007,     0,     0,     0,     0,     0,     0,
       0,  1008,  1009,  1010,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,  1013,  1014,     0,     0,     0,
       0,     0,  1015,     0,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,  1017,   187,
     188,   189,   190,   191,   192,  1018,   194,   195,   196,   197,
     198,   199,   200,  1019,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,  1020,
     217,   218,   219,   220,   221,   222,   223,   224,  1021,   226,
    1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,  1029,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,  1030,  1031,  1032,   262,  1033,  1034,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    2580,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,  1035,   308,   309,   310,
     311,   312,  1036,   314,  1037,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,  1038,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,  1039,  1040,
     350,   351,   352,  1041,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,  1042,   392,  1043,   394,   395,   396,   397,  1044,  1045,
    1046,  1047,   402,   403,   404,   405,   406,   407,   408,   409,
     410,  1048,  1049,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1050,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,  1051,   443,   444,   445,   446,   447,  1052,  1053,
     450,   451,   452,   453,   454,   455,  1054,   457,   458,   459,
     460,   461,   462,  1055,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,  1056,   494,   495,   496,   497,   498,  1057,
    1058,   501,   502,   503,   504,   505,  1059,   507,   508,   509,
     510,   511,   512,  1060,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1061,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,  1062,  1063,  1064,  1065,   565,   566,   567,  1066,
    1067,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1068,   584,  1069,   586,   587,   588,
     589,   590,   591,   592,   593,   594,  1070,  1071,   597,  1072,
     599,   600,   601,     0,   602,   603,   604,  1073,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1074,  1075,     0,
       0,     0,     0,  1076,     0,     0,     0,  2376,  1077,     0,
       0,     0,  1078,  1079,     0,     0,  1080,  1081,   940,   941,
     942,   943,   944,     0,     0,     0,     0,     0,     0,     0,
     945,   946,     0,   947,     0,     0,     0,     0,     0,     0,
     948,   949,     0,     0,   950,   951,   952,   953,     0,   954,
     955,     0,   956,   957,     0,     0,     0,     0,   958,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,   962,   963,     0,   964,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
     971,   972,   973,     0,     0,     0,     0,     0,     0,     0,
     974,     0,   975,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   978,   979,     0,   980,     0,     0,
       0,     0,     0,   981,     0,   982,     0,     0,   983,     0,
       0,   984,     0,   986,     0,   987,   988,   989,     0,   990,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   998,     0,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,  1002,  1003,
       0,  1004,  1005,  1006,     0,     0,     0,  1007,     0,     0,
       0,     0,     0,     0,     0,  1008,  1009,  1010,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,  1013,
    1014,     0,     0,     0,     0,     0,  1015,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,  1017,   187,   188,   189,   190,   191,  2377,  1018,
     194,   195,   196,   197,   198,   199,   200,  1019,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1020,   217,   218,   219,   220,   221,   222,
     223,   224,  1021,   226,  1022,  1023,   228,  1024,  1025,  1026,
    1027,  1028,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,  1029,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  1030,  1031,
    1032,   262,  1033,  1034,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
    1035,   308,   309,   310,   311,   312,  1036,   314,  1037,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
    1038,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,  1039,  1040,   350,   351,   352,  1041,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,  1042,   392,  1043,   394,   395,
     396,   397,  1044,  1045,  1046,  1047,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1048,  1049,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  1050,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1051,   443,   444,   445,
     446,   447,  1052,  1053,   450,   451,   452,   453,   454,   455,
    1054,   457,   458,   459,   460,   461,   462,  1055,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1056,   494,   495,
     496,   497,   498,  1057,  1058,   501,   502,   503,   504,   505,
    1059,   507,   508,   509,   510,   511,   512,  1060,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1061,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,  1062,  1063,  1064,  1065,
     565,   566,   567,  1066,  1067,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1068,   584,
    1069,   586,   587,   588,   589,   590,   591,   592,   593,   594,
    1070,  1071,   597,  1072,   599,   600,   601,     0,   602,   603,
     604,  1073,     0,     0,     0,     0,   940,   941,   942,   943,
     944,  1074,  1075,     0,     0,     0,     0,  1076,   945,   946,
       0,   947,  1077,     0,     0,     0,  1078,  1079,   948,   949,
    1080,  1081,   950,   951,   952,   953,     0,   954,   955,     0,
     956,   957,     0,     0,     0,     0,   958,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,   962,   963,     0,   964,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,   971,   972,
     973,     0,     0,     0,     0,     0,     0,     0,   974,     0,
     975,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   977,     0,     0,
       0,     0,   978,   979,     0,   980,     0,     0,     0,     0,
       0,   981,     0,   982,     0,     0,   983,     0,     0,   984,
     985,   986,     0,   987,   988,   989,     0,   990,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,     0,     0,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   997,   998,
       0,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,     0,    32,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,  1002,  1003,     0,  1004,
    1005,  1006,     0,     0,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,  1008,  1009,  1010,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1012,  1013,  1014,    39,
       0,     0,     0,     0,  1015,     0,  1016,     0,     0,     0,
      41,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
    1017,   187,   188,   189,   190,   191,   192,  1018,   194,   195,
     196,   197,   198,   199,   200,  1019,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,  1020,   217,   218,   219,   220,   221,   222,   223,   224,
    1021,   226,  1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,  1029,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  1030,  1031,  1032,   262,
    1033,  1034,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,  1035,   308,
     309,   310,   311,   312,  1036,   314,  1037,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,  1038,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
    1039,  1040,   350,   351,   352,  1041,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,  1042,   392,  1043,   394,   395,   396,   397,
    1044,  1045,  1046,  1047,   402,   403,   404,   405,   406,   407,
     408,   409,   410,  1048,  1049,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
    1050,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,  1051,   443,   444,   445,   446,   447,
    1052,  1053,   450,   451,   452,   453,   454,   455,  1054,   457,
     458,   459,   460,   461,   462,  1055,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,  1056,   494,   495,   496,   497,
     498,  1057,  1058,   501,   502,   503,   504,   505,  1059,   507,
     508,   509,   510,   511,   512,  1060,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1061,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,  1062,  1063,  1064,  1065,   565,   566,
     567,  1066,  1067,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  1068,   584,  1069,   586,
     587,   588,   589,   590,   591,   592,   593,   594,  1070,  1071,
     597,  1072,   599,   600,   601,     0,   602,   603,   604,  1073,
       0,     0,     0,     0,   940,   941,   942,   943,   944,  1074,
    1075,     0,  2282,     0,     0,  1076,   945,   946,     0,   947,
    1077,     0,     0,     0,  1078,  1079,   948,   949,  1080,  1081,
     950,   951,   952,   953,     0,   954,   955,     0,   956,   957,
       0,     0,     0,     0,   958,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,   962,   963,     0,   964,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,   971,   972,   973,     0,
       0,     0,     0,     0,     0,     0,   974,     0,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2283,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
     978,   979,     0,   980,     0,     0,     0,     0,     0,   981,
       0,   982,     0,     0,   983,     0,     0,   984,   985,   986,
       0,   987,   988,   989,     0,   990,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   997,   998,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1002,  1003,     0,  1004,  1005,  1006,
       0,     0,     0,  1007,     0,     0,     0,     0,     0,  2284,
       0,  1008,  1009,  1010,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,  1013,  1014,     0,     0,     0,
       0,     0,  1015,     0,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,  1017,   187,
     188,   189,   190,   191,   192,  1018,   194,   195,   196,   197,
     198,   199,   200,  1019,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,  1020,
     217,   218,   219,   220,   221,   222,   223,   224,  1021,   226,
    1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,  1029,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,  1030,  1031,  1032,   262,  1033,  1034,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,  1035,   308,   309,   310,
     311,   312,  1036,   314,  1037,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,  1038,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,  1039,  1040,
     350,   351,   352,  1041,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,  1042,   392,  1043,   394,   395,   396,   397,  1044,  1045,
    1046,  1047,   402,   403,   404,   405,   406,   407,   408,   409,
     410,  1048,  1049,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1050,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,  1051,   443,   444,   445,   446,   447,  1052,  1053,
     450,   451,   452,   453,   454,   455,  1054,   457,   458,   459,
     460,   461,   462,  1055,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,  1056,   494,   495,   496,   497,   498,  1057,
    1058,   501,   502,   503,   504,   505,  1059,   507,   508,   509,
     510,   511,   512,  1060,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1061,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,  1062,  1063,  1064,  1065,   565,   566,   567,  1066,
    1067,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1068,   584,  1069,   586,   587,   588,
     589,   590,   591,   592,   593,   594,  1070,  1071,   597,  1072,
     599,   600,   601,     0,   602,   603,   604,  1073,     0,     0,
       0,     0,   940,   941,   942,   943,   944,  1074,  1075,     0,
       0,     0,     0,  1076,   945,   946,     0,   947,  1077,     0,
       0,     0,  1078,  1079,   948,   949,  1080,  1081,   950,   951,
     952,   953,     0,   954,   955,     0,   956,   957,     0,     0,
       0,     0,   958,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
     962,   963,     0,   964,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,   971,   972,   973,     0,     0,     0,
       0,     0,     0,     0,   974,     0,   975,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,   978,   979,
       0,   980,     0,     0,     0,     0,     0,   981,     0,   982,
       0,     0,   983,     0,     0,   984,   985,   986,     0,   987,
     988,   989,     0,   990,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   991,     0,
       0,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   997,   998,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,  1002,  1003,     0,  1004,  1005,  1006,     0,     0,
       0,  1007,     0,     0,     0,     0,     0,     0,     0,  1008,
    1009,  1010,  1011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1012,  1013,  1014,     0,     0,     0,     0,     0,
    1015,     0,  1016,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,  1017,   187,   188,   189,
     190,   191,   192,  1018,   194,   195,   196,   197,   198,   199,
     200,  1019,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,  1020,   217,   218,
     219,   220,   221,   222,   223,   224,  1021,   226,  1022,  1023,
     228,  1024,  1025,  1026,  1027,  1028,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
    1029,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,  1030,  1031,  1032,   262,  1033,  1034,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,  1035,   308,   309,   310,   311,   312,
    1036,   314,  1037,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,  1038,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,  1039,  1040,   350,   351,
     352,  1041,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,  1042,
     392,  1043,   394,   395,   396,   397,  1044,  1045,  1046,  1047,
     402,   403,   404,   405,   406,   407,   408,   409,   410,  1048,
    1049,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1050,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
    1051,   443,   444,   445,   446,   447,  1052,  1053,   450,   451,
     452,   453,   454,   455,  1054,   457,   458,   459,   460,   461,
     462,  1055,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,  1056,   494,   495,   496,   497,   498,  1057,  1058,   501,
     502,   503,   504,   505,  1059,   507,   508,   509,   510,   511,
     512,  1060,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1061,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
    1062,  1063,  1064,  1065,   565,   566,   567,  1066,  1067,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1068,   584,  1069,   586,   587,   588,   589,   590,
     591,   592,   593,   594,  1070,  1071,   597,  1072,   599,   600,
     601,     0,   602,   603,   604,  1073,     0,     0,     0,     0,
     940,   941,   942,   943,   944,  1074,  1075,     0,     0,     0,
       0,  1076,   945,   946,     0,   947,  1077,     0,     0,     0,
    1078,  1079,   948,   949,  1080,  1081,   950,   951,   952,   953,
       0,   954,   955,     0,   956,   957,     0,     0,     0,     0,
     958,     0,     0,     0,  2577,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,   962,   963,
       0,   964,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,   971,   972,   973,     0,  2578,     0,     0,     0,
       0,     0,   974,     0,   975,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   977,     0,     0,     0,     0,   978,   979,     0,   980,
       0,     0,     0,     0,     0,   981,     0,   982,     0,     0,
     983,     0,     0,   984,   985,   986,     0,   987,   988,   989,
       0,   990,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   997,   998,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
    1002,  1003,     0,  1004,  1005,  1006,     0,     0,     0,  1007,
       0,     0,     0,     0,     0,     0,     0,  1008,  1009,  1010,
    1011,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1012,  1013,  1014,     0,     0,     0,     0,     0,  1015,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,  1017,   187,   188,   189,   190,   191,
     192,  1018,   194,   195,   196,   197,   198,   199,   200,  1019,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,  1020,   217,   218,   219,   220,
     221,   222,   223,   224,  1021,   226,  1022,  1023,   228,  1024,
    1025,  1026,  1027,  1028,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,  1029,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
    1030,  1031,  1032,   262,  1033,  1034,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,  1035,   308,   309,   310,   311,   312,  1036,   314,
    1037,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,  1038,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,  1039,  1040,   350,   351,   352,  1041,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,  1042,   392,  1043,
     394,   395,   396,   397,  1044,  1045,  1046,  1047,   402,   403,
     404,   405,   406,   407,   408,   409,   410,  1048,  1049,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  1050,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,  1051,   443,
     444,   445,   446,   447,  1052,  1053,   450,   451,   452,   453,
     454,   455,  1054,   457,   458,   459,   460,   461,   462,  1055,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,  1056,
     494,   495,   496,   497,   498,  1057,  1058,   501,   502,   503,
     504,   505,  1059,   507,   508,   509,   510,   511,   512,  1060,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1061,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,  1062,  1063,
    1064,  1065,   565,   566,   567,  1066,  1067,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1068,   584,  1069,   586,   587,   588,   589,   590,   591,   592,
     593,   594,  1070,  1071,   597,  1072,   599,   600,   601,     0,
     602,   603,   604,  1073,     0,     0,     0,     0,   940,   941,
     942,   943,   944,  1074,  1075,     0,     0,     0,     0,  1076,
     945,   946,     0,   947,  1077,     0,     0,     0,  1078,  1079,
     948,   949,  1080,  1081,   950,   951,   952,   953,     0,   954,
     955,     0,   956,   957,     0,     0,     0,     0,   958,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,   962,   963,     0,   964,
     965,     0,     0,     0,     0,  2947,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
     971,   972,   973,     0,     0,     0,     0,     0,     0,     0,
     974,     0,   975,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   978,   979,     0,   980,     0,     0,
       0,     0,     0,   981,     0,   982,     0,     0,   983,     0,
       0,   984,   985,   986,     0,   987,   988,   989,     0,   990,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   998,     0,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,  1002,  1003,
       0,  1004,  1005,  1006,     0,     0,     0,  1007,     0,     0,
       0,     0,     0,     0,     0,  1008,  1009,  1010,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,  1013,
    1014,     0,     0,     0,     0,     0,  1015,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,  1017,   187,   188,   189,   190,   191,   192,  1018,
     194,   195,   196,   197,   198,   199,   200,  1019,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1020,   217,   218,   219,   220,   221,   222,
     223,   224,  1021,   226,  1022,  1023,   228,  1024,  1025,  1026,
    1027,  1028,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,  1029,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  1030,  1031,
    1032,   262,  1033,  1034,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
    1035,   308,   309,   310,   311,   312,  1036,   314,  1037,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
    1038,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,  1039,  1040,   350,   351,   352,  1041,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,  1042,   392,  1043,   394,   395,
     396,   397,  1044,  1045,  1046,  1047,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1048,  1049,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  1050,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1051,   443,   444,   445,
     446,   447,  1052,  1053,   450,   451,   452,   453,   454,   455,
    1054,   457,   458,   459,   460,   461,   462,  1055,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1056,   494,   495,
     496,   497,   498,  1057,  1058,   501,   502,   503,   504,   505,
    1059,   507,   508,   509,   510,   511,   512,  1060,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1061,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,  1062,  1063,  1064,  1065,
     565,   566,   567,  1066,  1067,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1068,   584,
    1069,   586,   587,   588,   589,   590,   591,   592,   593,   594,
    1070,  1071,   597,  1072,   599,   600,   601,     0,   602,   603,
     604,  1073,     0,     0,     0,     0,   940,   941,   942,   943,
     944,  1074,  1075,     0,     0,     0,     0,  1076,   945,   946,
       0,   947,  1077,     0,     0,     0,  1078,  1079,   948,   949,
    1080,  1081,   950,   951,   952,   953,     0,   954,   955,     0,
     956,   957,     0,     0,     0,     0,   958,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,   962,   963,     0,   964,   965,     0,
       0,     0,     0,  2949,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,   971,   972,
     973,     0,     0,     0,     0,     0,     0,     0,   974,     0,
     975,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   977,     0,     0,
       0,     0,   978,   979,     0,   980,     0,     0,     0,     0,
       0,   981,     0,   982,     0,     0,   983,     0,     0,   984,
     985,   986,     0,   987,   988,   989,     0,   990,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,     0,     0,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   997,   998,
       0,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,  1002,  1003,     0,  1004,
    1005,  1006,     0,     0,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,  1008,  1009,  1010,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1012,  1013,  1014,     0,
       0,     0,     0,     0,  1015,     0,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
    1017,   187,   188,   189,   190,   191,   192,  1018,   194,   195,
     196,   197,   198,   199,   200,  1019,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,  1020,   217,   218,   219,   220,   221,   222,   223,   224,
    1021,   226,  1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,  1029,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  1030,  1031,  1032,   262,
    1033,  1034,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,  1035,   308,
     309,   310,   311,   312,  1036,   314,  1037,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,  1038,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
    1039,  1040,   350,   351,   352,  1041,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,  1042,   392,  1043,   394,   395,   396,   397,
    1044,  1045,  1046,  1047,   402,   403,   404,   405,   406,   407,
     408,   409,   410,  1048,  1049,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
    1050,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,  1051,   443,   444,   445,   446,   447,
    1052,  1053,   450,   451,   452,   453,   454,   455,  1054,   457,
     458,   459,   460,   461,   462,  1055,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,  1056,   494,   495,   496,   497,
     498,  1057,  1058,   501,   502,   503,   504,   505,  1059,   507,
     508,   509,   510,   511,   512,  1060,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1061,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,  1062,  1063,  1064,  1065,   565,   566,
     567,  1066,  1067,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  1068,   584,  1069,   586,
     587,   588,   589,   590,   591,   592,   593,   594,  1070,  1071,
     597,  1072,   599,   600,   601,     0,   602,   603,   604,  1073,
       0,     0,     0,     0,   940,   941,   942,   943,   944,  1074,
    1075,     0,     0,     0,     0,  1076,   945,   946,     0,   947,
    1077,     0,     0,     0,  1078,  1079,   948,   949,  1080,  1081,
     950,   951,   952,   953,     0,   954,   955,     0,   956,   957,
       0,     0,     0,     0,   958,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,   962,   963,     0,   964,   965,     0,     0,     0,
       0,  2951,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,   971,   972,   973,     0,
       0,     0,     0,     0,     0,     0,   974,     0,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
     978,   979,     0,   980,     0,     0,     0,     0,     0,   981,
       0,   982,     0,     0,   983,     0,     0,   984,   985,   986,
       0,   987,   988,   989,     0,   990,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   997,   998,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1002,  1003,     0,  1004,  1005,  1006,
       0,     0,     0,  1007,     0,     0,     0,     0,     0,     0,
       0,  1008,  1009,  1010,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,  1013,  1014,     0,     0,     0,
       0,     0,  1015,     0,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,  1017,   187,
     188,   189,   190,   191,   192,  1018,   194,   195,   196,   197,
     198,   199,   200,  1019,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,  1020,
     217,   218,   219,   220,   221,   222,   223,   224,  1021,   226,
    1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,  1029,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,  1030,  1031,  1032,   262,  1033,  1034,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,  1035,   308,   309,   310,
     311,   312,  1036,   314,  1037,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,  1038,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,  1039,  1040,
     350,   351,   352,  1041,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,  1042,   392,  1043,   394,   395,   396,   397,  1044,  1045,
    1046,  1047,   402,   403,   404,   405,   406,   407,   408,   409,
     410,  1048,  1049,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1050,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,  1051,   443,   444,   445,   446,   447,  1052,  1053,
     450,   451,   452,   453,   454,   455,  1054,   457,   458,   459,
     460,   461,   462,  1055,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,  1056,   494,   495,   496,   497,   498,  1057,
    1058,   501,   502,   503,   504,   505,  1059,   507,   508,   509,
     510,   511,   512,  1060,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1061,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,  1062,  1063,  1064,  1065,   565,   566,   567,  1066,
    1067,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1068,   584,  1069,   586,   587,   588,
     589,   590,   591,   592,   593,   594,  1070,  1071,   597,  1072,
     599,   600,   601,     0,   602,   603,   604,  1073,     0,     0,
       0,     0,   940,   941,   942,   943,   944,  1074,  1075,     0,
       0,     0,     0,  1076,   945,   946,     0,   947,  1077,     0,
       0,     0,  1078,  1079,   948,   949,  1080,  1081,   950,   951,
     952,   953,     0,   954,   955,     0,   956,   957,     0,     0,
       0,     0,   958,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
     962,   963,     0,   964,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,   971,   972,   973,     0,     0,     0,
       0,     0,     0,     0,   974,     0,   975,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,   978,   979,
       0,   980,     0,     0,     0,     0,     0,   981,     0,   982,
       0,     0,   983,     0,     0,   984,   985,   986,     0,   987,
     988,   989,     0,   990,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   991,     0,
       0,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   997,   998,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,  1002,  1003,     0,  1004,  1005,  1006,     0,     0,
       0,  1007,     0,     0,     0,     0,     0,     0,     0,  1008,
    1009,  1010,  1011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1012,  1013,  1014,     0,     0,     0,     0,     0,
    1015,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,  1017,   187,   188,   189,
     190,   191,   192,  1018,   194,   195,   196,   197,   198,   199,
     200,  1019,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,  1020,   217,   218,
     219,   220,   221,   222,   223,   224,  1021,   226,  1022,  1023,
     228,  1024,  1025,  1026,  1027,  1028,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
    1029,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,  1030,  1031,  1032,   262,  1033,  1034,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,  1035,   308,   309,   310,   311,   312,
    1036,   314,  1037,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,  1038,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,  1039,  1040,   350,   351,
     352,  1041,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,  1042,
     392,  1043,   394,   395,   396,   397,  1044,  1045,  1046,  1047,
     402,   403,   404,   405,   406,   407,   408,   409,   410,  1048,
    1049,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1050,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
    1051,   443,   444,   445,   446,   447,  1052,  1053,   450,   451,
     452,   453,   454,   455,  1054,   457,   458,   459,   460,   461,
     462,  1055,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,  1056,   494,   495,   496,   497,   498,  1057,  1058,   501,
     502,   503,   504,   505,  1059,   507,   508,   509,   510,   511,
     512,  1060,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1061,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
    1062,  1063,  1064,  1065,   565,   566,   567,  1066,  1067,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1068,   584,  1069,   586,   587,   588,   589,   590,
     591,   592,   593,   594,  1070,  1071,   597,  1072,   599,   600,
     601,     0,   602,   603,   604,  1073,     0,     0,     0,     0,
     940,   941,   942,   943,   944,  1074,  1075,     0,     0,     0,
       0,  1076,   945,   946,     0,   947,  1077,     0,     0,     0,
    1078,  1079,   948,   949,  1080,  1081,   950,   951,   952,   953,
       0,   954,   955,     0,   956,   957,     0,     0,     0,     0,
     958,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,   962,   963,
       0,   964,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,   971,   972,   973,     0,     0,     0,     0,     0,
       0,     0,   974,     0,   975,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   977,     0,     0,     0,     0,   978,   979,     0,   980,
       0,     0,     0,     0,     0,   981,     0,   982,     0,     0,
     983,     0,     0,   984,   985,   986,     0,   987,   988,   989,
       0,   990,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   997,   998,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
    1002,  1003,     0,  1004,  1005,  1006,     0,     0,     0,  1007,
       0,     0,     0,     0,     0,     0,     0,  1008,  1009,  1010,
    1011,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1012,  1013,  1014,     0,     0,     0,     0,     0,  1015,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,  1017,   187,   188,   189,   190,   191,
     192,  1018,   194,   195,   196,   197,   198,   199,   200,  1019,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,  1020,   217,   218,   219,   220,
     221,   222,   223,   224,  1021,   226,  1022,  1023,   228,  1024,
    1025,  1026,  1027,  1028,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,  1029,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
    1030,  1031,  1032,   262,  1033,  1034,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,  1035,   308,   309,   310,   311,   312,  1036,   314,
    1037,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,  1038,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,  1039,  1040,   350,   351,   352,  1041,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,  1042,   392,  1043,
     394,   395,   396,   397,  1044,  1045,  1046,  1047,   402,   403,
     404,   405,   406,   407,   408,   409,   410,  1048,  1049,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  1050,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,  1051,   443,
     444,   445,   446,   447,  1052,  1053,   450,   451,   452,   453,
     454,   455,  1054,   457,   458,   459,   460,   461,   462,  1055,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,  1056,
     494,   495,   496,   497,   498,  1057,  1058,   501,   502,   503,
     504,   505,  1059,   507,   508,   509,   510,   511,   512,  1060,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1061,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,  1062,  1063,
    1064,  1065,   565,   566,   567,  1066,  1067,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1068,   584,  1069,   586,   587,   588,   589,   590,   591,   592,
     593,   594,  1070,  1071,   597,  1072,   599,   600,   601,     0,
     602,   603,   604,  1073,     0,     0,     0,     0,   940,   941,
     942,   943,   944,  1074,  1075,     0,     0,     0,     0,  1076,
     945,   946,     0,   947,  1576,     0,     0,     0,  1078,  1079,
     948,   949,  1080,  1081,   950,   951,   952,   953,     0,   954,
     955,     0,   956,   957,     0,     0,     0,     0,   958,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,   962,   963,     0,   964,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
     971,   972,   973,     0,     0,     0,     0,     0,     0,     0,
     974,     0,   975,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   978,   979,     0,   980,     0,     0,
       0,     0,     0,   981,     0,   982,     0,     0,   983,     0,
       0,   984,   985,   986,     0,   987,   988,   989,     0,   990,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   998,     0,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,  1002,  1003,
       0,  1004,  1005,  1006,     0,     0,     0,  1007,     0,     0,
       0,     0,     0,     0,     0,  1008,  1009,  1010,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,  1013,
    1014,     0,     0,     0,     0,     0,  1015,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,  1017,   187,   188,   189,   190,   191,   192,  1018,
     194,   195,   196,   197,   198,   199,   200,  1019,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1020,   217,   218,   219,   220,   221,   222,
     223,   224,  1021,   226,  1022,  1023,   228,  1024,  1025,  1026,
    1027,  1028,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,  1029,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  1030,  1031,
    1032,   262,  1033,  1034,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
    1035,   308,   309,   310,   311,   312,  1036,   314,  1037,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
    1038,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,  1039,  1040,   350,   351,   352,  1041,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,  1042,   392,  1043,   394,   395,
     396,   397,  1044,  1045,  1046,  1047,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1048,  1049,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  1050,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1051,   443,   444,   445,
     446,   447,  1052,  1053,   450,   451,   452,   453,   454,   455,
    1054,   457,   458,   459,   460,   461,   462,  1055,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1056,   494,   495,
     496,   497,   498,  1057,  1058,   501,   502,   503,   504,   505,
    1059,   507,   508,   509,   510,   511,   512,  1060,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1061,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,  1062,  1063,  1064,  1065,
     565,   566,   567,  1066,  1067,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  2148,   584,
    1069,   586,   587,   588,   589,   590,   591,   592,   593,   594,
    1070,  1071,   597,  1072,   599,   600,   601,     0,   602,   603,
     604,  1073,     0,     0,     0,     0,   940,   941,   942,   943,
     944,  1074,  1075,     0,     0,     0,     0,  1076,   945,   946,
       0,   947,  1077,     0,     0,     0,  1078,  1079,   948,   949,
    1080,  1081,   950,   951,   952,   953,     0,   954,   955,     0,
     956,   957,     0,     0,     0,     0,   958,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,   962,   963,     0,   964,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,   971,   972,
     973,     0,     0,     0,     0,     0,     0,     0,   974,     0,
    3545,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   977,     0,     0,
       0,     0,   978,   979,     0,   980,     0,     0,     0,     0,
       0,   981,     0,   982,     0,     0,   983,     0,     0,   984,
     985,   986,     0,   987,   988,   989,     0,   990,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,     0,     0,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   997,   998,
       0,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,  1002,  1003,     0,  1004,
    1005,  1006,     0,     0,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,  1008,  1009,  1010,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1012,  1013,  1014,     0,
       0,     0,     0,     0,  1015,     0,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
    1017,   187,   188,   189,   190,   191,   192,  1018,   194,   195,
     196,   197,   198,   199,   200,  1019,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,  1020,   217,   218,   219,   220,   221,   222,   223,   224,
    1021,   226,  1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,  1029,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  1030,  1031,  1032,   262,
    1033,  1034,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,  1035,   308,
     309,   310,   311,   312,  1036,   314,  1037,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,  1038,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
    1039,  1040,   350,   351,   352,  1041,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,  1042,   392,  1043,   394,   395,   396,   397,
    1044,  1045,  1046,  1047,   402,   403,   404,   405,   406,   407,
     408,   409,   410,  1048,  1049,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
    1050,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,  1051,   443,   444,   445,   446,   447,
    1052,  1053,   450,   451,   452,   453,   454,   455,  1054,   457,
     458,   459,   460,   461,   462,  1055,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,  1056,   494,   495,   496,   497,
     498,  1057,  1058,   501,   502,   503,   504,   505,  1059,   507,
     508,   509,   510,   511,   512,  1060,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1061,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,  1062,  1063,  1064,  1065,   565,   566,
     567,  1066,  1067,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  1068,   584,  1069,   586,
     587,   588,   589,   590,   591,   592,   593,   594,  1070,  1071,
     597,  1072,   599,   600,   601,     0,   602,   603,   604,  1073,
       0,     0,     0,     0,   940,   941,   942,   943,   944,  1074,
    1075,     0,     0,     0,     0,  1076,   945,   946,     0,   947,
    1077,     0,     0,     0,  1078,  1079,   948,   949,  1080,  1081,
     950,   951,   952,   953,     0,   954,   955,     0,   956,   957,
       0,     0,     0,     0,   958,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,   962,   963,     0,   964,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,   971,   972,   973,     0,
       0,     0,     0,     0,     0,     0,   974,     0,  3567,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
     978,   979,     0,   980,     0,     0,     0,     0,     0,   981,
       0,   982,     0,     0,   983,     0,     0,   984,   985,   986,
       0,   987,   988,   989,     0,   990,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   997,   998,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1002,  1003,     0,  1004,  1005,  1006,
       0,     0,     0,  1007,     0,     0,     0,     0,     0,     0,
       0,  1008,  1009,  1010,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,  1013,  1014,     0,     0,     0,
       0,     0,  1015,     0,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,  1017,   187,
     188,   189,   190,   191,   192,  1018,   194,   195,   196,   197,
     198,   199,   200,  1019,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,  1020,
     217,   218,   219,   220,   221,   222,   223,   224,  1021,   226,
    1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,  1029,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,  1030,  1031,  1032,   262,  1033,  1034,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,  1035,   308,   309,   310,
     311,   312,  1036,   314,  1037,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,  1038,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,  1039,  1040,
     350,   351,   352,  1041,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,  1042,   392,  1043,   394,   395,   396,   397,  1044,  1045,
    1046,  1047,   402,   403,   404,   405,   406,   407,   408,   409,
     410,  1048,  1049,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1050,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,  1051,   443,   444,   445,   446,   447,  1052,  1053,
     450,   451,   452,   453,   454,   455,  1054,   457,   458,   459,
     460,   461,   462,  1055,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,  1056,   494,   495,   496,   497,   498,  1057,
    1058,   501,   502,   503,   504,   505,  1059,   507,   508,   509,
     510,   511,   512,  1060,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1061,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,  1062,  1063,  1064,  1065,   565,   566,   567,  1066,
    1067,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1068,   584,  1069,   586,   587,   588,
     589,   590,   591,   592,   593,   594,  1070,  1071,   597,  1072,
     599,   600,   601,     0,   602,   603,   604,  1073,     0,     0,
       0,     0,   940,   941,   942,   943,   944,  1074,  1075,     0,
       0,     0,     0,  1076,   945,   946,     0,   947,  1077,     0,
       0,     0,  1078,  1079,   948,   949,  1080,  1081,   950,   951,
     952,   953,     0,   954,   955,     0,   956,   957,     0,     0,
       0,     0,   958,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
     962,   963,     0,   964,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,   971,   972,   973,     0,     0,     0,
       0,     0,     0,     0,   974,     0,   975,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,   978,   979,
    5724,   980,     0,     0,     0,     0,     0,   981,     0,   982,
       0,     0,   983,     0,     0,   984,     0,   986,     0,   987,
     988,   989,     0,   990,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   991,     0,
       0,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   997,   998,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,  1002,  1003,     0,  1004,  1005,  1006,     0,     0,
       0,  1007,     0,     0,     0,     0,     0,     0,     0,  1008,
    1009,  1010,  1011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1012,  1013,  1014,     0,     0,     0,     0,     0,
    1015,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,  1017,   187,   188,   189,
     190,   191,   192,  1018,   194,   195,   196,   197,   198,   199,
     200,  1019,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,  1020,   217,   218,
     219,   220,   221,   222,   223,   224,  1021,   226,  1022,  1023,
     228,  1024,  1025,  1026,  1027,  1028,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
    1029,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,  1030,  1031,  1032,   262,  1033,  1034,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,  1035,   308,   309,   310,   311,   312,
    1036,   314,  1037,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,  1038,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,  1039,  1040,   350,   351,
     352,  1041,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,  1042,
     392,  1043,   394,   395,   396,   397,  1044,  1045,  1046,  1047,
     402,   403,   404,   405,   406,   407,   408,   409,   410,  1048,
    1049,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1050,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
    1051,   443,   444,   445,   446,   447,  1052,  1053,   450,   451,
     452,   453,   454,   455,  1054,   457,   458,   459,   460,   461,
     462,  1055,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,  1056,   494,   495,   496,   497,   498,  1057,  1058,   501,
     502,   503,   504,   505,  1059,   507,   508,   509,   510,   511,
     512,  1060,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1061,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
    1062,  1063,  1064,  1065,   565,   566,   567,  1066,  1067,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1068,   584,  1069,   586,   587,   588,   589,   590,
     591,   592,   593,   594,  1070,  1071,   597,  1072,   599,   600,
     601,     0,   602,   603,   604,  1073,     0,     0,     0,     0,
     940,   941,   942,   943,   944,  1074,  1075,     0,     0,     0,
       0,  1076,   945,   946,     0,   947,  1077,     0,     0,     0,
    1078,  1079,   948,   949,  1080,  1081,   950,   951,   952,   953,
       0,   954,   955,     0,   956,   957,     0,     0,     0,     0,
     958,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,   962,   963,
       0,   964,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,   971,   972,   973,     0,     0,     0,     0,     0,
       0,     0,   974,     0,  1542,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   977,     0,     0,     0,     0,   978,   979,     0,   980,
       0,     0,     0,     0,     0,   981,     0,   982,     0,     0,
     983,     0,     0,   984,     0,   986,     0,   987,   988,   989,
       0,   990,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   997,   998,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
    1002,  1003,     0,  1004,  1005,  1006,     0,     0,     0,  1007,
       0,     0,     0,     0,     0,     0,     0,  1008,  1009,  1010,
    1011,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1012,  1013,  1014,     0,     0,     0,     0,     0,  1015,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,  1017,   187,   188,   189,   190,   191,
     192,  1018,   194,   195,   196,   197,   198,   199,   200,  1019,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,  1020,   217,   218,   219,   220,
     221,   222,   223,   224,  1021,   226,  1022,  1023,   228,  1024,
    1025,  1026,  1027,  1028,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,  1029,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
    1030,  1031,  1032,   262,  1033,  1034,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,  1035,   308,   309,   310,   311,   312,  1036,   314,
    1037,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,  1038,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,  1039,  1040,   350,   351,   352,  1041,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,  1042,   392,  1043,
     394,   395,   396,   397,  1044,  1045,  1046,  1047,   402,   403,
     404,   405,   406,   407,   408,   409,   410,  1048,  1049,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  1050,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,  1051,   443,
     444,   445,   446,   447,  1052,  1053,   450,   451,   452,   453,
     454,   455,  1054,   457,   458,   459,   460,   461,   462,  1055,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,  1056,
     494,   495,   496,   497,   498,  1057,  1058,   501,   502,   503,
     504,   505,  1059,   507,   508,   509,   510,   511,   512,  1060,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1061,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,  1062,  1063,
    1064,  1065,   565,   566,   567,  1066,  1067,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1068,   584,  1069,   586,   587,   588,   589,   590,   591,   592,
     593,   594,  1070,  1071,   597,  1072,   599,   600,   601,     0,
     602,   603,   604,  1073,     0,     0,     0,     0,   940,   941,
     942,   943,   944,  1543,  1544,     0,     0,     0,     0,  1076,
     945,   946,     0,   947,  1077,     0,     0,     0,  1078,  1079,
     948,   949,  1080,  1081,   950,   951,   952,   953,     0,   954,
     955,     0,   956,   957,     0,     0,     0,     0,   958,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,   962,   963,     0,   964,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
     971,   972,   973,     0,     0,     0,     0,     0,     0,     0,
     974,     0,  1680,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   978,   979,     0,   980,     0,     0,
       0,     0,     0,   981,     0,   982,     0,     0,   983,     0,
       0,   984,     0,   986,     0,   987,   988,   989,     0,   990,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   998,     0,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,  1002,  1003,
       0,  1004,  1005,  1006,     0,     0,     0,  1007,     0,     0,
       0,     0,     0,     0,     0,  1008,  1009,  1010,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,  1013,
    1014,     0,     0,     0,     0,     0,  1015,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,  1017,   187,   188,   189,   190,   191,   192,  1018,
     194,   195,   196,   197,   198,   199,   200,  1019,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1020,   217,   218,   219,   220,   221,   222,
     223,   224,  1021,   226,  1022,  1023,   228,  1024,  1025,  1026,
    1027,  1028,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,  1029,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  1030,  1031,
    1032,   262,  1033,  1034,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
    1035,   308,   309,   310,   311,   312,  1036,   314,  1037,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
    1038,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,  1039,  1040,   350,   351,   352,  1041,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,  1042,   392,  1043,   394,   395,
     396,   397,  1044,  1045,  1046,  1047,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1048,  1049,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  1050,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1051,   443,   444,   445,
     446,   447,  1052,  1053,   450,   451,   452,   453,   454,   455,
    1054,   457,   458,   459,   460,   461,   462,  1055,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1056,   494,   495,
     496,   497,   498,  1057,  1058,   501,   502,   503,   504,   505,
    1059,   507,   508,   509,   510,   511,   512,  1060,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1061,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,  1062,  1063,  1064,  1065,
     565,   566,   567,  1066,  1067,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1068,   584,
    1069,   586,   587,   588,   589,   590,   591,   592,   593,   594,
    1070,  1071,   597,  1072,   599,   600,   601,     0,   602,   603,
     604,  1073,     0,     0,     0,     0,   940,   941,   942,   943,
     944,  1543,  1544,     0,     0,     0,     0,  1076,   945,   946,
       0,   947,  1077,     0,     0,     0,  1078,  1079,   948,   949,
    1080,  1081,   950,   951,   952,   953,     0,   954,   955,     0,
     956,   957,     0,     0,     0,     0,   958,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,   962,   963,     0,   964,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,   971,   972,
     973,     0,     0,     0,     0,     0,     0,     0,   974,     0,
    1682,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   977,     0,     0,
       0,     0,   978,   979,     0,   980,     0,     0,     0,     0,
       0,   981,     0,   982,     0,     0,   983,     0,     0,   984,
       0,   986,     0,   987,   988,   989,     0,   990,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,     0,     0,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   997,   998,
       0,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,  1002,  1003,     0,  1004,
    1005,  1006,     0,     0,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,  1008,  1009,  1010,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1012,  1013,  1014,     0,
       0,     0,     0,     0,  1015,     0,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
    1017,   187,   188,   189,   190,   191,   192,  1018,   194,   195,
     196,   197,   198,   199,   200,  1019,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,  1020,   217,   218,   219,   220,   221,   222,   223,   224,
    1021,   226,  1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,  1029,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  1030,  1031,  1032,   262,
    1033,  1034,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,  1035,   308,
     309,   310,   311,   312,  1036,   314,  1037,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,  1038,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
    1039,  1040,   350,   351,   352,  1041,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,  1042,   392,  1043,   394,   395,   396,   397,
    1044,  1045,  1046,  1047,   402,   403,   404,   405,   406,   407,
     408,   409,   410,  1048,  1049,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
    1050,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,  1051,   443,   444,   445,   446,   447,
    1052,  1053,   450,   451,   452,   453,   454,   455,  1054,   457,
     458,   459,   460,   461,   462,  1055,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,  1056,   494,   495,   496,   497,
     498,  1057,  1058,   501,   502,   503,   504,   505,  1059,   507,
     508,   509,   510,   511,   512,  1060,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1061,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,  1062,  1063,  1064,  1065,   565,   566,
     567,  1066,  1067,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  1068,   584,  1069,   586,
     587,   588,   589,   590,   591,   592,   593,   594,  1070,  1071,
     597,  1072,   599,   600,   601,     0,   602,   603,   604,  1073,
       0,     0,     0,     0,   940,   941,   942,   943,   944,  1543,
    1544,     0,     0,     0,     0,  1076,   945,   946,     0,   947,
    1077,     0,     0,     0,  1078,  1079,   948,   949,  1080,  1081,
     950,   951,   952,   953,     0,   954,   955,     0,   956,   957,
       0,     0,     0,     0,   958,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,   962,   963,     0,   964,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   966,   967,   968,
       0,   969,   970,     0,     0,     0,   971,   972,   973,     0,
       0,     0,     0,     0,     0,     0,   974,     0,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
     978,   979,     0,   980,     0,     0,     0,     0,     0,   981,
       0,   982,     0,     0,   983,     0,     0,   984,     0,   986,
       0,   987,   988,   989,     0,   990,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,     0,   992,   993,   994,     0,   995,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   997,   998,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1002,  1003,     0,  1004,  1005,  1006,
       0,     0,     0,  1007,     0,     0,     0,     0,     0,     0,
       0,  1008,  1009,  1010,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,  1013,  1014,     0,     0,     0,
       0,     0,  1015,     0,  1016,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,  1017,   187,
     188,   189,   190,   191,   192,  1018,   194,   195,   196,   197,
     198,   199,   200,  1019,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,  1020,
     217,   218,   219,   220,   221,   222,   223,   224,  1021,   226,
    1022,  1023,   228,  1024,  1025,  1026,  1027,  1028,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,  1029,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,  1030,  1031,  1032,   262,  1033,  1034,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,  1035,   308,   309,   310,
     311,   312,  1036,   314,  1037,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,  1038,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,  1039,  1040,
     350,   351,   352,  1041,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,  1042,   392,  1043,   394,   395,   396,   397,  1044,  1045,
    1046,  1047,   402,   403,   404,   405,   406,   407,   408,   409,
     410,  1048,  1049,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1050,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,  1051,   443,   444,   445,   446,   447,  1052,  1053,
     450,   451,   452,   453,   454,   455,  1054,   457,   458,   459,
     460,   461,   462,  1055,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,  1056,   494,   495,   496,   497,   498,  1057,
    1058,   501,   502,   503,   504,   505,  1059,   507,   508,   509,
     510,   511,   512,  1060,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1061,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,  1062,  1063,  1064,  1065,   565,   566,   567,  1066,
    1067,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1068,   584,  1069,   586,   587,   588,
     589,   590,   591,   592,   593,   594,  1070,  1071,   597,  1072,
     599,   600,   601,     0,   602,   603,   604,  1073,     0,     0,
       0,     0,   940,   941,   942,   943,   944,  1074,  1075,     0,
       0,     0,     0,  1076,   945,   946,     0,   947,  1077,     0,
       0,     0,  1078,  1079,   948,   949,  1080,  1081,   950,   951,
     952,   953,     0,   954,   955,     0,   956,   957,     0,     0,
       0,     0,   958,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
     962,   963,     0,   964,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   966,   967,   968,     0,   969,
     970,     0,     0,     0,   971,   972,   973,     0,     0,     0,
       0,     0,     0,     0,   974,     0,  2393,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,   978,   979,
       0,   980,     0,     0,     0,     0,     0,   981,     0,   982,
       0,     0,   983,     0,     0,   984,     0,   986,     0,   987,
     988,   989,     0,   990,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   991,     0,
       0,     0,   992,   993,   994,     0,   995,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   997,   998,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,  1002,  1003,     0,  1004,  1005,  1006,     0,     0,
       0,  1007,     0,     0,     0,     0,     0,     0,     0,  1008,
    1009,  1010,  1011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1012,  1013,  1014,     0,     0,     0,     0,     0,
    1015,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,  1017,   187,   188,   189,
     190,   191,   192,  1018,   194,   195,   196,   197,   198,   199,
     200,  1019,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,  1020,   217,   218,
     219,   220,   221,   222,   223,   224,  1021,   226,  1022,  1023,
     228,  1024,  1025,  1026,  1027,  1028,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
    1029,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,  1030,  1031,  1032,   262,  1033,  1034,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,  1035,   308,   309,   310,   311,   312,
    1036,   314,  1037,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,  1038,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,  1039,  1040,   350,   351,
     352,  1041,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,  1042,
     392,  1043,   394,   395,   396,   397,  1044,  1045,  1046,  1047,
     402,   403,   404,   405,   406,   407,   408,   409,   410,  1048,
    1049,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1050,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
    1051,   443,   444,   445,   446,   447,  1052,  1053,   450,   451,
     452,   453,   454,   455,  1054,   457,   458,   459,   460,   461,
     462,  1055,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,  1056,   494,   495,   496,   497,   498,  1057,  1058,   501,
     502,   503,   504,   505,  1059,   507,   508,   509,   510,   511,
     512,  1060,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1061,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
    1062,  1063,  1064,  1065,   565,   566,   567,  1066,  1067,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1068,   584,  1069,   586,   587,   588,   589,   590,
     591,   592,   593,   594,  1070,  1071,   597,  1072,   599,   600,
     601,     0,   602,   603,   604,  1073,     0,     0,     0,     0,
     940,   941,   942,   943,   944,  1074,  1075,     0,     0,     0,
       0,  1076,   945,   946,     0,   947,  1077,     0,     0,     0,
    1078,  1079,   948,   949,  1080,  1081,   950,   951,   952,   953,
       0,   954,   955,     0,   956,   957,     0,     0,     0,     0,
     958,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,   962,   963,
       0,   964,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   966,   967,   968,     0,   969,   970,     0,
       0,     0,   971,   972,   973,     0,     0,     0,     0,     0,
       0,     0,   974,     0,  2395,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   977,     0,     0,     0,     0,   978,   979,     0,   980,
       0,     0,     0,     0,     0,   981,     0,   982,     0,     0,
     983,     0,     0,   984,     0,   986,     0,   987,   988,   989,
       0,   990,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,     0,
     992,   993,   994,     0,   995,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   997,   998,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
    1002,  1003,     0,  1004,  1005,  1006,     0,     0,     0,  1007,
       0,     0,     0,     0,     0,     0,     0,  1008,  1009,  1010,
    1011,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1012,  1013,  1014,     0,     0,     0,     0,     0,  1015,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,  1017,   187,   188,   189,   190,   191,
     192,  1018,   194,   195,   196,   197,   198,   199,   200,  1019,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,  1020,   217,   218,   219,   220,
     221,   222,   223,   224,  1021,   226,  1022,  1023,   228,  1024,
    1025,  1026,  1027,  1028,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,  1029,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
    1030,  1031,  1032,   262,  1033,  1034,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,  1035,   308,   309,   310,   311,   312,  1036,   314,
    1037,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,  1038,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,  1039,  1040,   350,   351,   352,  1041,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,  1042,   392,  1043,
     394,   395,   396,   397,  1044,  1045,  1046,  1047,   402,   403,
     404,   405,   406,   407,   408,   409,   410,  1048,  1049,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  1050,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,  1051,   443,
     444,   445,   446,   447,  1052,  1053,   450,   451,   452,   453,
     454,   455,  1054,   457,   458,   459,   460,   461,   462,  1055,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,  1056,
     494,   495,   496,   497,   498,  1057,  1058,   501,   502,   503,
     504,   505,  1059,   507,   508,   509,   510,   511,   512,  1060,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1061,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,  1062,  1063,
    1064,  1065,   565,   566,   567,  1066,  1067,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1068,   584,  1069,   586,   587,   588,   589,   590,   591,   592,
     593,   594,  1070,  1071,   597,  1072,   599,   600,   601,     0,
     602,   603,   604,  1073,     0,     0,     0,     0,     0,   941,
     942,   943,   944,  1074,  1075,     0,     0,     0,     0,  1076,
     945,   946,     0,   947,  1077,     0,     0,     0,  1078,  1079,
     948,   949,  1080,  1081,   950,   951,   952,   953,     0,   954,
     955,     0,   956,   957,     0,     0,     0,     0,   958,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,   962,   963,     0,   964,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   966,   967,   968,     0,   969,   970,     0,     0,     0,
     971,   972,   973,     0,     0,     0,     0,     0,     0,     0,
     974,     0,  1542,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   978,   979,     0,   980,     0,     0,
       0,     0,     0,   981,     0,   982,     0,     0,   983,     0,
       0,     0,     0,   986,     0,   987,   988,   989,     0,   990,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,   992,   993,
     994,     0,   995,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   998,     0,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,  1002,  1003,
       0,  1004,  1005,  1006,     0,     0,     0,  1007,     0,     0,
       0,     0,     0,     0,     0,  1008,  1009,  1010,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,  1013,
    1014,     0,     0,     0,     0,     0,  1015,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,  1017,   187,   188,   189,   190,   191,   192,  1018,
     194,   195,   196,   197,   198,   199,   200,  1019,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1020,   217,   218,   219,   220,   221,   222,
     223,   224,  1021,   226,  1022,  1023,   228,  1024,  1025,  1026,
    1027,  1028,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,  1029,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  1030,  1031,
    1032,   262,  1033,  1034,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
    1035,   308,   309,   310,   311,   312,  1036,   314,  1037,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
    1038,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,  1039,  1040,   350,   351,   352,  1041,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,  1042,   392,  1043,   394,   395,
     396,   397,  1044,  1045,  1046,  1047,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1048,  1049,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  1050,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1051,   443,   444,   445,
     446,   447,  1052,  1053,   450,   451,   452,   453,   454,   455,
    1054,   457,   458,   459,   460,   461,   462,  1055,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,  1056,   494,   495,
     496,   497,   498,  1057,  1058,   501,   502,   503,   504,   505,
    1059,   507,   508,   509,   510,   511,   512,  1060,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1061,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,  1062,  1063,  1064,  1065,
     565,   566,   567,  1066,  1067,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1068,   584,
    1069,   586,   587,   588,   589,   590,   591,   592,   593,   594,
    1070,  1071,   597,  1072,   599,   600,   601,   941,   602,   603,
     604,  1073,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5527,  5528,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5529,     0,     0,     0,     0,  1079,     0,     0,
    1080,  1081,     0,     0,     0,     0,   958,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   963,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   969,   970,     0,     0,     0,  1579,  1580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   977,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   983,     0,     0,     0,
       0,     0,     0,     0,   988,   989,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,     0,  1009,  1010,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,  1581,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,  2430,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,  2832,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,  2431,   562,   563,  2432,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
       0,     0,     0,     0,     0,     0,     0,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1080,  1081,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,  3090,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,     0,
       0,     0,     0,     0,     0,     0,   172,   173,     0,     0,
    2833,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,  1171,   602,   603,   604,   605,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2833,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1172,     0,     0,     0,   772,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,  1173,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
    1174,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,  1175,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,  1176,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,  1177,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,  1178,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,  1179,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
    1180,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,  1181,   598,   599,   600,   601,  1171,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1172,     0,     0,     0,
       0,  1182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,  1173,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,  1174,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,  1175,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,  1176,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
    1177,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,  1178,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,  1179,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,  1181,   598,   599,   600,
     601,  1906,   602,   603,   604,   605,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1579,  1580,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,     4,   602,   603,   604,   605,     0,     0,     0,
       0,   898,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1907,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     899,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     900,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   172,   173,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   901,
       0,     0,     0,     0,     0,     0,   902,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   903,   904,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    40,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,     0,   178,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   194,   195,   196,   197,   198,   199,   200,   201,
       0,   905,     0,     0,   205,   206,   207,   208,   209,     0,
       0,   212,   213,   214,   215,     0,     0,     0,   219,   220,
     221,   222,   223,   906,   225,   226,   227,     0,   228,     0,
       0,     0,     0,     0,     0,   234,     0,   236,     0,   238,
     239,     0,   241,   242,   243,   244,   245,   246,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,     0,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,     0,   274,   275,   276,   277,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,     0,     0,   293,     0,   907,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   317,   318,     0,   320,   321,     0,     0,   323,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   908,     0,
       0,     0,   436,   437,     0,   439,   440,   441,   442,     0,
     444,   445,   446,   447,   448,   449,     0,     0,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     0,   481,     0,   483,
     484,     0,   486,   487,     0,   489,   490,   491,   492,   493,
     494,     0,   496,   497,   498,   499,   500,   501,   502,     0,
     504,   505,   506,     0,   508,   509,   510,   511,     0,   513,
     514,     0,     0,   517,     0,     0,   520,   521,   522,     0,
     524,     0,   526,   527,   528,   529,     0,   530,   531,   532,
     533,     0,   535,   536,     0,   538,     0,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,     0,   561,   562,
     563,   564,   565,   566,   567,   568,     0,   570,   571,   572,
       0,   574,   575,   576,   577,   854,   855,   580,   581,     0,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,     0,     0,   599,   600,     0,     0,
     602,     0,   604,   605,     0,     0,     0,     0,     0,     0,
     856,     0,     0,     0,     0,   857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5330,     0,     0,
       0,     0,   858,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   859,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   860,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   172,   173,
       0,     0,     0,   861,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   788,     0,     0,
       0,     0,     0,     0,   863,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   865,     0,     0,     0,     0,     0,     0,     0,
     866,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   693,     0,     0,     0,     0,
       0,     0,   867,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   868,   869,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   870,   288,   289,   290,   291,
     871,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   872,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     873,   459,   460,   461,   874,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   875,   480,   481,   482,   483,   876,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   877,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   878,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
    1149,   855,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   856,     0,     0,     0,     0,
     857,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   858,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   172,   173,     0,     0,     0,   861,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   788,     0,     0,     0,     0,     0,     0,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   865,     0,     0,
       0,     0,     0,     0,     0,   866,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     693,     0,     0,     0,     0,     0,     0,   867,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,  1150,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     870,   288,   289,   290,   291,   871,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   872,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   873,   459,   460,   461,  1151,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   875,   480,   481,   482,
     483,   876,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   877,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,  1815,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   878,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   788,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   693,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,  4688,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,     0,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,  4708,   602,   603,   604,   605,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   741,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   172,   173,     0,
       0,     0,  3180,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   742,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,  4709,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,  4222,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   172,
     173,     0,     0,     0,     0,     0,     0,  4453,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   693,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,     0,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,     0,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,     0,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,  1768,   602,   603,   604,
     605,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1769,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1770,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   693,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,  1784,   602,   603,   604,   605,
       0,     0,     0,     0,  1771,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   788,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   693,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,  1768,   602,   603,   604,   605,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1769,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   788,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
    1768,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   788,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   693,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,  1298,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,     0,     0,     0,     0,     0,     0,
       0,     0,  1299,  1300,     0,     0,     0,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,  1398,   602,   603,   604,   605,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   693,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,     0,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     4,   602,   603,   604,   605,
       0,     0,     0,     0,   898,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1674,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  -443,  -443,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  -443,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,  -463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -463,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  -463,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,  -460,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -460,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  -460,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  1528,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  -465,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  3422,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  3475,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  3691,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  3695,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  4076,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,  4961,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,  -447,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     0,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     4,   561,   562,   563,   564,
     565,   566,   567,   568,   898,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,   581,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,     0,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   899,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,     0,     0,     0,     0,     0,     0,   902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   903,   904,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,     0,   178,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   905,     0,     0,   205,   206,   207,
     208,   209,     0,     0,   212,   213,   214,   215,     0,     0,
       0,   219,   220,   221,   222,   223,   906,   225,   226,   227,
       0,   228,     0,     0,     0,     0,     0,     0,   234,     0,
     236,     0,   238,   239,     0,   241,   242,   243,   244,   245,
     246,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,     0,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,     0,   274,
     275,   276,   277,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,     0,     0,   293,     0,
     907,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   317,   318,     0,   320,   321,
       0,     0,   323,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   908,     0,     0,     0,   436,   437,     0,   439,   440,
     441,   442,     0,   444,   445,   446,   447,   448,   449,     0,
       0,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     0,
     481,     0,   483,   484,     0,   486,   487,     0,   489,   490,
     491,   492,   493,   494,     0,   496,   497,   498,   499,   500,
     501,   502,     0,   504,   505,   506,     0,   508,   509,   510,
     511,     0,   513,   514,     0,     0,   517,     0,     0,   520,
     521,   522,     0,   524,     0,   526,   527,   528,   529,     0,
     530,   531,   532,   533,     0,   535,   536,     0,   538,     0,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
       4,   561,   562,   563,   564,   565,   566,   567,   568,   898,
     570,   571,   572,     0,   574,   575,   576,   577,     0,     0,
     580,   581,     0,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,     0,     0,   599,
     600,     0,     0,   602,     0,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   899,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   900,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   901,     0,     0,
       0,     0,     0,     0,   902,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   903,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,     0,   178,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   905,
       0,     0,   205,   206,   207,   208,   209,     0,     0,   212,
     213,   214,   215,     0,     0,     0,   219,   220,   221,   222,
     223,   906,   225,   226,   227,     0,   228,     0,     0,     0,
       0,     0,     0,   234,     0,   236,     0,   238,   239,     0,
     241,   242,   243,   244,   245,   246,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,     0,   274,   275,   276,   277,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,     0,     0,   293,     0,   907,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     317,   318,     0,   320,   321,     0,     0,   323,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   908,     0,     0,     0,
     436,   437,     0,   439,   440,   441,   442,     0,   444,   445,
     446,   447,   448,   449,     0,     0,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     0,   481,     0,   483,   484,     0,
     486,   487,     0,   489,   490,   491,   492,   493,   494,     0,
     496,   497,   498,   499,   500,   501,   502,     0,   504,   505,
     506,     0,   508,   509,   510,   511,     0,   513,   514,     0,
       0,   517,     0,     0,   520,   521,   522,     0,   524,     0,
     526,   527,   528,   529,     0,   530,   531,   532,   533,     4,
     535,   536,     0,   538,     0,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,     0,   561,   562,   563,   564,
     565,   566,   567,   568,     0,   570,   571,   572,     0,   574,
     575,   576,   577,     0,     0,   580,  1749,     0,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,    13,     0,   599,   600,     0,     0,   602,     0,
     604,   605,     0,     0,     0,     0,     0,     0,     0,   172,
     173,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,   903,   904,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      40,     0,     0,     0,     0,     0,     0,     0,     0,   174,
     175,   176,     0,   178,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,     0,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   905,     0,
       0,   205,   206,   207,   208,   209,     0,     0,   212,   213,
     214,   215,     0,     0,     0,   219,   220,   221,   222,   223,
       0,   225,   226,   227,     0,   228,     0,     0,     0,     0,
       0,     0,   234,     0,   236,     0,   238,   239,     0,   241,
     242,   243,   244,   245,   246,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
       0,   263,   264,   265,     0,   266,   267,   268,   269,   270,
     271,   272,     0,   274,   275,   276,   277,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
       0,     0,   293,     0,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   317,
     318,     0,   320,   321,     0,     0,   323,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,     0,   439,   440,   441,   442,     0,   444,   445,   446,
     447,   448,   449,     0,     0,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     0,   481,     0,   483,   484,     0,   486,
     487,     0,   489,   490,   491,   492,   493,   494,     0,   496,
     497,   498,   499,   500,   501,   502,     0,   504,   505,   506,
       0,   508,   509,   510,   511,     0,   513,   514,     0,     0,
     517,     0,     0,   520,   521,   522,     0,   524,     0,   526,
     527,   528,   529,     0,   530,   531,   532,   533,     0,   535,
     536,     0,   538,     0,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,     0,   561,   562,   563,   564,   565,
     566,   567,   568,     0,   570,   571,   572,     0,   574,   575,
     576,   577,  3453,  3454,   580,   581,     0,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,     0,     0,   599,   600,     0,     0,   602,     0,   604,
     605,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  3455,  3456,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,  3457,   598,   599,   600,
     601,  1334,   602,   603,   604,   605,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,  1398,   857,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1335,     0,
       0,     0,     0,  1336,     0,     0,   772,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   788,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   693,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,  1398,
     602,   603,   604,   605,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   172,   173,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   788,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     693,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     857,   602,   603,   604,   605,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   172,   173,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   788,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     693,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,  2203,     0,     0,     0,  4869,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2204,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3791,     0,     0,     0,     0,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3792,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3793,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   693,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3794,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,  2203,
       0,     0,     0,  5638,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2204,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3791,     0,     0,     0,
       0,   172,   173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3792,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3793,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   693,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3794,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,     0,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,     0,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,     0,   602,
     603,   604,   605,  2203,     0,     0,     0,  5742,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2204,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3791,     0,     0,     0,     0,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3792,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3793,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   693,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3794,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,  3106,   602,   603,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   788,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   693,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,  1761,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,  1761,   602,   603,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
    2493,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,  3173,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,  4800,   602,   603,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,  4818,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,  3120,   602,   603,   604,   605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   693,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,  3121,   598,   599,   600,   601,     0,   602,   603,
     604,   605,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,  2349,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,     0,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5822,     0,     0,     0,     0,
       0,     0,  2350,  5823,   788,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   693,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,     0,   602,   603,   604,   605,     0,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1782,   788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   693,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
       0,   172,   173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1995,
     788,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   693,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,     0,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,     0,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,     0,   602,
     603,   604,   605,   172,   173,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2364,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,  2349,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,  1579,  1580,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2350,  5823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,     0,   602,   603,   604,   605,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1907,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    32,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    39,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    41,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,  1579,
    1580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,     0,   772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,     0,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,  1581,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,     0,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,     0,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,     0,   602,   603,   604,
     605,   172,   173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1582,     0,     0,     0,     0,     0,     0,     0,  1080,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,     0,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,     0,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,     0,   602,
     603,   604,   605,  1579,  1580,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1335,     0,     0,     0,     0,  1336,     0,
       0,   772,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,  1581,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
    2349,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,     0,   602,   603,   604,   605,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2350,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,   172,
     173,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,     0,   772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,     0,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,     0,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,     0,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,     0,   602,   603,   604,
     605,   172,   173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2833,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   772,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,     0,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,     0,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,     0,   602,
     603,   604,   605,   172,   173,  4766,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4452,     0,     0,     0,     0,     0,     0,
       0,  4453,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,   172,   173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4453,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,     0,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
       0,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
       0,   294,   295,   296,   769,   298,   299,   300,   301,   302,
     303,   304,   305,   306,     0,   770,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   771,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,     0,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,     0,   602,   603,   604,   605,   172,   173,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   772,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,     0,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,     0,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,     0,   602,   603,   604,   605,   172,
     173,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,     0,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,     0,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,     0,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,     0,   602,   603,   604,
     605,   172,   173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4453,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,     0,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,     0,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,  2864,   602,
     603,   604,   605,   172,   173,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2408,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   689,   690,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5183,   660,  5184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,     0,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,     0,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
       0,   602,   603,   604,   605,  1516,     0,     0,     0,     0,
    1517,     0,     0,     0,     0,  2865,     0,     0,     0,     0,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,  1518,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,  1448,   602,   603,
     604,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2808,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,  1579,  1580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3987,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4226,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,     0,   602,   603,
     604,   605,  1579,  1580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4666,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5025,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5226,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   788,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1770,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,  1579,  1580,
       0,     0,  1771,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2006,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2007,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2008,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2009,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,  2010,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
    1579,  1580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2006,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2007,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3969,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2009,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,  2010,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,     0,   602,   603,
     604,   605,  1579,  1580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2006,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2007,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2009,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,  2010,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   659,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   660,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   788,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   660,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
    1579,  1580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1625,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,     0,   602,   603,
     604,   605,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   693,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5457,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   701,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,     0,   602,   603,
     604,   605,  1579,  1580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,  1926,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2504,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
       0,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,     0,   602,   603,   604,   605,   172,   173,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,  3200,   303,   304,   305,   306,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,  3201,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,     0,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,     0,   602,   603,   604,   605,
     172,   173,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,     0,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,  3457,   598,   599,   600,   601,     0,   602,   603,
     604,   605,   172,   173,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,     0,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   598,   599,   600,   601,     0,
     602,   603,   604,   605,   172,   173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   693,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,     0,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,     0,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,  3121,   598,   599,   600,
     601,     0,   602,   603,   604,   605,   172,   173,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1514,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   176,     0,
     178,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,     0,   194,   195,   196,   197,
     198,   199,   200,   201,     0,     0,     0,     0,   205,   206,
     207,   208,   209,     0,     0,   212,   213,   214,   215,     0,
       0,     0,   219,   220,   221,   222,   223,     0,   225,   226,
     227,     0,   228,     0,     0,     0,     0,     0,     0,   234,
       0,   236,     0,   238,   239,     0,   241,   242,   243,   244,
     245,   246,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,     0,   263,   264,
     265,     0,   266,   267,   268,   269,   270,   271,   272,     0,
     274,   275,   276,   277,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,     0,     0,   293,
       0,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   317,   318,     0,   320,
     321,     0,     0,   323,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   172,   173,     0,     0,   436,   437,     0,   439,
     440,   441,   442,     0,   444,   445,   446,   447,   448,   449,
       0,     0,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       0,   481,     0,   483,   484,     0,   486,   487,     0,   489,
     490,   491,   492,   493,   494,     0,   496,   497,   498,   499,
     500,   501,   502,     0,   504,   505,   506,     0,   508,   509,
     510,   511,     0,   513,   514,     0,     0,   517,     0,     0,
     520,   521,   522,     0,   524,     0,   526,   527,   528,   529,
       0,   530,   531,   532,   533,     0,   535,   536,     0,   538,
       0,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,     0,   561,   562,   563,   564,   565,   566,   567,   568,
       0,   570,   571,   572,     0,   574,   575,   576,   577,     0,
       0,   580,   581,     0,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,     0,     0,
     599,   600,     0,     0,   602,     0,   604,   605,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1525,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   174,   175,   176,     0,   178,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   194,   195,   196,   197,   198,   199,   200,   201,
       0,     0,     0,     0,   205,   206,   207,   208,   209,     0,
       0,   212,   213,   214,   215,     0,     0,     0,   219,   220,
     221,   222,   223,     0,   225,   226,   227,     0,   228,     0,
       0,     0,     0,     0,     0,   234,     0,   236,     0,   238,
     239,     0,   241,   242,   243,   244,   245,   246,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,     0,   263,   264,   265,     0,   266,   267,
     268,   269,   270,   271,   272,     0,   274,   275,   276,   277,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,     0,     0,   293,     0,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   317,   318,     0,   320,   321,     0,     0,   323,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   172,   173,
       0,     0,   436,   437,     0,   439,   440,   441,   442,     0,
     444,   445,   446,   447,   448,   449,     0,     0,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     0,   481,     0,   483,
     484,     0,   486,   487,     0,   489,   490,   491,   492,   493,
     494,     0,   496,   497,   498,   499,   500,   501,   502,     0,
     504,   505,   506,     0,   508,   509,   510,   511,     0,   513,
     514,     0,     0,   517,     0,     0,   520,   521,   522,     0,
     524,     0,   526,   527,   528,   529,     0,   530,   531,   532,
     533,     0,   535,   536,     0,   538,     0,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,     0,   561,   562,
     563,   564,   565,   566,   567,   568,     0,   570,   571,   572,
       0,   574,   575,   576,   577,     0,     0,   580,   581,     0,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,     0,     0,   599,   600,     0,     0,
     602,     0,   604,   605,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   174,   175,
     176,     0,   178,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,     0,   194,   195,
     196,   197,   198,   199,   200,   201,     0,     0,     0,     0,
     205,   206,   207,   208,   209,     0,     0,   212,   213,   214,
     215,     0,     0,     0,   219,   220,   221,   222,   223,     0,
     225,   226,   227,     0,   228,     0,     0,     0,     0,     0,
       0,   234,     0,   236,     0,   238,   239,     0,   241,   242,
     243,   244,   245,   246,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,     0,
     263,   264,   265,     0,   266,   267,   268,   269,   270,   271,
     272,     0,   274,   275,   276,   277,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,     0,
       0,   293,     0,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   317,   318,
       0,   320,   321,     0,     0,   323,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,   436,   437,
       0,   439,   440,   441,   442,     0,   444,   445,   446,   447,
     448,   449,     0,     0,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     0,   481,     0,   483,   484,     0,   486,   487,
       0,   489,   490,   491,   492,   493,   494,     0,   496,   497,
     498,   499,   500,   501,   502,     0,   504,   505,   506,     0,
     508,   509,   510,   511,     0,   513,   514,     0,     0,   517,
       0,     0,   520,   521,   522,     0,   524,     0,   526,   527,
     528,   529,     0,   530,   531,   532,   533,     0,   535,   536,
       0,   538,     0,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,     0,   561,   562,   563,   564,   565,   566,
     567,   568,     0,   570,   571,   572,     0,   574,   575,   576,
     577,     0,     0,   580,   581,     0,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
       0,     0,   599,   600,     0,     0,   602,     0,   604,   605
};

static const yytype_int16 yycheck[] =
{
       3,    68,   163,    44,     0,   171,   676,   675,   676,   675,
      21,     0,   675,  1388,  1561,  1599,     0,   909,  1741,   161,
     159,   898,    25,   900,   901,   902,  1728,    30,   755,   652,
     907,     0,    35,  1748,   668,    38,   153,     0,  2087,   156,
     675,    52,  1454,   783,  1568,   668,   675,    58,    51,  1361,
    1231,   978,   675,  1361,    57,  3347,  1359,  1140,    61,  2097,
     783,  1884,  2688,  1789,  1577,  3347,  2884,  2885,  2569,  3381,
    1791,  1392,  1176,  1177,  1178,   700,  2626,  1497,  1392,    68,
     652,  1185,  3283,   641,  3421,   641,   940,  3097,  3731,   717,
    1699,  1913,   720,  3759,  1860,  1353,   668,   740,  1707,   847,
    1466,   744,   745,   675,  1335,  1295,  2898,    31,  2900,  1805,
    1806,  2567,  2173,  2901,   672,  2032,   672,  2796,   171,   171,
    3263,  1906,   125,  4458,  1708,  1709,   171,  1711,  1712,  1713,
    1714,  1715,  1716,  1741,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,   826,  3286,  3297,  2796,   135,  1450,   171,   152,
     153,   135,  3162,   156,   171,  3003,   159,   160,  3347,  3218,
    1810,  2594,  2654,  4054,    27,  3353,   135,  2653,  2654,  3736,
    3323,  3324,  3847,  3846,  3849,   171,  3846,  3852,  3846,  1829,
      12,  1675,   171,  1906,    47,  2663,  2131,   171,  2133,  2134,
    3148,  4463,  3858,  2729,     6,  2729,    45,    26,  2043,     6,
      28,  4577,   171,    11,  1854,  1855,    11,    26,  1904,  1525,
    3885,  4330,    80,    50,     9,    10,  4724,    92,    80,    61,
    1074,  1075,  1076,    61,  1939,   104,    60,     9,    10,    11,
      11,     9,    10,    65,  1088,  3388,  3389,     6,    80,  1429,
    2085,     9,    10,    83,  1233,    11,     6,     9,    10,   767,
    1142,     9,    10,   179,   155,    94,     9,    10,   766,    42,
    2796,    12,  2796,  4558,     9,    10,   104,   114,     9,    10,
    2721,  3910,    80,     9,    10,   898,    61,   900,   901,   902,
     120,  4922,     9,    10,   907,  3395,   909,     9,    10,    10,
    4426,  1210,     9,    10,    63,  2710,     9,    10,  1906,   221,
    3148,     9,    10,   196,    61,   151,  2798,   170,   296,     9,
      10,    90,  2798,  1232,    65,  3495,  3323,  3324,   266,   104,
    3345,   266,    86,   113,     9,    10,   898,    92,   900,   901,
     902,  1984,    94,   116,   238,   907,   179,   909,   195,   978,
     104,  2056,  3312,    61,   127,   266,   251,   104,     9,    10,
     119,   134,    61,  4305,    61,     9,    10,   362,     6,   286,
       9,    10,    80,    61,   210,     9,    10,   365,     9,    10,
     151,    80,   266,   104,    80,     9,    10,    80,  4383,     6,
     155,  3388,  3389,   166,  1023,  1468,  5398,   166,   183,   173,
     185,  2847,   357,   217,   210,   223,  2445,   104,  4792,     9,
      10,   183,   196,   185,   751,   183,   104,   185,   378,   238,
    3368,  1494,  3493,  4569,   266,   183,   264,   185,   286,  2786,
    3501,   183,  3503,   185,  3505,   183,  4837,   185,   423,   210,
     183,    32,   185,   179,   140,     9,    10,   140,   183,   279,
     185,  1080,   183,   117,   185,   228,   355,   183,   136,   185,
     124,   220,   583,   179,     9,    10,   183,   804,   185,   184,
     760,   183,   173,   185,   233,   765,   183,   767,   185,  2184,
     183,   129,   185,   238,   145,   183,   259,   185,    17,   573,
     264,   113,   301,   183,   626,   185,   628,   629,   630,   631,
     374,   633,   634,  4012,  3063,   637,   638,  5140,   183,    69,
     185,   614,   641,  2552,   179,   271,  2451,  2452,  2453,  2454,
     305,   275,     9,    10,   283,   189,   247,    80,   286,  1142,
    3368,   290,   183,   305,   185,     9,    10,   305,  3840,   183,
     411,   185,   301,   672,   183,  1955,   185,   305,   642,   183,
      69,   185,   183,   305,   185,   233,   125,   305,   395,   183,
     113,   185,   305,  3741,   179,   694,   148,    92,     9,    10,
     305,   139,   179,   113,   305,   127,   519,  1942,   707,   305,
    1142,   715,  1256,   183,    86,   185,   485,  5411,   305,  4955,
     722,   723,  3327,   305,   680,     9,    10,   121,   305,   266,
     646,   286,   305,   299,   164,    94,   299,   305,    93,  1227,
    3610,   151,   290,   151,  5438,   305,   140,   720,  1335,   183,
     145,   185,   182,   301,    61,  4134,   111,   238,     9,    10,
     305,   624,  5634,  4472,   679,   124,  1265,   771,   183,   145,
     185,   104,   635,   238,   355,   164,   732,   640,   641,  1566,
     771,    92,   301,   233,   305,    58,    99,  4942,     9,    10,
     531,   305,   746,   285,   325,  1582,   305,   220,  1762,  4298,
    3618,   305,   665,   175,   305,   449,   805,   771,   264,   672,
      17,   305,   675,  1756,   121,   680,  1319,  2043,  1321,  1783,
     301,  1324,  1325,  1326,   687,    32,   183,    11,   185,  1543,
    1544,   694,   301,  1776,  1417,   305,   661,   238,  2562,   183,
     290,   185,  5113,   706,   707,   302,   303,   846,   850,   851,
     123,  2032,  3901,   495,   498,  1463,  3395,   129,  2032,  2085,
    1803,   299,  1361,   840,   841,   842,   309,   328,   301,   286,
    2553,   305,   183,   585,   185,  2461,   739,   561,   365,  2105,
    5134,  2462,   666,   738,  3395,  1976,  3643,  3644,  3645,  3646,
     305,   352,   755,  5396,  3246,  1439,  1987,   264,   621,   183,
    3246,   185,   537,   275,   485,   281,   623,  3737,  4720,   772,
    3618,   620,  4777,   771,  1497,  3253,   639,   766,   687,  3257,
     783,    17,   785,   771,   574,  1469,   185,   498,   715,   113,
     653,  3327,   183,  3327,   185,  4951,    32,     9,    10,   212,
    1434,   771,   805,   651,   636,   463,  2390,   104,   305,  3962,
     626,  1434,   815,  4452,  1741,   678,   448,  2401,  3843,  2403,
    2404,   305,   183,   826,   185,   828,   771,     9,    10,     5,
     735,   379,   780,   836,   718,   838,   652,   840,   841,   842,
     843,   844,   213,   846,  2357,  2358,  2668,   104,   774,  2165,
     771,   755,   774,  3963,   305,    31,  2172,  1541,   692,  3395,
     709,  3395,  1434,  1852,   905,  2710,     9,    10,   717,  5377,
     771,   720,  1390,   797,  3325,  1729,  1384,   771,   771,  5174,
    4729,   305,   761,  3298,  2729,   636,  4066,  2832,     9,    10,
    1809,  2081,  2542,  1812,   897,  5031,   899,    73,   735,   774,
     746,   661,   749,   906,  1823,   908,  1464,  1826,     9,    10,
     778,  1830,   696,   237,   305,   734,   778,   774,   914,  5560,
     923,   845,  4003,   761,   848,   914,   755,  1566,   760,  1554,
     914,   774,   772,     9,    10,   774,   778,   390,  1857,  1858,
    1859,  2786,  1581,  1582,   305,   914,   774,   755,  4029,   709,
     755,  2796,  3800,  3801,  5330,  3962,  3804,  3805,  5077,   771,
    5079,   285,  3810,  3811,   771,   746,   687,  4048,  4049,  4050,
     778,   183,  4053,   185,   755,   754,   761,   771,  5250,  1906,
     519,   328,   777,  1710,  4065,  3441,  1333,     9,    10,   755,
     755,   774,   774,  3841,   772,   171,   774,   761,  1623,   346,
     438,   183,   771,   185,   761,   352,   774,   238,  2661,  2662,
    1077,    42,   774,   661,   772,  1640,   774,  1757,  1643,   772,
    1645,   774,  2886,  3390,  1649,  1650,  1651,   772,   774,   774,
     761,   772,  1657,   774,  1757,   211,   772,  1176,   774,  1178,
     183,  2807,   185,  1182,  1183,   772,  1087,   774,   774,   774,
     772,   463,   774,    28,   761,   772,  3625,   774,   608,   772,
     778,   774,   183,   761,   185,  2148,   774,     9,    10,   778,
     632,   286,   778,  1212,   774,   778,  1079,   772,   141,   774,
    3825,  1077,   183,   771,   185,   116,   233,  1827,  1077,   774,
    1390,   114,   328,   305,   771,  1734,   127,   680,   772,   774,
     696,   500,  1741,   134,  1827,   552,  2821,   183,   561,   185,
     346,     9,    10,   774,   380,   774,   352,   109,   110,   264,
     774,   722,    86,   305,   448,   774,    32,   706,     9,    10,
     774,   772,  4320,  1860,   755,   166,  4337,  1140,  1141,  4340,
     774,  3767,   378,   290,   207,  3090,  4785,    14,  4787,   774,
     755,  4790,  1795,  3779,   301,  4722,  4448,   774,  4797,  4798,
     676,   183,   305,   185,   774,   774,  4448,  1170,   760,   761,
     608,     9,    10,  1176,   779,  1178,   755,   774,  2070,  1182,
    1183,   771,  4857,  4856,   305,   238,  4856,   362,  4856,   696,
     760,   761,   762,   763,   764,   765,  4780,   228,  4837,   238,
     774,   774,    14,   238,   305,    33,   170,   171,  1766,  1212,
    1766,   175,   724,  5610,   755,   778,  1355,   774,  5553,   774,
     727,  1387,   779,   266,  5115,   362,  5075,  4286,   259,   305,
    1271,   377,  1955,   762,   763,   764,   765,  1921,   779,   151,
     744,   183,  4252,   185,   113,   210,  1249,  1250,   223,  1976,
    4936,   704,  1255,  1256,  1869,  5590,  5591,  3749,  3750,  4448,
    1987,  1988,   237,  3749,  3750,   264,   266,  1906,  1335,  1272,
    1898,   684,  3705,   109,   110,  3753,  3754,   774,  1281,  5676,
     264,    11,   151,   305,  3963,   183,  3071,   185,   761,  3825,
     774,  3825,  1295,  1296,    63,  2043,  1924,   403,   697,   772,
      10,   774,   183,  2624,   185,  4458,   564,  3224,  1425,   301,
    2624,   275,  3963,  1316,    32,  1958,  1959,   332,   897,  4216,
    4217,   772,  1965,  1966,  1967,  1464,     9,    10,   210,   462,
    2257,  4341,  1335,  1336,  1387,  1387,   774,  2085,   151,  1335,
    2924,   607,  1387,   637,  2710,   183,  1335,   185,  3071,  4137,
     774,  3852,  1355,  5688,  2437,  2438,  4006,  2538,  4008,    76,
     447,  2465,  3185,   305,  1387,  2469,  4016,  1370,  2036,  2681,
    1387,  2010,  2684,  2685,   480,   722,  2684,  2685,  1227,  3105,
    1229,   373,  4032,   774,  5070,  1388,  1389,   266,  2492,     9,
      10,  1387,  4042,  1317,  1318,  1384,  1954,  2809,  1387,     9,
      10,  1264,   350,  1387,   271,  1408,  5045,   305,  3134,  2829,
    4060,  2642,  1275,   774,  1417,  1418,  4264,  2648,  1387,  3480,
    2786,    92,  1425,  1426,   305,   468,  1429,  3963,  3037,  3963,
    2796,   755,  2116,  2117,   497,   611,  1439,  5132,  3988,  3989,
    3990,  3991,    32,  1446,    34,  1448,   352,  2070,  1297,   188,
     286,     9,    10,  3298,   705,  1458,  4414,   332,   709,     9,
      10,  1464,   477,  3071,   761,  1468,  1469,   305,   417,     9,
      10,   573,  4430,  4431,  5113,   772,  3060,   774,  5117,   737,
       9,    10,  3327,   113,  2118,   779,   722,   565,     9,    10,
    2156,  1494,   404,  2156,  1497,  2118,   488,  5057,  2070,   438,
     183,   647,   185,   282,   761,   680,   651,  3157,   595,  1576,
     322,   526,  3036,  1516,   283,   772,    61,   774,   483,  3066,
     348,  2156,  5106,    92,   755,  5109,  5110,  2156,   307,  3042,
    3043,     9,    10,  2156,   667,  4616,    28,   373,  1541,  4620,
    3996,     9,    10,   680,   252,  3390,  2118,  2181,   779,  2739,
    3395,   696,  1691,   465,     9,    10,   286,  2180,  2181,   774,
     772,   271,  1141,   183,   779,   185,  4414,    57,  2183,     9,
      10,   109,   110,   183,   390,   185,   294,   575,   438,  1568,
    1576,   298,  4430,  4431,  2156,   585,   561,  1576,   148,  1728,
    2848,   404,   774,  5288,   565,    80,  2515,   466,  2517,    89,
     391,   483,   477,   565,  4805,   166,     9,    10,  2180,  2181,
     280,  3494,  2531,   561,   104,   365,   176,  3500,  2257,  2258,
     345,  2475,   305,  3506,   771,  2544,  2545,  1766,  4500,  4501,
    4502,   774,   695,   183,  5273,   185,   191,   680,  5281,     0,
    5283,  1644,  3408,   183,   746,   185,  4789,   355,   565,   204,
    1653,   526,   488,   774,   183,   285,   185,  2296,   148,   737,
    1701,  1664,   183,    98,   185,  3249,  3160,     9,    10,   608,
     498,  1250,  1675,   774,   413,  2402,  1255,    92,   238,  1796,
     351,  1798,  1799,  1800,  1801,   305,   176,    57,  1691,   564,
    5376,  1808,   571,  5253,  5278,   305,   774,   696,   774,  1688,
    1861,  3416,   755,   373,  1688,   183,   585,   185,  1825,   264,
    2349,  5304,   696,   451,  3410,   183,   755,   185,    63,    89,
     755,   322,     9,    10,  2363,  1728,   779,  1730,   183,   678,
     185,   223,   301,  2816,   104,   150,   735,  4529,   463,   608,
     779,   301,    49,   183,   779,   185,   777,   305,   608,  5415,
    1753,   735,   774,  1756,  1757,   305,  1335,     9,    10,   774,
     724,  5404,   352,  1766,  1767,   305,   737,   438,  1907,   440,
     561,   570,  4973,  1776,   119,   737,   305,   485,   148,    73,
     183,   779,   185,   344,   305,  5122,   276,  1790,  1791,   728,
       9,    10,    63,  1796,  1797,  1798,  1799,  1800,  1801,  1802,
    1803,  1804,  1963,  1964,   219,  1808,   176,   682,  1947,   570,
    5446,  5012,   774,     9,    10,  1954,   486,  1956,   448,  2458,
     737,  1824,  1825,  2489,  1827,   210,  2489,   305,   210,  1408,
     596,   376,   774,   378,   447,   373,  5429,   305,   459,  1418,
    3387,   183,   443,   185,   582,    92,  1849,  1426,   119,    33,
     305,   559,   602,  3156,  2489,    83,  1995,  1860,   634,   530,
    2489,   501,   737,  3685,  3687,   305,  2489,  1446,   728,  1448,
     415,  4388,   663,   145,    12,   220,   774,   498,   755,   715,
     659,  4382,  4383,    57,    18,   300,     9,    10,   233,  2447,
    1739,  2447,   120,   774,     9,    10,   183,   452,   185,   444,
    3203,  2040,   305,  3224,  1907,   545,   276,    91,     9,    10,
    3224,   951,   952,   953,   774,  2642,   301,  2489,  1921,  2603,
     645,  2648,   660,  1926,  2558,  3651,  3652,    65,   324,  4446,
    2822,   183,  3298,   185,   772,  2558,  2663,   608,   283,   532,
    3666,   755,   446,   237,  1947,   290,   696,   409,  4498,   186,
     488,  1954,  1955,  1956,   416,  2594,   301,  2596,  1961,  2587,
    4610,   711,  2710,   305,   183,  3277,   185,    63,   122,  4595,
     104,   105,  1012,  1976,   148,   774,     9,    10,   360,   687,
    3825,  1830,   595,  2875,  1987,  1988,  2558,   183,    36,   185,
    3599,  2634,  1995,    61,  2637,  3099,  3100,  3409,  2641,   519,
     329,  2669,   176,   779,   587,  3088,  2883,  2884,  2885,   281,
    2733,  5647,   283,   774,  3434,  3435,  3436,  3437,   305,   203,
    3124,  3104,  3253,   119,  3390,  4897,  3257,  4653,   113,  3395,
     477,  5674,  5675,   654,  5235,   580,    61,  2040,  2786,   747,
     680,  4999,  2681,    91,   332,  2684,  2685,  2686,  2796,  1898,
     204,   279,    18,   305,     9,    10,   452,     9,    10,  2062,
     183,   396,   185,   398,    15,  1644,   114,     6,   183,  5637,
     185,   616,     9,    10,  1653,  1924,   139,   314,  2081,    99,
    2807,   129,   183,    99,   185,  1664,   305,   607,   523,   524,
     594,   774,   527,   528,   529,  2098,   280,  2100,   427,  3411,
     683,  2104,   276,  3411,   351,   142,  2829,   175,   701,   305,
    3413,   127,   111,  2116,  2117,     9,    10,   564,  3963,  4002,
    2123,  4004,    57,  4006,   220,  4008,   719,  2130,  2131,    68,
    2133,  2134,   266,  4016,   111,   220,  5337,   233,   104,   105,
    4023,   661,  4025,  3637,  3071,  2148,     9,    10,  2151,  4032,
     183,  4999,   185,   736,   774,   203,     9,    10,  2161,  4042,
     467,   170,   171,  4046,   774,  2168,     9,    10,   184,  4052,
       9,    10,   403,   124,  1753,  2178,  2179,  4060,  4061,  4062,
    4063,  4064,   305,   298,    94,  3039,  5034,   283,   139,   477,
     305,   438,   229,   440,   290,   755,   772,  2046,   774,  2822,
     760,   761,   590,   266,   305,   301,  2840,  4090,  2874,     9,
      10,  2874,   122,   148,    81,  5527,  5528,  2840,  1797,  5582,
    5788,  5789,  5585,  1802,   774,  1804,   203,   403,   183,    96,
     185,   183,  2221,   185,   774,   682,   299,  2221,   526,  2874,
    4741,   176,  4743,   772,   755,  2874,   183,    83,   185,   480,
    2822,  2874,  2875,   774,  2415,  2813,    92,  2813,   125,     6,
    2883,  2884,  2885,   779,   131,   216,   291,   292,  2840,  4786,
    1849,   578,   305,   590,  3166,  5773,  4777,  2902,   585,  3171,
     668,  1860,   772,   530,   120,  4802,   593,   298,  2913,   183,
     737,   185,   443,   715,   207,  5793,   774,     9,    10,  5500,
     266,   168,  2874,  2875,   140,     6,   774,   266,  2447,   145,
     715,  2883,  2884,  2885,   220,  2382,   229,     9,    10,   774,
     183,    68,   185,   371,  4841,  2328,  4843,  2466,     9,    10,
     183,  2334,   185,    99,   774,   715,     9,    10,   621,   490,
     183,   276,   185,   450,   183,  2970,   185,  2350,   184,  3089,
     305,   668,   148,   305,     6,   652,  4857,   779,  1398,   666,
    5723,   608,  1109,     6,  3030,   390,  3089,  3030,   305,   772,
     705,   668,    79,   708,   779,    82,  3001,   484,   675,     6,
     176,  5007,  1961,   183,    11,   185,  2382,  2504,    15,   114,
    1137,   771,   675,  2382,  5686,  3030,    99,  1976,     6,  2516,
    5553,  3030,   772,  5685,   129,     9,    10,  3030,  1987,  1988,
     561,   305,     9,    10,    11,  3054,    68,   828,   566,   567,
     727,   772,     6,   774,  2563,    68,   771,  4250,  3053,   761,
     772,  4254,  3071,   844,  2437,  2438,  2439,  5590,  5591,   204,
     772,   466,   305,   279,  2447,   652,     9,    10,  2451,  2452,
    2453,  2454,   305,   560,  2443,   191,  2459,  2460,  3030,  2462,
      68,   668,   305,  2466,    93,  4172,   305,    94,   204,  4176,
    3138,   183,  3138,   185,   181,  3138,  4568,     9,    10,    57,
       9,    10,   111,  2062,    68,   772,   251,    30,  5701,   624,
      96,   183,    35,   185,  4586,   643,  3677,  2500,  4590,  4591,
     635,  2504,   183,  3138,   185,   305,     9,    10,   273,  3138,
     183,    89,   185,  2516,    26,  3138,  2633,  5335,  4239,    35,
     772,   253,  2639,  2640,   122,   131,  3253,   774,   264,   771,
    3257,    47,  2671,   265,   641,  5688,  3717,   779,   586,  5752,
    2543,   501,  5755,  3166,  3627,   772,  3438,   774,  3171,    17,
    3298,  2130,  2131,   772,  2133,  2134,  2559,  2560,   265,   729,
    2563,  2564,  2565,   237,    32,  3985,  3138,     9,    10,  5195,
     148,  4025,  2151,  5786,     9,    10,   772,  5715,  5716,   183,
    3684,   185,  2161,   151,     9,    10,   183,  4440,   185,  2592,
    4103,  4104,  4445,   305,  3166,  3487,  2599,  3963,   176,  3171,
    2603,   898,   662,   900,   901,   902,  2530,  4061,  4062,   771,
     907,   671,   909,   305,     9,    10,   117,   677,  4131,  4166,
     183,   330,   185,   124,   305,  2628,  2629,  2630,  2631,  5767,
    2633,   504,   305,   506,   507,  2638,  2639,  2640,  3277,  2642,
    2489,   342,  3390,  4156,  4682,  2648,   694,  3395,   521,   772,
     772,   183,   774,   185,   183,    10,   185,  4204,     9,    10,
    2663,   426,  2511,  3966,  2667,     9,    10,   286,  2671,  2672,
    2519,   772,     9,    10,  2813,   771,  2815,     9,    10,   761,
     183,  3408,   185,     9,    10,   386,  4199,   388,   189,   407,
     772,   898,    92,   900,   901,   902,   771,   111,   276,  1286,
     907,   305,   909,    94,   779,  1292,  1293,   737,   305,     9,
      10,  3434,  3435,  3436,  3437,   662,   452,     9,    10,   662,
       9,    10,   264,  3357,     9,    10,   116,  4610,    94,   640,
    2733,  1411,  1412,  4257,  3357,   449,  2739,   127,  2587,   772,
     140,   183,   305,   185,   134,   145,   619,   620,   183,  2328,
     185,   772,  2601,   774,  4248,  2334,   778,   761,   183,  2898,
     185,  2900,  3681,   760,   761,  1445,     9,    10,   772,   772,
     774,  1369,  3411,   305,  1372,  1373,   305,    92,    93,     9,
      10,   482,     9,    10,   184,  3357,   697,   655,   183,   700,
     185,   114,     9,    10,   114,    57,  2799,   772,  2801,   774,
       9,    10,   305,   114,  2807,  1489,  1490,  2810,   299,  1493,
    2813,  3915,  2815,  2816,   779,  3438,   727,   772,    76,    77,
     772,     9,    10,   772,   735,   774,  2829,    89,   726,  2832,
     531,    84,   183,  5843,   185,   772,   264,   443,   228,   183,
     650,   185,   104,     9,    10,  1142,   735,  4670,  2697,     9,
      10,   183,  2841,   185,   426,  2704,  2705,   183,   251,   185,
    2439,    92,    93,   305,  3487,    76,  3438,     9,    10,   259,
     305,   771,  2451,  2452,  2453,  2454,     5,    17,   772,   580,
     305,     9,    10,   183,   490,   185,   148,    94,   755,   756,
     757,   183,    32,   185,   183,  2898,   185,  2900,   183,   271,
     185,   111,  4994,  3643,  3644,  3645,  3646,  4401,   682,   772,
     305,    57,   109,   110,   176,  3487,   772,   986,   774,   772,
    3643,  3644,  3645,  3646,  1668,  1669,   506,   507,   124,   772,
       9,    10,   600,   772,  3573,  1142,   772,  1006,   640,   771,
     183,   521,   185,    89,  1013,  1014,  4249,  4471,   554,    10,
    4676,  4677,   466,   183,   305,   185,   183,   772,   185,   774,
     772,   305,   774,   772,  2543,   774,   183,   696,   185,   670,
    3595,   179,   772,   305,   183,   772,   185,   774,  3045,   305,
      32,   772,   772,   774,   774,   163,  2565,  3727,   772,   577,
     774,   692,   598,   332,   772,   183,   774,   185,   271,   179,
     135,   136,   148,  3164,  3727,   305,    58,   294,    69,   296,
     774,  3650,  3015,   305,   276,    36,   305,   183,    70,   185,
     305,   417,   113,   183,  5041,   185,  3753,  3754,   347,   778,
     176,   209,   338,   781,   373,  3927,    10,   771,    90,   619,
     620,   183,   196,   185,     9,    10,  3049,  3036,   772,  3045,
     774,   772,  2631,   774,   771,   183,  3045,   185,   771,  2638,
     772,   771,   305,  2642,   729,  4246,  3705,   771,   729,  2648,
      91,   123,  3075,   251,  3077,   305,    69,  4489,   305,  5171,
     772,  5173,  3078,   771,  2663,  3088,  3089,  3090,   305,    34,
     772,   772,   774,   114,  3083,    69,   305,   165,   233,   772,
     439,  3104,   237,   164,   183,   771,   185,  3103,   129,    69,
     772,  4215,   774,   772,  3103,   774,   772,   305,   774,  3103,
    3237,   182,   771,  3284,  3263,   772,   772,   774,   774,   771,
     276,  4235,  4236,   771,  3103,  3138,   771,  1434,   477,   305,
    3103,   771,   190,  1547,  1548,   305,  3285,  3286,   771,   755,
     756,   757,  1556,   293,   294,   290,   772,  3160,   774,   772,
     212,   774,   772,   305,   774,  4540,   301,   190,   772,    15,
       6,   164,  4547,   190,   195,  4669,    49,   305,   239,   240,
     771,  3030,   203,    17,  1588,   771,  1590,   526,   328,   182,
     164,   190,   771,     9,    10,   373,  3335,   771,    32,  4076,
     771,   771,  1606,  1607,   164,  1609,   346,   385,   182,   772,
      57,   771,   352,  1617,  1618,  3963,  5233,  1621,   183,   558,
     185,  4596,   182,    69,    58,   564,   305,  1434,  2807,   399,
     282,  2810,    68,   772,  3237,   774,    70,   771,   378,  3242,
     772,   114,    89,   772,   771,  4528,   239,   240,   742,   772,
    3253,   774,   771,  2832,  3257,   266,    90,   104,   727,   728,
    3263,   730,  3985,   732,   771,   239,   240,   771,  3271,   772,
     772,   129,   774,  5322,   771,   771,  4823,    83,   124,   239,
     240,   771,  3285,  3286,   771,  4568,    92,   121,  5011,   123,
     523,   524,   771,   139,   527,   528,   529,   779,   772,   469,
     774,   148,   196,  4586,  3927,  4011,  4012,  4590,  4591,  4015,
    4894,   489,   170,   171,   120,   772,  4022,   774,   164,    49,
     196,   772,  4028,   774,   170,   171,   772,   771,   774,   176,
     772,   204,  3335,    18,   140,   771,   182,   772,   417,   145,
     305,   771,   771,   682,   396,   203,   398,   772,  3351,  4385,
     371,  4387,   771,   771,  4390,  3927,   772,  4393,   774,    57,
    4396,  4397,  4875,   772,   534,   774,   536,   183,   771,   185,
     216,   541,    57,   771,   771,  3800,  3801,   772,   184,  3804,
    3805,   755,   771,   561,   771,  3810,  3811,  2160,   772,    69,
     774,    89,   771,   239,   240,   771,  4432,    69,   737,  4010,
     273,    86,  4013,   771,    89,  3408,    69,   774,   772,  4020,
     774,  4515,   771,   249,   250,   772,   122,   774,    69,   104,
     105,   772,   280,   259,  4035,  3428,   771,   179,   772,   276,
    3433,  3434,  3435,  3436,  3437,   771,   606,  3440,   771,    94,
     772,  4075,   179,   772,   124,   774,   772,   412,   282,   771,
     148,  3612,  4075,  4076,   772,   772,   774,   774,   771,  4012,
     294,   124,  4015,   148,   771,  3314,  3315,  3316,  3317,  4022,
    3319,  3320,   772,   279,   204,  4028,  4216,  4217,   176,   649,
     772,   771,   167,   772,   164,   771,  5209,   772,  4113,   305,
     175,   176,   164,  4216,  4217,   772,  3075,   774,   550,   551,
     771,   164,   182,  4075,  4076,    69,  5523,   771,  5525,  5526,
     182,  3090,   772,   164,   774,   373,   771,  3366,  3367,   182,
    3369,   771,  3371,  3372,  3373,  3374,  3375,  3376,  3377,   772,
    3379,   182,   771,  3382,   264,   577,   772,  3386,   774,   771,
     237,   779,   772,   273,   772,   772,   774,   772,   420,   774,
     779,     9,    10,   426,   772,   772,   774,   771,   771,   239,
     240,  4186,   396,   772,   398,   586,   771,   239,   240,   739,
    4238,  3574,  4238,    11,   680,  4238,   239,   240,   276,   452,
     750,   266,   722,   425,   772,   315,   771,   771,   239,   240,
     275,   276,   277,   772,   771,   774,    34,   771,   338,   339,
     164,   140,   771,  4238,   771,   477,   772,  5624,  5625,  4238,
    3613,  5628,   772,   662,   772,  4238,   774,   772,   182,   774,
     271,   771,  3739,    61,  3627,    92,   771,   500,   486,   465,
     772,  5125,   771,   771,  3637,   375,   771,  5221,   771,   771,
    3643,  3644,  3645,  3646,   772,  3648,   772,  3636,   774,  5364,
     771,   771,  3636,  5368,   779,   772,   708,   774,   772,   771,
     774,  3664,  3665,  3242,   771,  4977,  4238,     9,    10,  4977,
     771,   109,   110,   694,  3253,   239,   240,   417,  3257,   772,
     772,   774,   774,  5700,   772,   772,   774,   774,  4580,   771,
    3693,   129,   564,   771,  3697,   771,   426,   758,   759,   760,
     761,   762,   763,   764,   765,   390,   772,   771,   774,  5084,
    5085,  4994,  5087,   398,   772,   771,   774,   551,   772,   114,
     774,  4389,   452,   596,  3727,   183,   771,   185,   771,  4372,
    3733,  3734,   170,   171,  5318,  5437,  3739,   175,  4381,   771,
     771,   179,   771,   771,   771,   771,   771,   771,  5471,   771,
    3753,  3754,   424,   771,   680,  4791,   771,  3760,   109,   110,
     779,   771,   696,   779,   637,   203,   759,   760,   761,   762,
     763,   764,   765,  2070,   779,   779,     9,    10,   129,   779,
     668,   779,   655,  5498,   758,   759,   760,   761,   762,   763,
     764,   765,   779,   501,   419,    92,   774,  5172,   774,  3648,
     760,   761,   762,   763,   764,   765,    34,   774,   575,   267,
     682,  3977,   347,   774,    92,   381,   774,   774,  4922,   170,
     171,  2118,   373,   669,   697,   659,   572,   700,  5651,  3408,
    4536,   691,  2605,    61,   755,   671,   672,   673,   674,    80,
     735,   183,   280,   185,   452,   452,    93,   305,   195,   774,
    5397,   266,   203,  4559,   727,  2259,   596,  4563,  2262,  2156,
      99,  3440,   735,  2070,  4570,   737,   304,   283,   124,  4503,
      26,    61,   395,   613,   708,  3916,  2280,     9,    10,    11,
    4503,   109,   110,  2180,  2181,     5,   576,  2291,  5171,   780,
    5173,  5266,  3895,  5268,  5269,   333,  4562,   731,   638,  4562,
     394,   129,   774,  4514,     4,  4516,  2679,  3910,   735,   417,
      14,  2118,   758,   759,   760,   761,   762,   763,   764,   765,
      92,   651,  4533,   774,   779,   267,   477,  4562,   420,   280,
      84,  4503,  4543,  4562,  5481,   373,   779,   412,   678,  4562,
     636,   696,   170,   171,  4555,   111,   772,   175,   771,  2156,
     183,   179,   185,   304,   470,   498,   554,  4580,  3961,   298,
    4571,    94,  3965,   305,   122,  3968,   298,   771,  5462,   150,
     778,   332,   774,  2180,  2181,   203,   771,     6,   373,   772,
     417,  3977,  3985,  4536,   772,   380,   772,    68,  3977,   323,
    4562,   774,   779,  3977,   772,   772,   772,   727,   641,   779,
     395,    92,    92,   772,   772,   735,  4559,   558,  4580,   772,
    4563,  4903,   771,   564,   779,   139,   454,  4570,   771,  5842,
     705,    99,   373,   708,   774,   420,  5338,  5339,   271,   774,
    5338,  5339,   717,   781,   267,   774,  4675,    92,   762,   774,
      34,   779,   774,    34,   680,  5592,   762,   124,   486,   481,
     441,   183,   280,   185,   693,    92,     9,    10,   425,   420,
     774,   680,   772,    33,   615,   774,    36,   771,  4071,   771,
      61,   124,   305,   780,  5658,   774,   304,   195,   758,   759,
     760,   761,   762,   763,   764,   765,   758,   759,   760,   761,
     762,   763,   764,   765,   217,   758,   759,   760,   761,   762,
     763,   764,   765,   501,   350,   333,   774,   758,   759,   760,
     761,   762,   763,   764,   765,   501,   477,   501,   109,   110,
     501,    91,     9,    10,    11,    95,   347,   501,   501,   774,
     525,   682,   755,    84,   155,   486,  4779,   668,   129,  4782,
    4783,    94,    42,   538,   114,   373,     9,    10,     6,   271,
     378,   665,   588,   735,  3733,  3734,  5650,   772,   772,   129,
     772,  4164,   772,   558,   127,   526,  5713,    42,   772,  5061,
     721,   127,   187,   305,  3753,  3754,   771,   774,  4181,   170,
     171,    26,  4343,   779,   175,   103,   737,   429,   179,  4192,
      57,   229,   779,  5777,   758,   759,   760,   761,   762,   763,
     764,   765,  4205,   564,   657,     9,    10,  4210,  4211,   408,
     771,   471,   203,  4216,  4217,   653,   116,   471,  4357,  4222,
     774,   587,    89,     9,    10,   195,   772,   127,    29,   774,
     183,    94,   185,   203,   134,  4238,  4239,   104,   298,   726,
     285,   116,   109,   110,   695,  4248,   774,  3020,   200,   184,
    4392,    94,   127,  4887,   179,  4258,   774,   774,   486,   134,
     771,  2558,   271,  5155,  4887,   115,   166,   122,  4257,  4935,
     642,    59,  4935,   772,   244,  5499,   772,   772,  5502,   179,
    4903,   148,  2489,   417,   772,   762,  4425,   682,   772,   280,
      94,   166,  4295,  5185,   772,  4298,   183,  4300,   185,   772,
    4935,    94,   697,   771,   179,   743,  4935,   761,    94,   176,
     280,   772,  4935,   304,   774,  4887,   772,   772,   238,  5813,
     183,   682,   185,   772,   772,   772,   347,  4330,   228,   772,
     772,  4903,  5436,  5827,   774,   774,  4339,   772,  4977,  5833,
     774,   772,   333,  4192,   772,  5839,   779,  4464,   774,   772,
     772,  2558,   305,   228,  4357,   772,   765,   771,   771,   259,
     349,   771,   195,  4935,   771,   365,    49,   356,  4371,   772,
     583,   266,   393,  4222,   266,  4386,   737,   755,   266,   183,
    5604,   185,   373,   372,   259,  4388,   286,  5611,   271,  4400,
    4529,    98,   743,   382,   383,   384,  4399,   183,  4401,   185,
      94,   371,    92,   392,  4407,   774,  4417,    92,   495,   276,
    4413,   774,   771,   774,   771,   779,   774,   779,   305,  5311,
     774,    94,  4425,  4426,  4435,   653,  4437,  4438,   772,   779,
    5805,   607,    33,   774,   237,    36,  4285,   772,  5061,    62,
       6,   774,   305,  4446,   662,   774,   725,  3220,   774,  4452,
    4453,    92,   569,   127,   475,  4458,  5560,   127,  5335,   741,
    5103,  4464,   429,   539,   771,   549,  4469,   251,  5572,   251,
      32,   650,    34,   251,   251,   251,   301,   179,   771,  5703,
    5704,    92,  4471,   755,   267,    15,   755,    42,    18,  5061,
      91,   755,    49,   755,    95,   486,   755,    67,   755,    61,
     755,   305,   755,  5607,   755,   755,  4355,  4496,   774,   726,
     755,   755,  4496,   114,   500,   743,   537,   755,   755,   305,
     755,   204,   286,   755,   755,  2822,  4529,    57,   129,   755,
     755,   755,  5155,   755,   569,   556,   557,   140,    95,   755,
     561,   562,   563,  2840,   533,  3318,   755,   109,   110,   755,
     779,   774,   114,    72,  4557,   320,    86,   114,   547,    89,
     779,   116,  5185,   271,   779,  4704,   271,   271,   251,  4418,
    4419,   271,   127,   774,   104,   105,   746,  2874,  2875,   134,
     379,   498,   122,  5155,   778,  4434,  2883,  2884,  2885,  3362,
     772,  3364,  3365,   163,   121,   121,   779,  3370,   772,   772,
     170,   171,   203,   772,   772,  3378,   190,    26,   629,  4458,
    3383,   166,   779,  5185,   779,  2822,   586,   772,   148,   761,
     761,   772,   772,   771,   179,   774,   771,   689,   325,   271,
     192,   332,   301,  2840,   577,    94,    94,   167,    94,   209,
      94,   779,   325,   244,   633,   175,   176,   266,   266,   483,
    4789,   210,   779,   774,  4657,   761,   176,   678,    11,   648,
     771,   755,   653,   755,   774,   535,  4669,  2874,  2875,   320,
      91,   179,   373,   228,   179,   771,  2883,  2884,  2885,   280,
      10,   251,   771,  4724,  5411,   271,   127,   244,  5311,   127,
    5360,  4694,   254,   255,   256,   774,   685,   772,   266,  5338,
    5339,  4704,   395,   395,   259,  4708,   266,   264,  4521,   318,
     699,  5438,  5335,  4716,   266,   218,  4295,   279,    11,   420,
     403,  4300,   771,   280,   694,  4766,  4539,    42,  4731,   771,
    4771,   771,  5836,    99,   224,  4548,   266,   762,   439,  5311,
     779,  4554,   304,   426,    92,   275,   276,   277,   772,   577,
     271,  4564,   743,   179,   762,   113,   774,   412,  4769,  4572,
    4573,   778,   461,  5335,   771,   771,   771,    56,   325,   452,
     371,   333,   123,   335,   123,   772,   477,  4780,   176,   772,
     772,   779,  4785,  4786,  4787,   772,  4789,  4790,   771,  4792,
     352,   779,   354,   774,  4797,  4798,   774,   772,   184,  4802,
     772,   116,    26,   373,   772,   771,   755,   771,   219,   774,
     772,   373,   127,    94,    94,   385,   210,   500,   380,   134,
     779,   300,   772,  3030,  5494,   526,   772,   774,  4407,   774,
     772,   771,  5559,   395,  4837,   771,   210,   771,  4841,   755,
    4843,  3138,   774,   405,   395,   179,   403,   771,     9,    10,
     546,   166,   286,   286,   365,    11,   771,   558,   420,  4862,
     390,   774,  4865,   564,   772,  4868,   266,   774,   398,  3166,
     585,   185,   371,   195,  3171,   195,   271,   408,   195,    26,
     733,   128,  4885,  4732,   195,   408,  5509,   697,   128,   195,
     697,  2112,    53,    54,    55,    56,   195,   349,   584,   195,
      53,    54,    55,    56,   356,  5573,  4909,   195,   195,   271,
      11,   429,    98,   228,  4955,   493,   478,   229,   414,   489,
     372,   378,   771,   202,   771,   569,   488,    61,    92,    92,
     382,   383,   384,   176,   772,    26,   772,  5509,  5830,   495,
     392,   235,   373,   772,   259,   106,   107,   108,   636,   301,
    4799,   184,  4955,   106,   107,   108,  4959,   774,    26,  3166,
     772,   772,   141,   525,  3171,   774,   195,   772,   651,   437,
     772,   145,   655,   771,   774,   745,   538,  4826,   774,   139,
     195,   682,   179,    11,   668,   586,   652,   772,   654,   420,
     142,   561,   771,   176,   286,   286,   176,   436,   733,   160,
     161,   111,   668,   129,   733,   203,   215,   160,   161,   675,
     676,     7,   779,   179,   697,  5018,   682,   579,   597,  5022,
     179,   476,   183,   585,   185,   267,   373,    94,  5031,   577,
     429,  4880,   301,   122,   700,    17,   737,  5040,  5041,  5042,
     378,   296,  5045,   296,   727,    41,   477,   569,   771,   214,
     772,   772,   735,   772,  5057,   772,   774,   140,   772,   772,
    3357,   489,   539,   607,  3837,  3838,  3839,    63,   123,    32,
      26,   232,   677,   774,  5077,    10,  5079,    73,   647,   232,
     637,   533,   644,   772,   779,   772,    11,    26,  5249,   651,
      17,   772,   774,   694,   651,   547,  5099,   772,   655,    79,
     772,   772,    98,  5106,   771,    26,  5109,  5110,   772,  5779,
    5113,   774,   771,   771,  5117,   771,  5119,    26,   114,   771,
     682,   771,  5125,   119,    92,  5128,   771,   558,   129,   129,
      92,  5134,   129,   564,   774,   697,   698,  4716,   771,   301,
     772,  3438,   377,   700,   305,   306,   774,   661,   710,   145,
    3357,   412,   818,   306,   129,   301,  3929,  3930,   264,  3932,
     282,   755,   307,  5166,   779,   176,    92,   774,    92,   539,
     727,   435,   772,   772,  5177,   705,  5179,   772,   708,   771,
     576,   409,   109,   110,   615,   772,   771,   717,    11,   772,
    3487,    67,   774,   179,   634,    92,   648,   774,    26,    26,
      26,   266,   176,    84,    84,   286,   264,  5830,   771,    33,
     577,   283,   774,   450,   779,   176,   595,   642,   772,   215,
     430,   887,   772,   772,   595,   771,   353,   569,   771,   771,
    5233,  3438,   898,   685,   900,   901,   902,   233,   399,   771,
     774,   907,   399,   909,   772,   241,   399,   699,    61,    61,
    5253,   682,   153,  5242,   677,   772,   577,    33,  5830,    33,
      10,   688,   772,   779,   176,   304,   703,   569,    26,    26,
    5273,   771,   122,   771,   940,  5278,   771,   273,   771,   945,
    3487,   179,   771,  5294,   129,   694,  4865,   283,   284,  5330,
     721,   733,   129,   175,  5297,   283,   326,    61,  5437,  5302,
      11,   418,   577,   577,   771,  5308,   737,   642,   469,   975,
     408,   408,   420,  5316,  5317,   779,   469,   172,   771,   985,
     689,   772,   729,   772,   774,   252,   771,  5330,   771,   581,
     774,    92,   412,   779,   145,   771,  5377,   264,   325,   771,
     319,   771,   771,   774,   779,   179,   179,   283,   772,  5352,
     772,   771,   229,    63,   772,   471,   772,   774,   772,    75,
      26,   113,  5365,   771,   642,   237,  5369,   176,   774,   914,
    3103,  3384,  2576,   534,  4893,   536,  4889,  4891,  1229,  5382,
     541,   534,  4155,   536,  3233,  5362,  5066,  3821,   541,  5374,
    5693,  5507,   753,  1403,  4309,  4319,  5254,  5400,  4959,  4935,
    5245,  5177,  5330,  5192,  4177,  4577,  2596,  3705,  1074,  1075,
    1076,  1077,  1740,  2874,  5509,  3480,  3426,  2747,  4504,  4076,
    2180,  2179,  1088,  2049,  1444,  2182,   819,  2181,  2105,  5243,
     426,  5242,  5050,  3909,  5437,   431,  4809,  4201,  3347,  5016,
    4205,  4657,  2423,  5580,  5221,   606,   442,  5653,  5020,  5777,
    5732,  5494,  5779,   606,  5593,  4384,  2624,  3901,  5370,  5462,
    5673,  5464,  5529,  4452,  5045,  3910,  4772,  5716,  5529,  5559,
    2691,  2692,  5438,  4867,  4134,  4012,  1142,  4066,  5562,   406,
    5573,  3285,  4523,  3578,  4173,  4176,  4168,  2708,   649,  5751,
      90,    90,  5703,   420,  5704,   422,   649,  2718,  2719,  5279,
    5677,  5611,  5604,  5506,  5365,  4547,  3728,  5510,  4288,  3909,
    4448,  5514,  5515,  1243,  5301,  1936,  1422,  3217,  3212,  2739,
    5523,  5569,  5525,  5526,  2084,  5114,   453,  2439,  2565,   135,
    3997,  5692,  3440,  5529,  5673,  2847,  1384,  5540,  3036,   759,
    5529,   468,  1337,  3161,  3281,  1167,  1373,  3971,  3095,  4192,
    5553,  3612,  2969,  2965,  1582,  1730,  1672,  5082,  1988,  1983,
    2781,  2782,  2783,  2784,  1335,  1550,  5569,  1335,  4745,  1335,
    4251,  5514,  1335,  1335,   501,  4694,  5425,  5580,   739,  5515,
    1556,  1978,  2677,  3047,  2004,  3604,   739,  5166,  3273,   750,
    5593,  5730,   519,  4339,  3602,  1261,  4338,   750,  1264,  5471,
    5011,  5125,  4682,  5007,  1365,   601,  3277,  5028,  4343,  2671,
     765,  5614,   108,  2799,    90,    17,  5619,  1391,  1503,  1750,
    3083,  5624,  5625,  4669,  3311,  5628,   622,  4700,  5650,  2841,
    3927,   627,  4248,   679,   836,  4408,  4409,  4410,   837,  2098,
    2539,   676,  4415,  4416,  2540,  1816,  3155,  5650,  4421,  1387,
     676,   125,  2590,  5128,  5034,  1925,  4429,  4000,  4750,  5091,
    4433,  5775,   658,  5796,  5833,  5839,  1011,  2559,  4210,  3030,
    5673,  4444,  4238,   600,  3136,  2364,   675,   675,  5817,  5840,
     607,  2493,  3116,  3115,  5823,  5688,  1954,  2161,  1758,   672,
     617,  5694,  3836,  1499,   690,  2733,  3088,  5700,  4357,  3227,
    3428,  1149,  5163,   630,  5553,  3916,   713,   109,   110,  1282,
     114,    90,    90,    90,  5074,  5257,    -1,    -1,  5297,    -1,
    3927,    -1,    -1,    -1,    -1,    -1,    -1,  5730,    -1,    -1,
      -1,    -1,    -1,    -1,   661,    -1,    -1,   664,  5587,  5588,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5750,    -1,    -1,
      -1,    -1,  5601,   680,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1430,    -1,    -1,  1433,  1434,   696,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4075,  4076,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4577,    -1,    -1,    -1,    -1,    -1,
    5813,    -1,    -1,  5662,  5817,    -1,  5665,    -1,    -1,    -1,
    5823,    -1,    -1,    -1,  5827,    -1,    -1,    -1,    -1,    -1,
    5833,    -1,    -1,    -1,    -1,    -1,  5839,    -1,    -1,  5688,
    1506,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1532,    -1,  4075,  4076,
      -1,    -1,    -1,    -1,    71,    -1,    -1,  1543,  1544,    -1,
      -1,    -1,    -1,  1549,    -1,    -1,    -1,  1553,  1554,  1555,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1564,  1565,
      -1,    -1,    -1,    -1,  1570,    -1,  1572,  1573,  1574,  1575,
    1576,    -1,  1578,    -1,    -1,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1589,    -1,  1591,    -1,  5506,  1594,  1595,
      -1,  1597,  1598,  1599,    -1,  1601,  1602,  1603,    -1,    -1,
      -1,  4238,  1608,    -1,    -1,  1611,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1619,  1620,   152,  1622,  1623,  1624,    -1,
      -1,  1627,  1628,  1629,  1630,  1631,  1632,  1633,    -1,  1635,
    1636,  1637,  1638,  1639,  1640,    -1,  1642,  1643,    -1,  1645,
    1646,  1647,  1648,  1649,  1650,  1651,    -1,    -1,  1654,  1655,
    1656,  1657,    -1,  1659,  1660,  1661,    11,  1663,    -1,  1665,
      -1,  1667,    -1,    -1,   406,  1671,  1672,  1673,    -1,    -1,
    1676,  1677,  1678,  1679,  1680,    -1,  1682,    -1,   420,    -1,
     422,    -1,    -1,  1689,    -1,    -1,    -1,    42,    -1,    -1,
    1696,  1697,  1698,  1699,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1707,  1708,  1709,    -1,  1711,  1712,  1713,  1714,  1715,
    1716,   453,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,
      -1,    -1,    -1,  1729,    -1,    80,   468,    -1,    83,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,  3300,
    3301,    -1,  3303,  3304,    99,    -1,    -1,    -1,   103,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   113,   501,
      -1,   116,    -1,    -1,    -1,   120,    -1,   122,  1774,    -1,
      -1,    -1,   127,  1779,    -1,    -1,  4889,   519,  4891,   134,
    4893,    -1,    -1,  1789,    -1,   140,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   179,    -1,    -1,    -1,    -1,   184,
      -1,    -1,  3393,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4955,    -1,    -1,    -1,    -1,    -1,    -1,   204,
    1856,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,  4503,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,   617,  1882,    -1,  1884,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,   630,    -1,
      -1,    -1,  5005,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5014,    -1,    -1,   259,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1918,    -1,    -1,    -1,    -1,    -1,    -1,   661,
      -1,    -1,   664,    -1,   279,  4562,    -1,    -1,    -1,    -1,
     285,   286,    -1,    -1,    -1,   472,    -1,    -1,   680,    -1,
      -1,    -1,    -1,  4580,   299,    -1,   301,    -1,    -1,   304,
      -1,    -1,    -1,    -1,    -1,    -1,  4503,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   502,   503,    -1,   505,   506,
     507,   508,   509,    -1,   511,   512,   513,   514,   515,   516,
     517,   518,    -1,   520,   521,   522,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2001,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4562,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4580,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2070,    16,    17,    -1,    -1,    -1,
      -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,   619,   620,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   448,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,  2118,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2164,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,  2180,  2181,  2182,    -1,    -1,  2185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2193,  2194,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,    -1,   149,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,   158,   159,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5330,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4887,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   212,    -1,    -1,    -1,    -1,  4903,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2282,  2283,  2284,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
      -1,    -1,   243,  3854,    -1,    -1,  3857,    -1,  4935,  3860,
    3861,  3862,  3863,    -1,  3865,  3866,  3867,  3868,    -1,  3870,
    3871,    -1,  3873,    -1,    -1,    -1,  3877,   268,   269,   270,
    3881,  3882,  3883,  3884,    -1,  3886,  3887,    -1,    -1,    -1,
      -1,  3892,  3893,    -1,    -1,  3896,  3897,    -1,    -1,    -1,
    4887,    -1,   293,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2360,    -1,  4903,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2390,    -1,   741,  2393,  4935,  2395,
     341,    -1,   343,   344,    -1,  2401,    -1,  2403,  2404,    -1,
     755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   772,    -1,   774,
      -1,  2427,   777,   778,  5061,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2441,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   396,    -1,   398,    -1,    -1,
      -1,    -1,  2458,    -1,    -1,  2461,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2475,
     421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2489,  2490,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   455,   456,  2512,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5061,    -1,    -1,    -1,  5155,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   496,    -1,  2553,  5185,    -1,
      -1,    -1,  2558,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5683,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2590,    -1,    -1,    -1,    -1,    -1,
      -1,   542,   543,   544,    -1,    -1,    -1,    -1,    -1,   550,
     551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5155,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   567,   568,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5185,    -1,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   610,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2674,    -1,
      -1,    -1,    -1,    -1,  5311,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2688,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5335,    -1,
      -1,    -1,    16,    17,    -1,    -1,    -1,    -1,    22,    23,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2743,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,
      -1,   702,    -1,    -1,   705,    -1,    70,   708,    -1,    -1,
      -1,    -1,    -1,    -1,  5311,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,
     731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5335,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,  2822,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,  2840,   149,    -1,  4398,    -1,    -1,
      -1,    -1,    -1,   157,   158,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4420,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,  2874,  2875,
      -1,    -1,  5509,    -1,    -1,    -1,    -1,  2883,  2884,  2885,
      -1,    -1,    -1,    -1,  2890,    -1,    -1,  2893,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2902,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,  2911,    -1,  2913,    -1,  2915,
      -1,  2917,  2918,  2919,  2920,  2921,  2922,    -1,  2924,    -1,
      -1,    -1,    -1,   237,    -1,    -1,  2932,    -1,  2934,   243,
      -1,  2937,  2938,  2939,  2940,    -1,    -1,  2943,  2944,    -1,
      -1,  2947,    -1,  2949,    -1,  2951,    -1,  2953,    -1,    -1,
      -1,  2957,    -1,    -1,   268,   269,   270,    -1,    -1,  2965,
      -1,  2967,  5509,  2969,  2970,  2971,  2972,  2973,    -1,    -1,
    2976,  2977,  2978,    -1,  2980,    -1,    -1,  2983,    -1,   293,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2996,    -1,    -1,    -1,    -1,  3001,    -1,    -1,  3004,    -1,
    3006,  3007,  3008,    -1,    -1,  3011,    -1,    -1,    -1,    -1,
       5,  3017,     7,     8,    -1,    -1,  3022,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3030,  3031,    -1,   341,    -1,   343,
     344,  3037,    -1,  3039,    -1,    -1,    31,    -1,    33,  3045,
      -1,    -1,    -1,    -1,    39,   359,    -1,  3053,    -1,  3055,
      -1,    -1,    -1,    -1,  3060,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,   396,    -1,   398,    80,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3105,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3134,    -1,
     444,    -1,  3138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   455,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3165,
    3166,    -1,    -1,    -1,    -1,  3171,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,  3185,
      -1,    -1,   496,    -1,    -1,   180,    -1,    -1,    -1,   184,
      -1,    -1,    -1,  5830,    -1,    -1,    -1,   192,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,   542,   543,
     544,    -1,    -1,    -1,    -1,    -1,   550,   551,    -1,    -1,
      -1,    -1,    -1,  3249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   567,   568,    -1,    -1,    -1,    -1,   254,
     255,   256,    -1,    -1,  3270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,    -1,    -1,  5830,   279,    -1,    -1,    -1,    -1,    -1,
      -1,  3297,    -1,    -1,    -1,    -1,   610,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   304,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3323,  3324,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   642,    -1,
     325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,    -1,
     335,  3347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3357,  3358,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      -1,    -1,    -1,    -1,    -1,    -1,   361,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,    -1,
      -1,    -1,  3388,  3389,    -1,   380,    -1,    -1,   702,    -1,
      -1,   705,    -1,    -1,   708,    -1,    -1,    -1,    -1,    -1,
     395,   715,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     405,    -1,    -1,    -1,   409,   410,    -1,   731,    -1,  3425,
      -1,   416,    -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,
      -1,    -1,  3438,   428,    -1,    -1,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   448,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3478,    -1,    -1,    -1,    -1,    -1,    -1,   474,
      -1,  3487,  3488,   478,    -1,  3491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3515,
    3516,    -1,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     525,    -1,    27,  3539,    29,  3541,    31,  3543,    33,  3545,
      -1,    -1,    -1,   538,    -1,   540,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3567,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,  3588,  3589,   579,    80,    -1,    -1,    -1,  3595,
     585,    -1,    -1,  3599,    -1,    -1,    -1,    92,  3604,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3617,    -1,    -1,    -1,    -1,   111,   612,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,   623,   624,
     625,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3651,  3652,    -1,   143,   644,
     145,    -1,    -1,    -1,    -1,   150,   651,    -1,    -1,    -1,
    3666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3687,    -1,    -1,    -1,   180,    -1,   682,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
     195,    -1,   697,   698,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,   710,    -1,    -1,   713,    -1,
      -1,    -1,   217,   218,   219,   220,    -1,   222,    -1,  3735,
    3736,    -1,   227,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,   237,     6,    -1,    -1,   241,   242,    -1,    -1,
      -1,  3757,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,  3767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,  3779,    -1,  3781,    -1,    40,    41,    -1,
      -1,    -1,    -1,   778,    -1,    -1,   281,    50,   283,    -1,
     285,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    65,    66,    -1,   300,   301,    -1,    -1,    -1,
      -1,    -1,    -1,   308,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   337,   338,    -1,   340,   109,   110,    -1,    -1,
      -1,   114,   347,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      -1,    -1,    -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3901,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   412,    -1,    -1,
      -1,  3927,    -1,    -1,    -1,  5486,  5487,    -1,  5489,  5490,
    5491,  5492,    -1,    -1,    -1,    -1,   431,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     445,    -1,    -1,    -1,    -1,    -1,  3962,    -1,    -1,    -1,
      -1,    -1,    -1,   458,    -1,    -1,   461,    -1,    -1,   464,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5586,    -1,    -1,  5589,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5597,    -1,    -1,    -1,
      -1,  5602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,  4075,
    4076,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   352,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     363,   596,    -1,    -1,  4110,  4111,    -1,  4113,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4122,    -1,  4124,    -1,
      -1,  4127,    -1,    -1,   387,    -1,    -1,    -1,    -1,    -1,
     625,    -1,    -1,   628,  4140,    -1,  4142,    -1,  4144,    -1,
    4146,    -1,    -1,   638,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   646,    -1,  4159,  4160,    -1,   419,   420,    -1,    -1,
     423,    -1,   425,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4186,    -1,    -1,   678,    -1,    -1,   681,    -1,   451,   452,
      -1,    -1,    -1,    -1,    -1,    -1,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   654,   713,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   723,    -1,
      -1,    -1,  4238,    -1,    -1,   498,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4250,   682,    -1,    -1,  4254,    -1,
      -1,    -1,    -1,   748,    -1,    -1,   519,    -1,    -1,    -1,
      -1,     7,     8,   700,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,
      -1,    27,    -1,    29,    -1,    31,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,  4305,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   575,    -1,    -1,    -1,    -1,    63,    -1,    65,
      66,    -1,    -1,    -1,    -1,    -1,   589,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   600,    -1,    -1,
     603,   604,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   618,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   818,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,
      -1,   654,    -1,    -1,    -1,    -1,    -1,   143,   661,   145,
      -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   680,    -1,   682,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
      -1,    -1,    -1,    -1,   180,    -1,    -1,    32,    -1,    34,
      -1,    -1,  4448,    -1,    -1,    -1,    -1,    -1,   194,   195,
     887,    -1,    -1,    -1,    -1,  4461,  4462,   109,   110,   205,
     206,    -1,   114,    -1,    -1,    -1,    61,    -1,    -1,   732,
      -1,   217,   218,   219,   220,   738,   222,    -1,    -1,    -1,
      -1,   227,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,  4503,    -1,    -1,
      -1,    -1,    -1,   940,    -1,    -1,    -1,    -1,   945,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,   283,   975,   285,
     192,   978,    -1,    -1,   290,    -1,    -1,    -1,   985,    -1,
      -1,    -1,    -1,    -1,   300,   301,  4562,    -1,    -1,    -1,
      -1,    -1,   308,    -1,    -1,    -1,    -1,    -1,  4574,    -1,
      -1,    -1,    -1,    -1,  4580,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1023,    -1,    -1,  4595,
      -1,   337,   338,    -1,   340,    -1,    -1,   192,    -1,    -1,
      -1,   347,   254,   255,   256,    -1,    -1,    -1,   354,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1074,  1075,  1076,
    1077,    -1,    -1,  1080,    -1,    -1,    -1,  4653,    -1,    -1,
      -1,  1088,   304,    -1,   400,    -1,    -1,    -1,    -1,   254,
     255,   256,    -1,    -1,  4670,    -1,   412,    -1,    -1,    -1,
    4676,  4677,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,    -1,   335,   279,   431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4700,    -1,    -1,    -1,    -1,   445,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,   304,
      -1,    -1,   458,    -1,  4720,   461,  4722,    -1,   464,    -1,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,   380,  4735,
      -1,  4737,    -1,   479,    -1,    -1,    -1,    -1,   333,    -1,
     335,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   405,    -1,    -1,    -1,   352,    -1,   354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1261,   420,   478,    -1,  1265,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   525,    -1,    -1,    -1,    -1,    -1,   625,
      -1,  4887,   628,   478,    -1,    -1,   538,    -1,  4894,    -1,
      -1,    -1,   638,   488,    -1,    -1,    -1,  4903,    -1,    -1,
     646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1361,    -1,    -1,   579,    -1,  4935,
     525,    -1,   678,   585,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   538,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   713,    -1,    -1,
      -1,    -1,    -1,    -1,  4980,    -1,    -1,   723,    -1,    -1,
      -1,    -1,    -1,    -1,   579,    -1,    -1,    -1,    -1,    -1,
     585,    -1,   644,  1430,    -1,    -1,  1433,    -1,    -1,   651,
      -1,  5007,   748,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,
     682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   697,   698,    -1,    -1,   644,
      -1,    -1,    -1,    -1,    -1,  5061,   651,    -1,   710,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1506,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   682,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1532,  5102,    -1,    -1,    -1,
      -1,    -1,   697,   698,    -1,    -1,  1543,  1544,    -1,    -1,
      -1,    -1,  1549,    -1,    -1,   710,  1553,  1554,  1555,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   778,  1564,  1565,  1566,
      -1,    -1,    -1,  1570,    -1,  1572,  1573,  1574,  1575,  1576,
      -1,  1578,    -1,    -1,  1581,  1582,    -1,    -1,    -1,  5155,
      -1,    -1,  1589,    -1,  1591,    -1,    -1,  1594,  1595,    -1,
    1597,  1598,  1599,    -1,  1601,  1602,  1603,    -1,    -1,    -1,
      -1,  1608,    -1,    -1,  1611,    -1,    -1,    -1,    -1,  5185,
      -1,    -1,  1619,  1620,    -1,  1622,  1623,  1624,    -1,  5195,
    1627,  1628,  1629,  1630,  1631,  1632,  1633,    -1,  1635,  1636,
    1637,  1638,  1639,  1640,    -1,  1642,  1643,    -1,  1645,  1646,
    1647,  1648,  1649,  1650,  1651,  5221,    -1,  1654,  1655,  1656,
    1657,    -1,  1659,  1660,  1661,    -1,  1663,    -1,  1665,    -1,
    1667,    -1,    -1,    -1,  1671,  1672,  1673,    -1,    -1,  1676,
    1677,  1678,  1679,  1680,    -1,  1682,    -1,    -1,    -1,    -1,
      -1,    -1,  1689,    -1,    -1,    -1,    -1,    -1,    -1,  1696,
    1697,  1698,  1699,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1707,  1708,  1709,    -1,  1711,  1712,  1713,  1714,  1715,  1716,
      -1,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,    -1,
      -1,    -1,  1729,    -1,    -1,    -1,    -1,  1734,  5304,    -1,
      -1,  5307,    -1,    -1,  1741,  5311,    -1,    -1,    -1,    -1,
      -1,    -1,  5318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5335,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1774,    -1,    -1,
      -1,    -1,  1779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1789,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5411,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1856,
      -1,    -1,    -1,  5429,    -1,    -1,    -1,    -1,    -1,     7,
       8,    -1,  5438,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5446,    -1,    -1,    -1,  5450,  1882,    -1,  1884,    -1,    27,
      -1,    -1,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,  1906,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1918,    -1,    -1,    -1,    63,    -1,    65,    66,    -1,
      -1,    -1,    -1,  5499,    -1,    73,  5502,    -1,    -1,    -1,
      -1,    -1,    -1,  5509,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,  5529,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,    -1,    -1,    -1,  5562,    -1,  5564,    -1,
      -1,    -1,    -1,    -1,  2001,   143,    -1,   145,    -1,    -1,
      -1,    -1,    -1,  2010,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5599,    -1,    -1,    -1,    -1,  5604,    -1,
      -1,    -1,   180,    -1,    -1,  5611,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,  5647,   220,    -1,   222,  5651,    -1,    -1,    -1,   227,
      -1,    -1,  5658,    -1,    -1,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,    -1,    -1,
      -1,  5677,    -1,    -1,    -1,  5681,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,     7,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5701,    -1,  5703,  5704,    -1,
      -1,    -1,    -1,   281,    -1,   283,    -1,   285,    -1,    31,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,   301,    -1,    -1,    -1,  2164,    -1,    -1,
     308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,  2182,  5752,    -1,  2185,  5755,
      -1,    73,    -1,    -1,    -1,    -1,  2193,  2194,    -1,   337,
      -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,    -1,   347,
      -1,  5777,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,
    5786,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2257,  2258,   400,   145,  5830,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   412,    -1,  5842,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2282,  2283,  2284,    -1,    -1,
      -1,    -1,    -1,   431,    -1,    -1,    -1,    -1,    -1,  2296,
      -1,    -1,   184,    -1,    -1,    -1,    -1,   445,    -1,    -1,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     458,    -1,    -1,   461,    -1,    -1,   464,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,   479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2349,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2360,    -1,    -1,  2363,    -1,    -1,    -1,
      -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2390,    -1,    -1,  2393,   279,  2395,    -1,
      -1,    -1,    -1,    -1,  2401,    -1,  2403,  2404,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   325,  2441,    -1,    -1,    -1,    -1,    -1,
      -1,   333,    -1,   335,    -1,    -1,    -1,    -1,   596,    -1,
      -1,  2458,    -1,    -1,  2461,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,  2475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   625,    -1,    -1,
     628,   373,    -1,  2490,    -1,    -1,    -1,    -1,   380,    -1,
     638,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   646,    -1,
      -1,    -1,    -1,   395,    -1,  2512,    -1,    -1,    -1,    -1,
     658,    -1,    -1,   405,    -1,    -1,    -1,   409,    -1,    -1,
      -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,   420,    -1,
     678,    -1,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   713,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   723,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,  2594,    -1,  2596,
      -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,
     748,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   525,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,   540,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2674,    -1,    -1,
      -1,    -1,    -1,    -1,  2681,    -1,    -1,  2684,  2685,  2686,
      -1,  2688,    -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,
      -1,    -1,    -1,   585,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    16,    17,    -1,    -1,    -1,    -1,    22,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2743,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   644,    -1,    -1,    70,    -1,    -1,    -1,   651,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   697,   698,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   710,    -1,
      -1,    -1,   654,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,    -1,   149,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   157,   158,   159,    -1,    -1,    -1,    -1,    -1,
     682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2890,    -1,    -1,  2893,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2902,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,  2911,    -1,  2913,    -1,  2915,    -1,
    2917,  2918,  2919,  2920,  2921,  2922,    -1,  2924,    -1,    -1,
      -1,    -1,   237,    -1,    -1,  2932,    -1,  2934,   243,    -1,
    2937,  2938,  2939,  2940,    -1,    -1,  2943,  2944,    -1,    -1,
    2947,    -1,  2949,    -1,  2951,    -1,  2953,    -1,    -1,    -1,
    2957,    -1,    -1,   268,   269,   270,    -1,    -1,  2965,    -1,
    2967,    -1,  2969,  2970,  2971,  2972,  2973,    -1,    -1,  2976,
    2977,  2978,    -1,  2980,    -1,    -1,  2983,    -1,   293,   294,
      -1,    -1,    -1,    -1,    -1,    -1,   818,    -1,    -1,  2996,
      32,    -1,    34,    -1,  3001,    -1,    -1,  3004,    -1,  3006,
    3007,  3008,    -1,    -1,  3011,    -1,    -1,    -1,    -1,    -1,
    3017,    -1,    -1,    -1,    -1,  3022,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,  3031,    -1,   341,    -1,   343,   344,
    3037,    -1,  3039,    -1,    -1,    -1,    -1,    -1,  3045,    -1,
      -1,    -1,    -1,    -1,   359,    -1,  3053,  3054,  3055,    -1,
      -1,    -1,    -1,  3060,    -1,   887,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3071,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   396,    -1,   398,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,   137,    -1,   139,  3105,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,    -1,    -1,    -1,
      -1,    -1,    -1,   945,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3134,    -1,   444,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     455,   456,    -1,   975,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    -1,   985,    -1,    -1,    -1,    -1,  3165,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,  3185,    -1,
      -1,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   542,   543,   544,
      -1,    -1,    -1,    -1,    -1,   550,   551,   279,    -1,    -1,
      -1,    -1,  3249,    -1,    -1,  1077,    -1,    -1,    -1,    -1,
      -1,    -1,   567,   568,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   304,  3270,    -1,    -1,    -1,    -1,    -1,    -1,
    3277,    -1,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,    -1,   335,    -1,   610,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     352,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   642,    -1,    -1,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3358,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   702,    -1,    -1,
     705,    -1,    -1,   708,    -1,    -1,    -1,    -1,    -1,    -1,
     715,    -1,    -1,    -1,  3411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   731,    -1,  3425,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1261,
      -1,    -1,    -1,    -1,    -1,   750,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3488,    -1,   525,  3491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3515,  3516,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3539,    -1,  3541,    -1,  3543,   579,  3545,    -1,
      -1,    -1,    -1,   585,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3567,    -1,    -1,    -1,    -1,    -1,  3573,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3588,  3589,    -1,    -1,    -1,    -1,    -1,  3595,    -1,
      -1,    -1,  3599,    -1,    -1,    -1,    -1,  3604,  1430,    -1,
      -1,  1433,   644,    -1,    -1,    -1,    -1,    -1,    -1,   651,
    3617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     682,    -1,    -1,  3650,  3651,  3652,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   697,   698,    -1,    -1,  3666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   710,    -1,
      -1,    -1,    -1,    -1,  1506,    -1,    -1,    -1,    -1,    -1,
    3687,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3705,    -1,
    1532,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1549,    -1,    -1,
      -1,  1553,    -1,  1555,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,  1564,  1565,    -1,   114,    -1,    -1,  1570,    -1,
    1572,  1573,  1574,  1575,  1576,    -1,  1578,    -1,    -1,    -1,
    3757,    -1,    -1,    -1,    -1,    -1,    -1,  1589,    -1,  1591,
    3767,    -1,  1594,  1595,    -1,  1597,  1598,    -1,    -1,  1601,
    1602,  1603,  3779,    -1,  3781,    -1,  1608,    -1,    -1,  1611,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1619,  1620,    -1,
    1622,    -1,  1624,    -1,    -1,  1627,  1628,  1629,  1630,  1631,
    1632,  1633,    -1,  1635,  1636,  1637,  1638,  1639,    -1,    -1,
    1642,  1643,    -1,   192,  1646,  1647,  1648,    -1,    -1,    -1,
      -1,    -1,  1654,  1655,  1656,    -1,    -1,  1659,  1660,  1661,
      -1,  1663,    -1,  1665,    -1,  1667,    -1,    -1,    -1,  1671,
    1672,  1673,    -1,    -1,  1676,  1677,  1678,  1679,  1680,    -1,
    1682,    -1,    -1,    -1,    -1,    -1,    -1,  1689,    -1,    -1,
      -1,    -1,    -1,    -1,  1696,  1697,  1698,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   254,   255,   256,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    16,    17,    -1,
     279,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   304,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      -1,    -1,  1774,    -1,    -1,    -1,    -1,  1779,    -1,    -1,
      -1,    70,    -1,    -1,   333,    -1,   335,  1789,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    90,    -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1856,    -1,   405,   146,   147,    -1,
     149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,
     159,   420,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1882,    -1,  1884,    -1,    -1,    -1,    -1,    -1,   177,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1918,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,   478,
      -1,    -1,    -1,  4110,  4111,    -1,  4113,    -1,    -1,   488,
      -1,    -1,    -1,    -1,    -1,  4122,    -1,  4124,   237,    -1,
    4127,    -1,    -1,    -1,   243,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4140,    -1,  4142,    -1,  4144,    -1,  4146,
      -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,   268,
     269,   270,  4159,  4160,    -1,    -1,    -1,    -1,    -1,   538,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2001,
      -1,    -1,    -1,    -1,   293,   294,    -1,    -1,    -1,  4186,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     579,    -1,    -1,    -1,    -1,    -1,   585,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   341,    -1,   343,   344,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     359,    -1,    -1,  4250,    -1,    -1,    -1,  4254,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,
      -1,    -1,   651,    -1,    -1,    -1,    -1,   396,    -1,   398,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   421,   682,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   697,   698,
      -1,    -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,
      -1,   710,  2164,    -1,    -1,    -1,   455,   456,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2182,    -1,    -1,  2185,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2193,  2194,    -1,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   542,   543,   544,    -1,    -1,    -1,    -1,
      -1,   550,   551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   567,   568,
    2282,  2283,  2284,    -1,  4461,  4462,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   653,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2393,    -1,  2395,    -1,    -1,    -1,  4574,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   702,    -1,    -1,   705,    -1,  4595,   708,
      -1,    -1,    -1,    -1,    -1,  2427,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2441,
      -1,    -1,   731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2458,    -1,    -1,  2461,
      -1,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4653,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2490,    -1,
      -1,    -1,    -1,  4670,    -1,    -1,    -1,    -1,  4675,  4676,
    4677,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4700,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2553,    -1,    -1,    -1,    -1,    -1,    -1,  4735,    -1,
    4737,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2674,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2688,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4894,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4977,    -1,    -1,  4980,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5007,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2890,    -1,
      -1,  2893,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2911,
      -1,    -1,    -1,  2915,    -1,  2917,  2918,  2919,  2920,  2921,
    2922,    -1,    -1,    -1,    -1,  5102,    -1,    -1,    -1,    -1,
    2932,    -1,  2934,    -1,    -1,  2937,  2938,  2939,  2940,    -1,
      -1,  2943,  2944,    -1,    -1,  2947,    -1,  2949,    -1,  2951,
      -1,  2953,    -1,    -1,    -1,  2957,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2965,    -1,  2967,    -1,  2969,    -1,  2971,
    2972,  2973,    -1,    -1,  2976,  2977,  2978,    -1,  2980,    -1,
      -1,  2983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2996,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3004,    -1,  3006,  3007,  3008,    -1,    -1,  3011,
      -1,    -1,    -1,    -1,    -1,  3017,    -1,    -1,  5195,    -1,
    3022,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3031,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3045,  5221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3055,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3105,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5338,  5339,  3165,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3185,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5438,    -1,    -1,    -1,    -1,    -1,    -1,  3270,    -1,
      -1,    -1,    -1,  5450,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5529,    -1,    -1,    -1,  3358,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5564,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3425,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5651,    -1,  3478,    -1,    -1,    -1,
      -1,  5658,    -1,    -1,    -1,    -1,  3488,    -1,    -1,  3491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3515,  3516,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3539,    -1,  3541,
      -1,  3543,    -1,  3545,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3567,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3588,  3589,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5777,    -1,  3604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3617,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3651,
    3652,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3666,  5842,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3687,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3757,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3767,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3779,    -1,  3781,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4110,  4111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4122,    -1,  4124,    -1,    -1,  4127,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4140,    -1,
    4142,    -1,  4144,    -1,  4146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4159,  4160,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4250,    -1,
      -1,    -1,  4254,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4461,
    4462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4574,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4595,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4653,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4670,    -1,
      -1,    -1,    -1,    -1,  4676,  4677,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4700,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4735,    -1,  4737,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4980,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5007,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,  5450,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,  5529,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,  5564,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,   179,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5651,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
    5842,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,
      -1,    -1,    -1,   766,    -1,    -1,    -1,     6,   771,    -1,
      -1,    -1,   775,   776,    -1,    -1,   779,   780,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,    -1,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
     301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    25,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,   272,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,   113,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    94,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
     155,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,    -1,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
      -1,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,    -1,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,    -1,    -1,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    18,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   760,   761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   771,    -1,    -1,    -1,    -1,   776,    -1,    -1,
     779,   780,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   167,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    24,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,   780,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    24,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    32,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    32,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,   780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    35,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    29,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
      -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,   225,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,    -1,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,    -1,    -1,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,   350,   351,    -1,    -1,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,    -1,
      -1,    -1,    -1,    -1,    -1,   372,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,    -1,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    -1,    -1,
      -1,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,    -1,   459,   460,    -1,   462,   463,    -1,    -1,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,    -1,
      -1,    -1,   579,   580,    -1,   582,   583,   584,   585,    -1,
     587,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,    -1,   624,    -1,   626,
     627,    -1,   629,   630,    -1,   632,   633,   634,   635,   636,
     637,    -1,   639,   640,   641,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,   653,   654,    -1,   656,
     657,    -1,    -1,   660,    -1,    -1,   663,   664,   665,    -1,
     667,    -1,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,    -1,   679,   680,    -1,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,    -1,   705,   706,
     707,   708,   709,   710,   711,   712,    -1,   714,   715,   716,
      -1,   718,   719,   720,   721,     6,     7,   724,   725,    -1,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,    -1,   743,   744,    -1,    -1,
     747,    -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,    -1,    -1,
      -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   284,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
       6,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     6,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     6,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    36,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    11,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    17,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   238,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    17,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,   755,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    17,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      17,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    18,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    45,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,    -1,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    29,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    38,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    76,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    76,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    76,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   298,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    29,   705,   706,   707,   708,
     709,   710,   711,   712,    38,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,    -1,    -1,   341,   342,   343,
     344,   345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,   460,    -1,   462,   463,
      -1,    -1,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,    -1,    -1,    -1,   579,   580,    -1,   582,   583,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,    -1,
     624,    -1,   626,   627,    -1,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,    -1,   639,   640,   641,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,   653,
     654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,
     664,   665,    -1,   667,    -1,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,    -1,   679,   680,    -1,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
      29,   705,   706,   707,   708,   709,   710,   711,   712,    38,
     714,   715,   716,    -1,   718,   719,   720,   721,    -1,    -1,
     724,   725,    -1,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,   743,
     744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,   338,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,    -1,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    29,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    -1,   705,   706,   707,   708,
     709,   710,   711,   712,    -1,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    92,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,    -1,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,    -1,   338,    -1,
      -1,   341,   342,   343,   344,   345,    -1,    -1,   348,   349,
     350,   351,    -1,    -1,    -1,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,    -1,   365,    -1,    -1,    -1,    -1,
      -1,    -1,   372,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,    -1,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,    -1,   459,
     460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,
     580,    -1,   582,   583,   584,   585,    -1,   587,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,    -1,   624,    -1,   626,   627,    -1,   629,
     630,    -1,   632,   633,   634,   635,   636,   637,    -1,   639,
     640,   641,   642,   643,   644,   645,    -1,   647,   648,   649,
      -1,   651,   652,   653,   654,    -1,   656,   657,    -1,    -1,
     660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,    -1,   679,
     680,    -1,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,    -1,   705,   706,   707,   708,   709,
     710,   711,   712,    -1,   714,   715,   716,    -1,   718,   719,
     720,   721,    37,    38,   724,   725,    -1,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    74,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    45,    46,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,
      -1,    -1,    -1,   776,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    45,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      46,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    57,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    57,
      -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    57,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    61,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    61,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    61,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    61,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    61,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    61,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    61,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,    -1,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,    -1,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   772,    -1,    -1,    -1,    -1,
      -1,    -1,   779,   780,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   780,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   780,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,   780,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,   776,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   104,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,   171,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     246,   247,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    94,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    94,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,    -1,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,    -1,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,    -1,    -1,    -1,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,   350,   351,    -1,
      -1,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,    -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,    -1,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,    -1,   459,   460,    -1,   462,
     463,    -1,    -1,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,    -1,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   109,   110,    -1,    -1,   579,   580,    -1,   582,
     583,   584,   585,    -1,   587,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
      -1,   624,    -1,   626,   627,    -1,   629,   630,    -1,   632,
     633,   634,   635,   636,   637,    -1,   639,   640,   641,   642,
     643,   644,   645,    -1,   647,   648,   649,    -1,   651,   652,
     653,   654,    -1,   656,   657,    -1,    -1,   660,    -1,    -1,
     663,   664,   665,    -1,   667,    -1,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,    -1,   679,   680,    -1,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,    -1,   705,   706,   707,   708,   709,   710,   711,   712,
      -1,   714,   715,   716,    -1,   718,   719,   720,   721,    -1,
      -1,   724,   725,    -1,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,    -1,    -1,
     743,   744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,    -1,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,    -1,    -1,    -1,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,   350,   351,    -1,    -1,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,    -1,
      -1,    -1,    -1,    -1,    -1,   372,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,    -1,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    -1,    -1,
      -1,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,    -1,   459,   460,    -1,   462,   463,    -1,    -1,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   109,   110,
      -1,    -1,   579,   580,    -1,   582,   583,   584,   585,    -1,
     587,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,    -1,   624,    -1,   626,
     627,    -1,   629,   630,    -1,   632,   633,   634,   635,   636,
     637,    -1,   639,   640,   641,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,   653,   654,    -1,   656,
     657,    -1,    -1,   660,    -1,    -1,   663,   664,   665,    -1,
     667,    -1,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,    -1,   679,   680,    -1,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,    -1,   705,   706,
     707,   708,   709,   710,   711,   712,    -1,   714,   715,   716,
      -1,   718,   719,   720,   721,    -1,    -1,   724,   725,    -1,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,    -1,   743,   744,    -1,    -1,
     747,    -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,    -1,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,    -1,    -1,    -1,    -1,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,   350,
     351,    -1,    -1,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,    -1,   365,    -1,    -1,    -1,    -1,    -1,
      -1,   372,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
      -1,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,    -1,    -1,    -1,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,    -1,   459,   460,
      -1,   462,   463,    -1,    -1,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
      -1,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,   580,
      -1,   582,   583,   584,   585,    -1,   587,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,    -1,   624,    -1,   626,   627,    -1,   629,   630,
      -1,   632,   633,   634,   635,   636,   637,    -1,   639,   640,
     641,   642,   643,   644,   645,    -1,   647,   648,   649,    -1,
     651,   652,   653,   654,    -1,   656,   657,    -1,    -1,   660,
      -1,    -1,   663,   664,   665,    -1,   667,    -1,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,    -1,   679,   680,
      -1,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,    -1,   705,   706,   707,   708,   709,   710,
     711,   712,    -1,   714,   715,   716,    -1,   718,   719,   720,
     721,    -1,    -1,   724,   725,    -1,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,   743,   744,    -1,    -1,   747,    -1,   749,   750
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    63,    65,
      66,    73,    80,    92,    98,   111,   119,   130,   143,   145,
     150,   180,   194,   195,   205,   206,   217,   218,   219,   220,
     222,   227,   233,   237,   241,   242,   281,   283,   285,   290,
     300,   301,   308,   337,   338,   340,   347,   354,   375,   400,
     412,   431,   445,   458,   461,   464,   479,   596,   625,   628,
     638,   646,   658,   678,   681,   713,   723,   748,   771,   783,
     786,   787,   788,   789,   790,   792,   798,   800,   813,   859,
     901,   902,   909,   910,   926,   927,   958,   979,   997,  1057,
    1113,  1165,  1261,  1310,  1313,  1323,  1328,  1334,  1347,  1350,
    1356,  1359,  1364,  1371,  1383,  1386,  1389,  1390,  1392,  1395,
    1396,  1398,  1399,  1402,  1403,  1406,  1624,  1626,  1639,  1642,
    1676,  1684,  1699,  1706,  1720,  1724,  1725,  1729,  1739,  1746,
    1754,  1756,  1761,  1764,  1765,  1797,  1845,  1875,  1882,  1884,
    1893,  1896,  1936,  1938,  1943,  1944,  1945,  1946,  1976,  1985,
    1986,  1987,    49,   204,   325,   403,   452,   500,   651,   655,
     697,   727,  1262,  1950,  1951,  1952,  1953,   173,   449,   498,
    1358,  1727,   109,   110,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   365,   366,
     367,   368,   369,   370,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   747,   748,   749,   750,   853,  1816,  1818,  1825,
    1832,  1837,  1838,  1839,  1840,  1841,  1842,  1843,  1844,   959,
     519,  1351,   185,   500,   697,  1685,    49,   114,   204,   273,
     426,   452,   500,   637,   655,   697,   700,   727,   735,  1638,
    1000,   851,   928,  1640,  1757,   114,   395,   749,  1770,   264,
     696,  1878,   998,  1358,  1166,  1058,    17,   519,  1712,   237,
     247,   898,   903,   905,  1825,   646,   727,  1878,  1002,  1643,
     903,   904,   851,  1393,   679,  1846,  1707,   903,  1883,  1677,
    1825,  1391,   999,   213,  1799,   145,   281,   676,  1740,   170,
     171,  1439,  1937,   266,   780,  1819,   114,  1878,   744,  1940,
    1625,   473,  1825,  1358,   390,   911,  1885,   799,   590,   668,
    1825,  1358,  1747,  1940,  1825,  1762,     6,   661,   709,     6,
     661,  1700,   590,   668,   338,   339,   375,   417,   596,   613,
     638,   678,  1979,  1392,  1399,  1402,     0,    80,   784,   596,
      49,    95,   244,   280,   637,   727,   831,  1240,  1241,  1242,
    1638,  1950,  1951,  1952,  1953,    94,   122,  1409,  1410,  1620,
    1387,  1384,    83,   120,   279,  1401,  1947,  1400,  1947,   438,
     449,   583,   779,  1726,  1727,  1813,  1825,  1396,  1398,  1278,
    1825,   853,   755,   755,   853,    99,   111,  1637,   138,  1819,
    1825,  1827,  1005,  1006,  1009,  1032,  1825,  1637,  1302,  1303,
     251,  1427,  1954,  1955,  1950,   755,  1878,  1383,  1386,  1639,
    1642,  1676,  1684,  1723,   860,   779,   298,   960,   961,   964,
     968,   811,   812,  1819,   735,  1348,  1878,   220,    99,  1007,
    1032,   113,   151,   466,   608,  1687,  1697,  1698,  1637,  1628,
    1637,  1637,  1637,  1637,    99,  1637,  1637,  1032,  1637,  1637,
     651,  1878,   982,  1825,     6,     7,    41,    46,    63,    73,
      98,   114,   119,   145,   215,   233,   241,   273,   283,   284,
     426,   431,   442,   601,   605,   622,   627,   658,   690,  1827,
    1897,  1901,  1902,  1904,  1906,  1907,   953,   954,   151,   404,
     465,  1645,   462,   667,  1758,   122,  1766,  1876,    38,    87,
      97,   126,   133,   225,   226,   338,   360,   434,   575,   876,
     924,   925,   926,   929,   930,   931,   932,   936,   937,   938,
     939,   940,   948,   949,   950,   951,   972,   974,   975,   977,
     984,   990,  1818,  1826,  1833,  1840,  1842,  1843,  1844,  1878,
      17,    18,    19,    20,    21,    29,    30,    32,    39,    40,
      43,    44,    45,    46,    48,    49,    51,    52,    57,    61,
      64,    84,    85,    86,    88,    89,   100,   101,   102,   104,
     105,   109,   110,   111,   119,   121,   134,   148,   153,   154,
     156,   162,   164,   167,   170,   171,   172,   174,   175,   176,
     178,   193,   197,   198,   199,   201,   208,   219,   220,   228,
     231,   251,   257,   258,   260,   261,   262,   266,   274,   275,
     276,   277,   287,   288,   289,   295,   297,   321,   328,   336,
     352,   361,   363,   364,   366,   367,   368,   369,   370,   385,
     397,   398,   399,   401,   402,   449,   455,   457,   469,   491,
     492,   496,   534,   536,   541,   542,   543,   544,   554,   555,
     571,   585,   591,   592,   599,   606,   636,   642,   643,   649,
     656,   686,   705,   706,   707,   708,   712,   713,   727,   729,
     739,   740,   742,   750,   760,   761,   766,   771,   775,   776,
     779,   780,  1402,  1408,  1433,  1434,  1435,  1436,  1440,  1452,
    1454,  1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,
    1464,  1472,  1476,  1477,  1478,  1479,  1480,  1482,  1485,  1789,
    1792,  1794,  1795,  1796,  1810,  1817,  1818,  1825,  1832,    26,
    1059,   501,   349,   356,   372,   382,   383,   384,   392,   533,
     547,   648,   685,   699,   906,   908,   729,   899,   905,  1825,
     851,  1360,   876,   987,   151,   404,  1646,  1683,   905,     6,
     320,   605,  1894,  1895,  1902,  1904,     6,    68,   249,   250,
     259,   465,   671,   672,   673,   674,  1412,  1419,  1420,  1949,
    1847,    32,    61,   352,   459,   498,   548,   585,   637,   654,
     709,   741,   780,  1204,  1818,  1823,  1825,  1836,  1837,  1838,
    1839,  1841,  1842,  1843,  1844,  1850,  1862,  1866,     6,    40,
      41,    50,   114,   128,   204,   264,   315,   331,   340,   352,
     363,   387,   420,   423,   425,   451,   452,   459,   460,   476,
     498,   519,   575,   589,   600,   603,   604,   618,   654,   661,
     682,   738,  1204,  1239,  1708,  1712,  1713,  1715,  1724,  1818,
    1863,   905,  1878,  1683,   771,  1656,  1665,   985,  1433,  1798,
    1741,  1825,   330,  1940,  1827,  1365,  1324,    10,  1941,  1433,
    1505,   793,   286,   795,  1730,   407,  1813,  1815,  1825,  1886,
    1827,   111,  1112,  1819,    94,  1329,   519,   607,   661,  1748,
    1749,   271,  1941,   737,  1763,   662,   811,   210,   301,  1314,
    1315,  1316,   662,   811,   264,  1701,  1637,  1637,    18,   104,
     105,   266,  1790,  1791,  1820,  1978,  1978,  1978,   449,  1977,
    1978,  1978,   772,   772,   778,  1825,  1112,  1112,  1112,   655,
     835,   114,   114,   114,   264,   651,   204,   273,   426,  1954,
     324,   852,   852,  1950,    74,   771,   776,  1408,  1411,  1511,
    1512,  1513,  1514,  1515,  1526,  1527,  1528,  1529,  1531,  1532,
    1533,  1813,   188,   413,  1615,  1616,  1621,   299,  1556,  1409,
      92,   140,   145,   184,  1421,  1582,  1587,  1593,  1594,  1598,
     204,  1597,  1610,  1620,     6,    68,  1948,  1593,  1595,  1402,
    1405,  1406,  1594,  1596,  1404,     6,  1825,  1722,  1721,   779,
    1388,  1385,  1264,   726,  1265,   532,   701,   719,    45,  1827,
    1828,  1829,  1901,  1266,  1011,  1033,  1825,    84,  1271,  1270,
       5,    31,    73,   171,   211,   611,  1034,   851,   264,   113,
     574,  1304,  1305,  1306,   650,   426,   735,  1954,  1827,  1335,
     771,   861,  1825,   969,    76,   971,  1433,   968,   271,  1349,
    1631,  1632,  1813,  1010,  1033,     5,    94,  1688,    94,  1688,
    1689,  1690,  1694,  1695,  1825,  1697,  1825,   111,  1636,   853,
     853,   853,  1825,  1033,   851,  1827,  1043,  1713,   851,  1629,
    1637,  1637,  1001,   124,   983,   600,  1905,   640,   640,   697,
     700,   727,   735,   771,  1432,   466,   577,  1909,   696,  1911,
    1908,    50,   735,  1910,   179,   357,   661,   271,   179,   774,
     417,  1433,   113,  1301,   380,   607,  1759,   347,   151,   379,
    1772,  1813,  1879,  1880,   298,  1826,    94,    99,   554,  1825,
    1826,  1826,  1826,   978,  1825,   298,  1826,  1825,   417,   925,
     778,   787,   933,   952,  1825,    92,   150,   219,   300,   338,
     781,  1357,   121,   760,   761,  1457,   771,   771,   771,   298,
    1433,  1508,  1509,   771,   771,   771,   771,   771,  1432,  1432,
    1432,   771,  1431,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,  1433,   771,   109,
     110,   364,   771,  1506,  1507,  1810,  1817,  1832,   771,   771,
     771,   771,  1433,  1431,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   196,   771,   771,   771,   771,
    1431,   771,   266,  1791,  1432,  1431,  1431,   771,   771,   771,
     771,   771,   771,   771,   771,   176,  1817,   771,   771,   771,
     771,   771,   771,   771,   266,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   729,   771,   771,   771,   771,   771,   729,   771,
     771,   771,   771,   771,   771,   771,   266,   771,   771,   771,
     266,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     121,  1457,   121,  1457,  1457,  1167,  1402,  1433,  1797,  1825,
    1817,  1486,     9,    10,   183,   185,   305,  1437,  1438,    81,
      96,   125,   131,   168,   755,   756,   757,  1441,    15,    69,
     124,   139,   164,   182,   216,   239,   240,   669,   758,   759,
     760,   761,   762,   763,   764,   765,  1439,  1457,    34,   165,
     190,   190,   742,  1820,   779,   771,   196,  1060,    14,   271,
     774,   755,  1820,  1361,  1828,  1830,  1362,  1363,  1813,   725,
     122,  1647,  1648,  1649,  1905,   577,   179,    94,   179,  1394,
    1420,    61,  1825,  1849,  1865,   237,   637,   779,    17,    61,
     238,   755,  1205,  1206,  1659,  1827,    92,  1659,  1872,  1659,
    1827,  1852,   780,  1827,    17,    61,  1208,  1209,  1827,  1659,
     779,  1853,  1851,   662,   771,    49,   204,   264,   273,   315,
     426,   452,   651,   727,   735,   139,   299,  1719,   362,   680,
     680,   309,   680,   425,  1719,     6,  1124,  1827,  1586,  1587,
    1588,    94,   124,  1714,  1716,   362,   680,    92,   680,   696,
     668,     6,   342,   386,   388,   482,   531,   580,   670,   692,
    1702,  1703,  1704,   811,   468,   680,   812,  1588,  1719,  1716,
     501,   419,   365,   602,   696,   711,    92,  1426,   680,   732,
    1301,  1666,   774,   412,  1800,  1801,  1805,  1825,  1813,   980,
     774,  1366,  1367,  1368,  1369,  1813,  1631,   350,   561,   217,
     561,  1942,   774,  1433,   796,    17,   252,   406,   420,   422,
     453,   468,   501,   519,   600,   607,   617,   630,   661,   664,
     680,  1731,  1736,  1737,  1818,  1878,    35,   780,   912,   913,
     914,   915,  1817,   575,   210,   360,  1439,  1825,   791,   735,
    1326,  1878,  1751,   347,  1750,   774,   646,  1825,  1942,    92,
    1317,  1318,  1317,   573,   746,   381,   774,  1317,  1317,  1632,
    1825,  1819,   774,   572,  1981,   691,  1982,   755,   127,   632,
    1980,    80,   785,  1825,   851,   851,  1112,  1112,   819,   821,
    1112,  1112,  1112,   826,   828,   735,   452,   452,  1954,  1511,
    1515,  1527,  1528,  1529,  1530,  1531,  1825,    93,  1417,    42,
     116,   127,   134,   166,   228,   259,  1522,  1523,   774,   195,
    1524,  1525,   266,  1821,  1821,   780,  1617,  1618,  1619,  1825,
    1827,  1557,    99,  1561,  1556,   283,   148,   176,   229,   276,
     364,  1589,  1590,  1792,  1817,   124,    26,  1586,  1421,  1825,
    1421,  1422,  1422,  1405,  1723,  1728,  1790,  1825,  1825,  1594,
    1597,    61,  1109,  1110,  1121,  1122,  1213,   395,   854,  1432,
     780,   854,     5,  1012,  1813,   576,   394,  1029,  1029,  1029,
       4,  1828,  1829,  1830,  1917,  1921,  1813,  1306,   403,   480,
     853,  1813,   735,  1336,  1337,  1632,   862,   863,  1433,  1433,
     876,   417,   962,   801,  1631,    92,   351,   438,   440,   530,
     608,   774,  1352,  1353,  1354,  1012,  1029,  1813,    14,  1686,
    1634,  1635,  1814,  1825,    92,  1415,  1416,  1556,   774,  1691,
     779,  1696,    84,  1825,   779,  1043,  1900,  1902,   564,   737,
    1044,  1045,   420,  1830,  1916,  1631,  1630,  1627,   412,   636,
     981,   696,   772,   771,  1925,  1925,  1925,  1925,  1830,  1917,
     191,   204,   264,   452,  1903,   426,   431,   442,   601,   622,
     627,   658,   690,  1907,   111,   267,  1647,   470,   727,  1433,
    1760,  1372,   498,  1771,    11,   755,  1552,  1553,  1554,   565,
     737,   774,  1877,   934,   935,   298,  1825,   554,    94,   122,
     877,   934,   298,   771,   947,   150,   778,  1433,   774,   993,
     991,   996,   992,   976,  1631,   771,     6,  1496,  1555,  1496,
    1496,  1433,  1509,    76,   298,   417,  1433,  1505,  1433,    68,
    1496,  1555,   772,    57,    89,   104,   148,   176,   276,   772,
    1602,  1606,  1607,   772,  1433,  1433,  1810,   772,  1397,  1398,
    1407,  1797,    53,    54,    55,    56,   106,   107,   108,   160,
     161,   232,   306,   399,   469,   534,   536,   541,   606,   649,
     739,   750,  1549,  1550,  1433,    68,  1488,  1433,  1433,  1433,
    1433,  1433,  1549,  1433,  1817,  1507,   323,   774,   779,    68,
    1496,  1433,    68,  1496,  1433,  1433,  1433,   772,  1433,  1433,
    1436,   772,  1433,  1433,  1433,   772,   641,  1496,  1496,  1433,
      68,  1496,    25,   132,   272,  1433,  1453,  1496,  1496,  1433,
    1433,    68,  1496,  1433,  1505,  1433,   779,  1433,  1433,  1433,
    1449,  1450,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1505,   396,   398,   705,   708,  1551,  1433,  1433,  1505,
    1813,  1505,  1433,  1433,  1433,  1505,  1505,  1505,    92,  1813,
    1433,  1433,  1433,  1505,    92,  1433,  1433,  1433,   772,  1433,
    1813,  1433,  1433,  1550,  1550,  1433,  1453,  1433,   772,   364,
     779,  1811,  1825,  1433,  1433,  1433,  1433,  1433,  1433,   772,
     774,  1398,  1433,   779,   780,  1487,  1827,  1433,  1433,  1433,
    1435,    86,   175,   275,   724,  1439,     6,   327,  1435,  1442,
    1436,  1436,   771,  1408,  1436,  1436,  1436,  1436,  1436,  1436,
     139,  1436,  1436,   121,  1436,   121,  1436,  1436,  1436,  1436,
    1436,    15,   124,   139,   216,  1210,  1827,  1457,   771,  1484,
    1567,  1825,   771,    99,  1817,  1465,   450,   484,   560,   641,
    1451,   141,   207,   497,   695,  1061,  1065,  1755,  1819,   908,
     398,   705,   708,   907,  1485,  1794,  1810,   774,   271,   774,
    1877,   988,  1648,  1644,  1633,  1813,   774,    92,  1830,  1829,
    1918,   191,   204,   452,  1903,   762,  1424,  1425,  1427,   779,
     779,  1659,   774,  1848,  1902,  1825,    34,  1211,  1433,  1830,
     266,   571,   585,  1873,     6,    17,    61,   179,  1433,  1874,
     210,   483,  1867,  1868,  1869,  1870,   459,   498,   654,  1864,
    1659,  1874,  1825,   709,  1854,  1865,   774,  1856,   680,   762,
    1112,   853,  1813,   853,   309,   853,   853,   853,  1813,  1830,
    1813,  1426,  1426,   853,  1719,  1714,   362,   680,  1719,   124,
    1717,   501,   545,   680,  1711,  1711,  1719,  1825,   853,  1719,
    1829,  1714,  1719,  1819,   481,   693,   441,    92,  1705,   774,
     425,   680,  1813,  1716,  1714,  1714,  1433,  1719,  1719,  1719,
    1512,  1675,  1813,  1427,  1668,  1670,   771,  1663,   986,   774,
     771,  1803,   877,   780,   124,   774,   195,  1377,  1379,  1380,
     438,   608,  1325,   350,   217,  1433,   794,    61,   113,   797,
    1433,  1671,   501,   501,   501,   501,   347,   501,   811,   501,
     774,  1426,  1732,   907,   917,  1827,   774,   755,  1553,  1887,
      84,   668,  1433,  1327,  1631,   271,  1753,   811,  1749,  1825,
       6,  1312,   621,   675,  1319,  1320,  1311,   665,  1316,  1877,
    1790,   588,  1983,  1827,   823,  1900,  1917,  1827,   817,  1112,
    1112,   814,  1813,   827,  1427,  1963,   839,  1427,  1112,  1112,
    1112,   735,   774,   772,   772,   772,   772,   772,   774,   772,
    1511,     6,    11,    15,    94,  1418,  1554,   127,   127,   187,
    1534,   134,   228,  1522,  1534,  1511,  1513,   771,  1417,  1622,
    1827,   774,   779,  1433,    26,   103,  1558,  1561,   565,   737,
    1423,   429,  1817,   229,   570,   774,   779,   657,  1583,  1611,
    1110,    34,  1204,   408,   163,   209,   251,   373,   385,   489,
     561,   856,   858,  1827,   614,   720,  1030,  1031,   477,  1026,
    1027,  1028,  1035,  1043,  1045,  1272,   771,  1819,   332,   526,
    1020,  1021,  1022,  1035,  1036,  1037,  1043,  1045,  1013,  1014,
    1020,   471,   221,   774,  1928,  1877,  1269,  1268,  1813,   774,
     587,  1338,   772,   774,   970,    29,   298,   963,   965,    71,
     112,   152,   472,   502,   503,   505,   506,   507,   508,   509,
     511,   512,   513,   514,   515,   516,   517,   518,   520,   521,
     522,   619,   620,   802,   803,   810,    92,  1355,   726,  1632,
    1353,   373,   558,   615,   721,  1023,  1024,  1025,  1035,  1039,
    1040,  1041,  1042,  1043,  1045,   285,  1008,  1524,   695,   774,
    1692,   779,  1696,   200,  1581,  1582,  1695,    94,   762,  1825,
     179,  1825,  1044,   774,  1659,  1660,   774,    28,   223,  1307,
    1631,  1631,   876,   771,   941,   944,  1825,  1926,  1927,   271,
     301,  1899,    24,   762,  1813,  1825,  1915,  1915,  1915,  1915,
     955,  1641,  1830,  1373,  1374,  1375,  1376,  1813,   115,  1818,
    1822,  1831,  1837,  1838,  1839,  1840,  1841,  1842,  1843,  1844,
     151,   210,   746,  1881,   104,   761,  1599,  1601,  1880,  1433,
     934,   122,   642,  1825,    59,   875,   878,   934,   941,   942,
     946,  1825,   982,   984,   987,   985,   877,  1877,  1433,   772,
    1497,   772,   772,   267,   417,  1433,  1433,    11,   286,   772,
     286,   774,  1473,   772,   762,   772,   774,   774,   772,   772,
    1398,    94,   772,  1475,   772,   774,   772,   774,   774,   774,
     774,   761,   774,   772,   771,  1810,  1817,  1496,   772,   772,
    1496,   772,   774,   772,   774,   772,   772,   124,   774,   774,
     774,   772,   772,    94,   774,  1496,   772,    94,  1433,    94,
    1433,    94,  1433,    94,   772,   772,   772,   774,   772,  1496,
     772,   772,   772,   772,  1817,   774,   772,   774,   772,   774,
     774,   774,   774,   774,   772,   772,   774,   774,   774,   772,
     774,   772,   772,   774,   772,   772,   772,   772,   772,   772,
     772,   772,  1813,   772,   772,   772,   774,   772,  1813,   772,
     772,   774,   772,   774,   774,   772,   774,   774,   774,   772,
     772,   774,  1817,  1825,   772,   779,   772,   774,    11,   495,
     774,  1228,   774,   772,  1549,  1549,  1505,   772,   777,  1817,
    1864,   238,    86,   175,   275,   724,   771,    10,  1433,   424,
    1560,  1436,  1433,  1433,  1436,   771,  1408,  1436,  1436,  1568,
     195,  1570,   771,   771,   779,  1427,  1469,  1470,  1471,   365,
     771,  1070,  1071,  1063,  1070,  1064,   583,  1073,   129,   463,
    1433,   755,  1830,  1830,  1363,   271,  1433,   135,   136,   237,
    1051,  1397,  1650,  1652,  1655,  1524,    98,  1902,    94,   774,
      24,  1915,  1915,  1915,  1915,   774,  1433,  1808,  1817,  1825,
    1825,  1874,  1865,    92,    92,  1659,    61,  1210,  1212,  1659,
     771,   771,   573,   746,   495,   774,   774,   779,   779,   779,
      61,   741,  1818,  1819,  1824,  1834,  1837,  1838,  1839,  1840,
    1841,  1843,  1844,  1433,  1659,  1867,  1855,  1857,  1858,   772,
    1825,   853,  1819,  1433,  1719,   853,  1719,  1819,    94,  1718,
     851,  1719,   607,  1588,  1704,  1717,  1714,  1813,  1719,  1719,
     237,  1524,  1671,   772,   774,  1664,   876,  1801,  1804,  1825,
    1802,   875,  1827,    61,  1370,  1825,  1368,  1813,  1056,  1379,
     114,   129,  1237,  1381,   795,   774,    62,  1742,   811,  1737,
    1631,  1738,   915,   918,   919,   914,   566,   567,   643,   916,
     443,   554,  1825,  1888,  1889,  1819,  1631,   438,   608,   728,
    1330,  1331,  1332,  1601,     6,  1752,   662,   774,   725,  1321,
     774,    92,  1984,  1108,  1109,   301,  1898,  1928,   836,  1825,
    1825,  1825,  1813,   816,   853,  1973,  1112,  1112,  1813,   853,
    1825,   853,  1112,  1511,  1511,   777,   569,   705,   709,  1413,
    1414,  1459,  1414,   127,  1534,  1534,  1526,   127,   179,   286,
    1548,  1825,  1553,  1204,  1207,  1618,  1825,  1433,  1562,  1809,
    1559,   741,  1564,  1558,  1601,  1590,  1591,   429,  1590,  1590,
    1817,   539,  1584,  1809,   771,  1660,  1660,   549,   251,   251,
     650,  1819,   251,   251,   251,  1819,  1819,  1660,   774,  1028,
     155,   347,   393,   475,   537,   556,   557,   561,   562,   563,
     629,   678,   833,   834,    49,   467,   578,   585,   593,   666,
     727,   837,   838,  1660,  1660,   774,  1022,  1015,  1016,  1035,
    1036,  1037,    26,   301,   734,  1919,   252,   355,   485,   559,
     687,   747,  1913,  1914,  1921,   301,  1931,  1263,   179,   847,
    1275,   771,  1956,  1267,  1337,    92,  1433,   267,   966,   965,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   774,   726,  1660,  1660,  1660,  1660,
     774,  1025,   500,   439,  1017,  1018,  1019,  1035,  1036,  1037,
    1038,  1041,  1042,  1043,  1045,  1414,  1635,  1825,   286,  1825,
     569,   140,  1592,  1512,   779,  1696,  1813,  1902,  1123,  1827,
    1830,  1877,   417,   891,   892,   945,    72,   772,   774,  1917,
     320,  1915,   779,   779,   271,   271,   271,   271,   876,  1650,
     774,  1377,  1379,  1821,   746,   498,   379,    57,    89,   148,
     176,   276,   122,    37,    38,   433,   434,   741,   884,   885,
     886,   888,   894,   921,   922,  1818,  1835,  1837,  1838,  1839,
    1840,  1841,  1842,  1843,  1844,   417,   925,   778,   943,   772,
     774,   994,   973,   989,  1826,   989,   989,   875,   774,  1433,
    1433,   267,    17,    32,    58,    70,    90,   121,   123,   282,
     294,   396,   398,   551,   659,   708,   731,  1498,  1502,  1503,
    1205,  1205,  1498,  1505,   772,   121,   121,  1433,  1505,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1436,   772,   772,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,   772,  1433,    94,
    1433,    94,  1433,    94,  1433,   121,  1433,   772,  1450,  1433,
    1449,  1505,  1433,  1433,  1433,  1433,  1433,  1510,  1433,  1433,
    1433,  1433,  1505,   148,   760,  1599,  1603,   121,  1433,  1433,
    1433,  1433,  1433,   779,   779,  1825,  1433,    17,    32,  1223,
    1224,  1225,  1226,  1227,  1602,  1601,   772,  1433,   761,   761,
    1824,  1433,  1407,  1435,   772,   774,  1457,  1549,  1549,    10,
    1433,  1560,  1569,  1825,    26,   772,  1481,  1504,  1505,  1817,
    1433,   772,   774,   771,  1079,  1436,  1071,   121,   140,  1105,
    1602,   689,  1074,   325,  1066,  1062,   907,   271,  1813,   417,
    1653,  1654,  1806,  1807,  1811,  1825,  1797,  1651,  1655,   577,
    1916,  1829,  1915,    94,    94,    94,    94,  1425,  1428,  1428,
     779,  1659,  1659,   786,  1830,  1874,   266,   266,   210,   626,
     652,  1871,  1869,  1868,   779,   779,  1659,  1874,  1856,   774,
    1860,  1862,  1866,   423,   738,  1599,  1604,  1709,   176,  1718,
    1556,  1714,  1679,  1680,  1811,  1415,  1428,  1427,  1667,  1669,
    1671,   417,   772,   774,    11,   417,  1378,   771,  1671,   755,
      92,   301,  1733,  1734,   755,   774,    96,   131,   443,   490,
     554,   598,   755,   756,   757,  1890,  1892,  1556,    94,  1333,
    1331,  1320,   504,   810,  1322,  1601,   535,   320,  1931,    91,
     286,   715,  1250,   179,   179,   815,   832,   833,  1974,  1964,
     853,   824,   771,   634,   771,  1813,  1414,   266,  1436,    10,
     271,  1511,  1526,   127,   127,  1511,  1526,  1516,  1517,   772,
     774,  1543,  1544,  1206,  1623,   302,   303,   774,  1563,    12,
      65,  1585,  1433,  1484,  1565,  1566,  1564,  1591,  1423,   774,
    1585,  1427,  1612,  1613,  1614,  1212,  1206,   395,   395,   403,
     480,   104,   148,   176,   276,  1046,  1605,  1606,  1818,  1028,
    1660,  1660,    26,  1660,  1662,  1660,   155,   537,   301,  1660,
    1661,  1661,   834,  1819,  1819,  1819,  1819,  1601,  1819,  1819,
     772,   774,  1046,  1046,  1022,   774,  1016,   266,   585,  1827,
    1922,  1923,   266,   266,   266,    10,  1912,   523,   524,   527,
     528,   529,  1929,  1930,   318,  1273,     5,     7,     8,    31,
      33,    39,    73,   114,   145,   180,   184,   192,   195,   218,
     254,   255,   256,   279,   304,   325,   333,   335,   354,   361,
     373,   380,   395,   405,   409,   410,   416,   420,   428,   448,
     474,   478,   488,   525,   538,   540,   579,   585,   612,   623,
     624,   625,   644,   651,   682,   697,   698,   710,   713,  1054,
    1115,  1117,  1120,  1121,  1122,  1279,  1283,  1285,  1288,  1294,
    1295,  1296,  1298,  1299,  1578,  1818,   377,   647,   218,  1276,
    1825,  1957,    11,  1956,     6,   365,  1339,   876,  1433,   771,
     771,  1601,   771,  1601,  1601,  1819,  1819,  1604,  1819,  1601,
    1819,  1819,  1819,  1819,  1819,  1819,  1819,  1601,  1819,   391,
     561,   663,  1795,  1819,  1601,   803,  1819,  1602,  1046,  1046,
    1025,    99,  1660,   774,  1019,   779,  1512,  1696,  1426,   229,
    1590,   224,  1693,  1556,  1877,  1307,    92,   893,   772,  1433,
     944,  1927,   301,  1933,   577,   271,   762,   762,  1917,  1917,
    1917,  1917,   956,   179,  1672,  1375,  1813,  1379,   113,  1382,
    1767,    16,    17,    22,    23,    32,    58,    70,    90,   123,
     146,   147,   149,   157,   158,   159,   177,   212,   237,   243,
     268,   269,   270,   293,   294,   341,   343,   344,   359,   396,
     398,   421,   444,   455,   456,   487,   496,   542,   543,   544,
     550,   551,   567,   568,   591,   592,   610,   642,   702,   705,
     708,   715,   731,   750,  1171,  1172,  1174,  1175,  1176,  1177,
    1178,  1179,  1180,  1181,  1182,  1183,  1184,  1203,   461,    35,
      47,   774,   778,  1433,   942,   412,   417,  1433,  1433,   771,
    1189,  1190,  1190,   771,  1186,  1187,  1189,   771,  1187,  1192,
      56,   123,  1189,  1190,  1190,   123,  1190,  1189,   772,   772,
     772,   772,  1474,  1433,  1433,   772,   184,  1490,   772,   772,
     774,   774,   772,   774,   772,   124,  1466,  1467,   772,   772,
     772,   772,   774,   772,    92,   772,   772,   774,  1433,  1433,
    1433,  1433,   772,   772,    11,  1443,   772,    11,   772,   772,
     774,   772,   774,   772,   774,   772,   774,   772,   772,   772,
     772,   148,   176,   176,   772,   774,  1433,   772,   772,   774,
     774,   772,  1817,  1825,   779,   772,   771,  1218,  1218,    12,
      65,   636,   760,  1220,  1221,  1222,   774,   774,   772,  1433,
    1433,   779,   772,  1505,  1435,   772,   774,  1570,  1562,   184,
    1483,   772,  1428,  1471,  1067,  1068,  1069,  1825,   772,  1433,
    1604,    26,   771,  1081,   755,   771,  1071,  1830,   219,   772,
     774,   779,  1398,  1657,  1658,  1811,    94,    94,  1918,  1918,
    1918,  1918,    11,  1429,  1819,  1825,   762,  1817,  1874,  1874,
     772,   772,   374,   718,   210,  1825,  1825,  1874,  1859,  1861,
      57,    89,   148,   176,   276,  1588,  1710,  1719,   774,  1678,
    1659,  1553,  1671,   772,   774,   300,  1825,   771,   771,   203,
    1545,  1546,  1547,  1825,   771,  1735,   210,   349,   356,   372,
     382,   383,   384,   392,   533,   547,   633,   648,   685,   699,
     920,   919,  1891,  1588,   546,   755,   774,  1829,  1273,   395,
     345,   463,   645,  1256,  1256,   179,  1813,  1813,   135,   137,
     139,  1047,  1049,  1114,  1116,  1117,  1129,  1114,   771,   873,
     853,   840,  1956,   830,    58,   123,   212,   684,  1127,   829,
     825,  1414,  1414,   179,  1519,  1526,  1526,   179,  1521,  1433,
     771,  1056,  1825,  1541,  1542,   365,  1774,  1809,    11,   774,
    1809,  1433,   772,   774,  1603,  1603,  1603,  1603,  1603,  1603,
     838,  1016,   266,    11,   286,  1920,  1924,   185,  1913,  1601,
    1601,  1601,  1795,   760,  1599,  1600,  1929,   145,   281,   585,
    1274,    36,   195,   371,   586,   694,  1133,  1141,  1142,  1147,
    1148,  1237,  1241,  1242,  1300,  1300,   195,  1300,   195,   271,
      36,    91,   195,   586,   694,  1146,  1237,  1300,   408,  1660,
     195,    26,  1660,  1056,    11,   271,   755,  1309,  1660,  1660,
    1660,  1660,   733,  1660,  1660,  1660,  1660,   195,  1660,  1660,
     408,  1660,   128,   697,   128,  1660,   195,   697,  1660,  1660,
    1660,  1660,  1300,  1660,  1660,   195,   584,   195,   195,  1660,
    1660,   411,   531,  1825,  1660,  1660,   195,  1115,   774,  1053,
    1054,  1283,   771,   779,  1132,  1149,  1812,  1825,  1659,  1439,
    1939,   329,   427,   841,   271,   409,   416,   843,   772,   774,
    1958,  1959,    11,     6,   771,  1340,   967,   806,   807,  1601,
     808,   809,  1601,   804,   805,  1601,  1825,  1046,  1019,  1825,
    1556,  1825,   429,   229,  1424,  1383,  1797,    98,  1917,  1928,
    1928,  1928,  1928,    76,    77,   957,   414,  1382,   493,   113,
     220,  1773,  1189,  1191,  1190,   378,  1189,  1196,  1197,  1186,
     202,  1186,  1196,    17,   328,   346,   722,  1173,  1197,  1204,
    1214,  1216,    32,   293,  1173,  1179,  1181,  1196,  1173,  1186,
     771,  1196,  1173,  1189,  1191,  1173,  1190,   771,  1186,  1196,
      32,   294,   294,   296,  1186,  1189,   715,   771,   883,  1190,
    1190,  1190,   569,  1189,  1190,  1211,  1186,   296,  1191,  1191,
    1189,  1189,  1190,  1192,    61,   923,    92,    92,   887,  1825,
     876,   973,    57,   148,   176,   276,  1499,   176,   176,  1189,
    1500,  1501,   772,  1549,  1549,    26,   235,  1489,  1433,  1433,
    1505,   166,   344,   772,   301,  1468,  1433,  1433,  1433,  1549,
      58,    70,    90,   123,   212,   282,   396,   398,   550,   551,
     708,  1179,  1180,  1444,  1445,  1446,  1447,  1498,  1433,  1433,
    1433,  1433,    86,   275,  1601,  1609,  1549,  1433,  1433,  1825,
    1602,   772,  1228,  1223,  1221,  1223,  1224,  1601,  1825,   772,
    1505,   184,  1571,    26,   772,  1429,   772,   774,  1549,  1065,
     195,  1082,  1083,  1602,  1067,  1806,   762,  1825,   772,   774,
    1659,  1918,  1918,  1819,  1825,   779,  1659,  1659,  1860,  1865,
    1588,  1680,  1556,  1671,  1543,  1428,  1671,  1397,     6,  1284,
    1292,  1293,  1825,   772,   774,  1604,  1743,  1744,   437,   145,
     771,  1819,   810,  1274,   745,  1813,   820,   822,    36,   586,
    1130,  1131,  1132,  1133,  1141,  1142,   139,  1813,  1052,  1053,
     774,  1116,  1048,   874,   855,    14,   322,  1003,   179,    11,
     864,   865,   668,   864,  1956,  1518,   286,  1520,   286,  1548,
     113,   285,   448,  1536,  1537,  1540,    79,    82,   181,   265,
    1775,  1776,   142,  1777,  1585,  1567,  1566,  1585,  1428,  1614,
     585,  1819,  1922,   176,   176,   436,   111,  1259,  1812,  1112,
      93,   111,  1111,   733,    33,    91,   203,   280,  1145,  1236,
    1112,  1237,  1238,  1238,  1111,  1636,  1358,  1636,  1284,  1204,
    1636,   129,  1637,    93,  1636,   733,   203,  1636,  1636,  1660,
      61,  1825,  1358,  1579,  1580,  1811,    61,  1601,  1608,  1055,
    1813,    61,  1601,    61,  1601,    61,  1601,  1118,    61,  1825,
    1604,  1601,  1601,  1358,  1819,  1819,  1660,  1601,  1827,  1293,
     443,   490,   561,  1126,  1601,  1604,  1604,  1636,    61,  1601,
    1819,  1358,  1358,  1358,    61,   376,   378,   415,   444,   580,
     616,  1125,  1608,  1601,  1608,  1284,     5,    73,  1296,  1128,
    1130,  1825,   322,   443,  1308,   215,  1230,  1150,   779,    61,
    1605,  1819,  1825,   597,  1433,  1433,   179,   847,   853,   179,
     373,   848,  1825,  1397,  1958,  1341,   476,   267,   772,   774,
     772,   774,   772,   774,    94,   429,   577,  1928,   301,  1932,
    1932,  1932,  1932,   876,   953,  1673,   122,  1196,  1195,  1659,
    1196,   282,   307,   659,  1188,  1188,  1214,  1215,  1216,  1205,
      17,  1217,   378,  1198,  1196,  1173,  1188,  1260,  1790,  1196,
    1260,  1188,   296,  1188,  1196,   569,   880,   881,   882,  1825,
     923,  1173,   879,   921,  1173,  1188,   214,  1185,  1215,  1217,
    1173,  1196,  1188,  1188,  1433,   889,   897,   898,  1601,   771,
     890,   417,   772,   772,   772,   772,  1215,   774,  1215,  1215,
     772,   772,  1491,  1809,  1790,   140,  1492,  1493,  1494,   772,
     774,   772,   489,   539,   607,   772,   772,   772,   772,  1186,
     123,  1190,    32,  1190,  1448,   772,   772,   772,   772,   774,
     772,   772,   772,  1219,   772,   774,   772,    26,   207,   229,
    1572,  1573,  1809,  1069,   677,  1106,   129,   463,  1084,   772,
     774,   772,   779,  1658,  1671,   762,  1874,  1874,  1581,   772,
     772,   774,  1546,   772,   774,    10,  1745,  1669,  1827,   818,
     771,   771,    92,  1143,   772,   774,  1813,  1050,  1773,  1116,
    1114,   117,   124,   189,   869,   870,   871,   872,   856,   857,
    1939,  1975,    63,   119,   283,  1004,   647,  1958,   772,   866,
     867,   868,  1825,  1819,   772,    11,  1433,   771,  1433,   771,
     772,  1237,  1237,  1537,    26,    26,    79,    26,  1776,   253,
     265,  1778,  1779,   771,    61,   121,   552,  1439,  1358,   771,
    1439,  1143,   771,   129,   129,  1238,  1112,  1259,  1825,  1112,
    1112,  1812,  1284,  1812,  1281,  1206,  1812,  1636,  1292,    92,
     129,  1812,  1812,  1819,  1284,   774,  1585,  1059,   771,  1602,
    1819,   301,  1149,  1284,  1289,  1284,   772,  1825,  1813,   653,
    1151,  1171,  1825,  1549,   661,  1819,   412,  1277,   301,  1960,
    1344,  1825,     6,   771,  1342,   876,   807,   809,   805,  1436,
    1932,    98,  1929,  1934,  1935,   129,   264,  1825,   307,   282,
    1195,   772,   774,   772,   879,  1203,   772,   774,   923,   779,
     755,  1217,   186,   246,   248,   895,   896,   897,   900,  1439,
    1825,   866,    92,    92,   176,   774,  1585,   772,  1495,  1590,
    1433,   539,   435,  1215,  1604,   772,  1601,  1584,   772,    15,
     390,   398,   705,   708,   717,  1574,  1575,  1794,  1585,  1601,
    1066,   771,  1072,  1085,  1825,  1083,   762,  1592,  1293,  1744,
     409,   772,   576,   771,  1257,  1258,  1825,  1257,  1825,  1131,
     772,    11,  1107,  1052,   772,   774,   868,    67,   925,   179,
     841,   634,  1969,   774,   642,   715,  1203,  1969,  1958,  1548,
    1548,    92,  1535,  1535,  1790,  1790,    26,  1790,    26,    26,
    1779,   266,   176,    84,  1286,  1825,    84,  1433,  1112,  1259,
    1825,   286,  1249,   715,  1259,  1259,    73,   237,  1149,  1352,
    1211,  1812,  1825,  1307,  1280,  1580,  1738,   264,  1308,  1290,
    1292,  1282,   771,  1231,  1153,  1144,  1145,  1152,   779,   842,
     849,   850,    33,   348,   498,   772,   774,  1343,   271,   577,
    1935,   283,  1813,  1215,  1790,  1215,   923,   881,  1825,   176,
     774,   925,   450,   772,   892,   995,   772,  1809,   570,   774,
     772,   772,   772,   717,  1575,  1576,  1794,   642,   595,   430,
    1577,   595,   771,  1079,  1075,    61,   291,   292,   390,   466,
    1086,   353,   771,  1257,   772,   774,  1585,   771,   772,   771,
    1051,  1050,   871,  1427,   846,   847,  1970,   855,  1971,   868,
     715,   883,   569,  1971,   772,   772,    99,   127,   184,  1539,
    1538,  1790,  1790,  1790,   772,   399,  1812,   583,   771,  1287,
     774,   772,  1259,  1249,   715,  1256,  1134,  1256,  1136,  1137,
      61,    61,  1308,  1358,   772,  1813,  1291,  1330,  1232,  1825,
     153,  1233,   203,   280,   304,   373,   486,   743,  1154,  1155,
    1164,  1200,  1201,  1202,  1229,  1439,  1818,    34,    61,   175,
     179,   333,   454,   653,  1158,  1160,  1193,  1194,  1201,  1825,
     677,   844,   925,   577,    33,    33,  1825,   203,  1345,  1346,
    1825,  1436,  1674,  1524,   779,   896,   989,  1585,  1590,  1590,
     447,    10,   447,    99,   390,   561,   704,  1077,  1078,  1825,
     772,   688,  1080,  1088,   703,   114,   373,   380,   395,   525,
     538,   558,   697,  1102,  1103,  1104,  1713,   837,   772,  1877,
    1258,   176,  1877,  1825,  1119,  1120,  1965,   843,  1203,  1972,
     569,  1825,    26,    26,   771,   771,  1145,  1602,  1082,  1825,
    1140,  1138,  1256,   771,  1135,   771,   771,   760,   761,   771,
    1168,  1169,  1170,  1408,  1454,  1793,  1818,  1056,   122,   772,
     774,   451,   582,   660,   179,  1234,   129,  1819,   694,  1201,
     733,   129,   175,  1659,  1210,  1170,   283,   326,    61,    11,
     378,  1194,  1199,  1433,   418,   845,   577,   577,   772,   774,
    1681,  1682,  1811,  1768,  1825,  1576,   642,   186,   314,   772,
     774,  1602,   771,  1090,  1092,  1087,   408,  1660,  1660,   408,
    1660,  1660,  1660,  1660,   771,  1097,  1104,   420,   772,  1877,
     301,   373,   488,  1244,  1248,  1252,  1255,  1818,  1585,   772,
    1245,  1247,  1252,  1254,   774,  1813,   848,   924,  1825,   779,
    1545,  1547,   772,   772,   771,   771,  1139,  1257,   771,  1257,
    1257,  1795,  1795,  1167,   771,  1825,    63,   283,    61,  1605,
    1819,  1825,   172,   729,   642,  1168,  1195,  1193,  1433,  1346,
     774,  1659,  1207,  1076,  1078,   771,  1091,  1092,  1093,   155,
    1089,  1092,  1660,  1819,  1819,  1660,  1605,  1605,  1602,  1827,
     689,  1098,  1099,  1660,   286,   715,  1243,  1246,  1251,  1252,
    1253,   581,  1819,  1660,  1297,  1298,  1299,  1255,  1659,  1297,
    1254,  1825,    92,   412,   779,  1825,   772,   772,  1257,  1257,
     771,   772,  1257,   772,   772,   772,  1082,    28,   223,   237,
     561,  1235,  1235,   771,  1430,   417,   678,  1159,  1682,  1671,
    1769,  1080,   772,   774,   155,  1095,  1096,  1436,  1819,  1819,
    1100,   772,   774,  1123,  1256,  1256,  1297,  1253,  1818,  1601,
    1299,  1298,    61,  1605,  1819,  1825,   772,  1427,   849,  1825,
     779,   772,   772,  1257,  1243,   772,  1244,  1245,   772,    61,
     175,   319,   179,   179,   772,  1602,  1156,  1157,  1200,  1156,
     587,   683,   736,  1161,   229,  1780,  1092,   774,  1094,  1101,
    1827,  1099,  1966,  1825,  1230,  1243,   772,  1243,   283,    63,
     772,  1200,  1162,  1163,  1164,   471,  1774,  1096,   772,  1102,
      75,  1243,  1235,  1235,  1164,    26,  1777,   642,  1790,   113,
    1781,  1967,   176,   771,  1783,   446,   594,  1961,  1962,   142,
     229,  1782,   772,   780,  1784,  1785,  1811,   237,  1786,  1827,
    1968,  1827,   772,   774,  1787,  1788,  1811,   925,  1785,   774,
    1659,  1788,  1427,  1671,  1428
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   782,   783,   784,   783,   783,   785,   785,   786,   786,
     786,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     788,   789,   789,   791,   790,   792,   793,   794,   792,   795,
     796,   795,   797,   797,   799,   798,   801,   800,   802,   802,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     804,   804,   804,   805,   806,   806,   806,   807,   808,   808,
     808,   809,   810,   810,   810,   810,   810,   810,   810,   811,
     811,   812,   814,   815,   813,   816,   813,   817,   818,   813,
     819,   820,   813,   821,   822,   813,   823,   813,   824,   813,
     825,   813,   826,   813,   827,   813,   828,   813,   829,   813,
     830,   813,   813,   813,   813,   813,   813,   831,   813,   832,
     832,   833,   833,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   836,   835,   837,
     837,   838,   838,   838,   838,   838,   838,   838,   840,   839,
     842,   841,   841,   843,   843,   843,   843,   844,   844,   845,
     845,   846,   846,   847,   848,   848,   850,   849,   851,   852,
     852,   853,   853,   854,   854,   855,   855,   856,   856,   856,
     856,   856,   856,   856,   857,   857,   858,   858,   860,   859,
     861,   861,   862,   862,   863,   863,   864,   865,   864,   866,
     866,   867,   868,   868,   868,   868,   868,   868,   869,   869,
     870,   870,   871,   872,   872,   872,   872,   874,   873,   875,
     875,   876,   876,   877,   877,   878,   879,   879,   879,   880,
     881,   882,   882,   883,   884,   885,   885,   885,   885,   886,
     886,   886,   887,   886,   889,   888,   890,   890,   891,   893,
     892,   894,   894,   894,   894,   895,   895,   896,   897,   897,
     898,   899,   899,   900,   900,   900,   900,   900,   900,   901,
     901,   902,   903,   903,   904,   904,   905,   905,   906,   906,
     907,   907,   907,   908,   908,   908,   908,   908,   908,   908,
     908,   908,   908,   908,   908,   909,   910,   911,   911,   912,
     912,   913,   913,   914,   915,   915,   916,   916,   916,   917,
     918,   918,   919,   920,   920,   920,   920,   920,   920,   920,
     920,   920,   920,   920,   920,   920,   921,   921,   922,   922,
     923,   923,   924,   924,   924,   924,   924,   925,   925,   925,
     925,   925,   925,   925,   925,   925,   925,   926,   926,   926,
     926,   928,   927,   930,   929,   931,   931,   933,   932,   932,
     935,   934,   936,   936,   936,   936,   937,   937,   937,   937,
     938,   939,   940,   941,   943,   942,   945,   944,   946,   946,
     947,   947,   948,   949,   949,   949,   950,   950,   951,   952,
     952,   954,   955,   956,   953,   957,   957,   957,   959,   958,
     961,   962,   960,   960,   963,   963,   964,   964,   966,   967,
     965,   969,   970,   968,   971,   971,   972,   973,   973,   974,
     976,   975,   978,   977,   980,   979,   981,   981,   982,   983,
     983,   983,   984,   986,   985,   988,   987,   989,   991,   990,
     992,   990,   993,   994,   995,   990,   996,   990,   998,   997,
     999,   997,  1000,  1001,   997,  1002,   997,  1003,  1003,  1004,
    1004,  1004,  1005,  1006,  1007,  1008,  1008,  1009,  1009,  1010,
    1011,  1012,  1012,  1014,  1013,  1015,  1015,  1015,  1016,  1016,
    1016,  1017,  1018,  1018,  1018,  1019,  1019,  1019,  1019,  1019,
    1019,  1019,  1019,  1020,  1021,  1021,  1021,  1022,  1022,  1022,
    1022,  1022,  1023,  1024,  1024,  1024,  1025,  1025,  1025,  1025,
    1025,  1025,  1025,  1026,  1027,  1027,  1027,  1028,  1028,  1028,
    1029,  1030,  1031,  1032,  1033,  1034,  1034,  1034,  1035,  1036,
    1037,  1038,  1039,  1040,  1041,  1042,  1043,  1044,  1044,  1045,
    1045,  1046,  1046,  1048,  1047,  1047,  1047,  1049,  1049,  1050,
    1050,  1051,  1051,  1052,  1053,  1053,  1055,  1054,  1056,  1058,
    1057,  1060,  1059,  1061,  1062,  1061,  1061,  1061,  1063,  1061,
    1061,  1064,  1061,  1065,  1065,  1066,  1066,  1067,  1067,  1068,
    1068,  1069,  1070,  1071,  1072,  1073,  1073,  1074,  1075,  1074,
    1076,  1074,  1077,  1077,  1078,  1079,  1080,  1080,  1081,  1081,
    1082,  1082,  1084,  1083,  1085,  1086,  1087,  1086,  1088,  1086,
    1086,  1086,  1086,  1089,  1089,  1090,  1090,  1091,  1091,  1093,
    1094,  1092,  1095,  1095,  1096,  1096,  1097,  1097,  1098,  1098,
    1100,  1099,  1101,  1102,  1102,  1103,  1103,  1104,  1104,  1104,
    1104,  1104,  1104,  1104,  1104,  1104,  1105,  1105,  1105,  1106,
    1106,  1107,  1107,  1108,  1108,  1109,  1109,  1110,  1110,  1111,
    1111,  1112,  1112,  1113,  1113,  1114,  1114,  1115,  1115,  1116,
    1116,  1116,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1118,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1119,  1119,  1120,  1121,  1122,  1123,  1124,  1125,  1125,
    1125,  1125,  1125,  1125,  1125,  1126,  1126,  1126,  1127,  1127,
    1127,  1127,  1128,  1129,  1130,  1130,  1131,  1131,  1131,  1131,
    1131,  1132,  1132,  1134,  1133,  1135,  1133,  1136,  1133,  1137,
    1133,  1138,  1133,  1139,  1133,  1140,  1133,  1141,  1142,  1143,
    1144,  1144,  1145,  1146,  1146,  1147,  1147,  1148,  1150,  1149,
    1152,  1151,  1153,  1151,  1154,  1154,  1155,  1155,  1156,  1156,
    1157,  1157,  1158,  1158,  1158,  1158,  1159,  1158,  1158,  1158,
    1160,  1160,  1161,  1161,  1161,  1161,  1162,  1162,  1163,  1163,
    1164,  1164,  1164,  1164,  1166,  1165,  1167,  1167,  1168,  1168,
    1169,  1169,  1170,  1170,  1171,  1171,  1171,  1171,  1171,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1173,
    1173,  1173,  1173,  1174,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,  1175,  1175,  1175,  1175,  1175,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1177,  1177,  1178,  1178,  1178,  1178,  1178,  1178,
    1178,  1178,  1179,  1180,  1180,  1181,  1181,  1182,  1182,  1182,
    1182,  1182,  1183,  1183,  1183,  1183,  1183,  1184,  1184,  1184,
    1185,  1185,  1186,  1186,  1186,  1187,  1188,  1188,  1188,  1188,
    1188,  1188,  1189,  1189,  1189,  1189,  1190,  1190,  1191,  1191,
    1192,  1192,  1193,  1193,  1194,  1194,  1194,  1194,  1194,  1194,
    1194,  1195,  1195,  1196,  1196,  1197,  1198,  1199,  1200,  1200,
    1200,  1201,  1201,  1201,  1201,  1201,  1201,  1202,  1202,  1203,
    1204,  1204,  1205,  1205,  1206,  1206,  1207,  1207,  1208,  1208,
    1209,  1209,  1210,  1211,  1211,  1212,  1212,  1213,  1213,  1214,
    1214,  1214,  1215,  1215,  1216,  1216,  1216,  1216,  1217,  1217,
    1219,  1218,  1220,  1220,  1221,  1222,  1222,  1222,  1222,  1223,
    1224,  1225,  1225,  1226,  1227,  1227,  1228,  1228,  1229,  1229,
    1230,  1231,  1231,  1232,  1232,  1233,  1233,  1233,  1233,  1234,
    1234,  1234,  1234,  1234,  1235,  1235,  1235,  1235,  1235,  1236,
    1236,  1237,  1237,  1238,  1238,  1239,  1239,  1239,  1240,  1240,
    1241,  1242,  1243,  1243,  1244,  1244,  1245,  1245,  1246,  1246,
    1247,  1247,  1248,  1248,  1249,  1249,  1250,  1250,  1250,  1251,
    1251,  1252,  1252,  1252,  1252,  1252,  1252,  1253,  1253,  1254,
    1255,  1255,  1256,  1256,  1256,  1257,  1257,  1258,  1258,  1259,
    1259,  1260,  1260,  1262,  1263,  1261,  1264,  1261,  1261,  1265,
    1261,  1266,  1261,  1267,  1261,  1268,  1261,  1269,  1261,  1261,
    1261,  1261,  1261,  1270,  1261,  1261,  1271,  1272,  1261,  1273,
    1273,  1273,  1274,  1274,  1274,  1274,  1274,  1275,  1275,  1275,
    1275,  1276,  1276,  1277,  1277,  1278,  1278,  1279,  1279,  1279,
    1279,  1279,  1279,  1279,  1279,  1279,  1279,  1280,  1279,  1279,
    1281,  1279,  1282,  1279,  1279,  1279,  1279,  1279,  1283,  1284,
    1284,  1286,  1285,  1287,  1287,  1287,  1289,  1288,  1290,  1291,
    1290,  1292,  1292,  1293,  1294,  1294,  1295,  1296,  1296,  1296,
    1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,
    1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,
    1296,  1296,  1296,  1296,  1296,  1296,  1297,  1297,  1297,  1297,
    1297,  1298,  1298,  1299,  1299,  1300,  1300,  1301,  1301,  1303,
    1302,  1304,  1304,  1305,  1305,  1306,  1306,  1307,  1307,  1307,
    1308,  1308,  1308,  1309,  1309,  1309,  1309,  1311,  1310,  1312,
    1310,  1310,  1310,  1313,  1314,  1314,  1315,  1315,  1316,  1316,
    1316,  1318,  1317,  1319,  1319,  1320,  1320,  1320,  1321,  1321,
    1321,  1322,  1322,  1324,  1323,  1325,  1325,  1325,  1326,  1327,
    1326,  1329,  1328,  1330,  1330,  1331,  1331,  1332,  1332,  1332,
    1333,  1333,  1335,  1334,  1336,  1336,  1337,  1338,  1338,  1339,
    1339,  1340,  1341,  1340,  1342,  1343,  1342,  1344,  1344,  1344,
    1345,  1345,  1345,  1346,  1346,  1347,  1347,  1348,  1349,  1348,
    1351,  1350,  1352,  1352,  1353,  1353,  1354,  1354,  1354,  1354,
    1354,  1354,  1355,  1355,  1357,  1356,  1358,  1358,  1358,  1360,
    1359,  1359,  1361,  1361,  1362,  1362,  1363,  1365,  1364,  1366,
    1366,  1367,  1367,  1368,  1369,  1370,  1370,  1372,  1371,  1373,
    1373,  1374,  1374,  1375,  1376,  1378,  1377,  1380,  1379,  1381,
    1381,  1382,  1382,  1384,  1383,  1385,  1383,  1387,  1386,  1388,
    1386,  1389,  1389,  1391,  1390,  1393,  1394,  1392,  1395,  1396,
    1397,  1397,  1398,  1398,  1400,  1399,  1401,  1399,  1402,  1402,
    1403,  1404,  1403,  1403,  1405,  1405,  1406,  1407,  1408,  1408,
    1409,  1409,  1410,  1411,  1411,  1412,  1412,  1413,  1413,  1413,
    1414,  1414,  1414,  1415,  1416,  1416,  1417,  1417,  1418,  1418,
    1418,  1418,  1419,  1419,  1420,  1420,  1420,  1421,  1421,  1422,
    1422,  1423,  1423,  1423,  1424,  1424,  1424,  1425,  1425,  1426,
    1427,  1428,  1429,  1429,  1429,  1429,  1429,  1430,  1430,  1430,
    1431,  1431,  1431,  1432,  1432,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1434,  1434,  1434,  1434,
    1434,  1434,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,
    1435,  1435,  1435,  1435,  1435,  1435,  1436,  1436,  1436,  1436,
    1436,  1436,  1436,  1436,  1436,  1436,  1436,  1436,  1436,  1436,
    1436,  1436,  1436,  1436,  1436,  1437,  1437,  1438,  1438,  1439,
    1439,  1440,  1440,  1441,  1441,  1441,  1441,  1441,  1441,  1442,
    1442,  1443,  1443,  1444,  1444,  1444,  1445,  1445,  1445,  1445,
    1445,  1445,  1446,  1446,  1446,  1448,  1447,  1447,  1449,  1450,
    1450,  1451,  1451,  1451,  1451,  1452,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1455,  1455,  1455,  1455,  1456,  1456,  1457,
    1457,  1457,  1457,  1457,  1457,  1458,  1458,  1459,  1459,  1460,
    1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,
    1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1465,  1464,
    1464,  1466,  1466,  1467,  1467,  1468,  1468,  1469,  1469,  1470,
    1470,  1471,  1472,  1472,  1472,  1472,  1472,  1472,  1472,  1473,
    1474,  1472,  1472,  1472,  1472,  1472,  1472,  1472,  1472,  1472,
    1472,  1472,  1475,  1472,  1476,  1476,  1477,  1477,  1477,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1479,  1481,  1480,  1480,  1482,  1482,  1483,  1484,
    1486,  1485,  1487,  1487,  1487,  1487,  1488,  1488,  1489,  1489,
    1490,  1490,  1491,  1491,  1492,  1492,  1493,  1494,  1495,  1495,
    1495,  1497,  1496,  1498,  1499,  1498,  1500,  1498,  1501,  1498,
    1498,  1498,  1498,  1502,  1502,  1502,  1502,  1502,  1502,  1502,
    1502,  1503,  1503,  1503,  1503,  1504,  1504,  1505,  1505,  1506,
    1506,  1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1513,  1513,  1514,  1514,  1515,  1516,  1515,  1517,
    1515,  1515,  1518,  1515,  1519,  1515,  1515,  1520,  1515,  1521,
    1515,  1515,  1522,  1522,  1522,  1523,  1523,  1524,  1524,  1525,
    1526,  1526,  1526,  1526,  1527,  1527,  1528,  1528,  1529,  1529,
    1530,  1530,  1531,  1531,  1532,  1533,  1534,  1534,  1535,  1535,
    1535,  1535,  1536,  1536,  1538,  1537,  1539,  1537,  1540,  1540,
    1541,  1542,  1541,  1544,  1543,  1545,  1545,  1546,  1546,  1547,
    1547,  1548,  1548,  1549,  1549,  1549,  1549,  1549,  1549,  1549,
    1549,  1549,  1549,  1549,  1549,  1550,  1550,  1550,  1550,  1550,
    1550,  1550,  1550,  1550,  1551,  1551,  1551,  1551,  1552,  1552,
    1552,  1553,  1553,  1554,  1555,  1555,  1556,  1557,  1556,  1558,
    1559,  1558,  1560,  1560,  1561,  1561,  1562,  1562,  1563,  1563,
    1563,  1564,  1564,  1565,  1565,  1566,  1568,  1567,  1569,  1569,
    1570,  1570,  1571,  1571,  1572,  1572,  1573,  1573,  1574,  1574,
    1575,  1575,  1575,  1576,  1576,  1576,  1577,  1577,  1577,  1577,
    1577,  1577,  1578,  1579,  1579,  1580,  1581,  1581,  1583,  1582,
    1584,  1584,  1585,  1585,  1585,  1586,  1586,  1587,  1587,  1587,
    1588,  1589,  1589,  1589,  1590,  1590,  1590,  1590,  1590,  1590,
    1591,  1592,  1592,  1592,  1592,  1593,  1593,  1593,  1594,  1594,
    1595,  1596,  1597,  1597,  1597,  1598,  1598,  1599,  1599,  1600,
    1600,  1601,  1601,  1601,  1601,  1601,  1601,  1602,  1602,  1602,
    1602,  1602,  1603,  1603,  1603,  1603,  1604,  1604,  1604,  1604,
    1604,  1605,  1605,  1605,  1605,  1605,  1606,  1607,  1607,  1608,
    1608,  1609,  1609,  1609,  1611,  1610,  1612,  1612,  1613,  1613,
    1614,  1616,  1615,  1617,  1617,  1618,  1619,  1619,  1619,  1620,
    1622,  1623,  1621,  1621,  1621,  1625,  1624,  1627,  1626,  1628,
    1626,  1626,  1626,  1626,  1626,  1626,  1626,  1629,  1626,  1626,
    1626,  1626,  1626,  1626,  1630,  1626,  1631,  1631,  1632,  1633,
    1634,  1634,  1635,  1636,  1636,  1637,  1637,  1638,  1638,  1640,
    1641,  1639,  1643,  1644,  1642,  1645,  1645,  1645,  1645,  1646,
    1646,  1647,  1647,  1649,  1648,  1650,  1650,  1651,  1650,  1652,
    1653,  1653,  1654,  1654,  1655,  1656,  1656,  1657,  1657,  1658,
    1659,  1659,  1660,  1660,  1661,  1661,  1662,  1662,  1664,  1663,
    1666,  1665,  1667,  1667,  1668,  1668,  1669,  1669,  1670,  1670,
    1671,  1671,  1671,  1672,  1673,  1674,  1672,  1675,  1675,  1677,
    1678,  1676,  1679,  1679,  1680,  1681,  1681,  1682,  1683,  1683,
    1685,  1684,  1686,  1686,  1687,  1687,  1688,  1689,  1690,  1691,
    1690,  1692,  1690,  1693,  1693,  1694,  1694,  1695,  1695,  1696,
    1696,  1697,  1697,  1698,  1698,  1698,  1700,  1699,  1701,  1701,
    1702,  1702,  1703,  1703,  1704,  1704,  1704,  1704,  1704,  1704,
    1704,  1704,  1704,  1705,  1705,  1707,  1706,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1709,  1708,  1710,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1708,  1708,  1708,  1708,  1711,  1711,
    1711,  1712,  1712,  1713,  1713,  1714,  1714,  1715,  1715,  1716,
    1716,  1717,  1717,  1718,  1718,  1719,  1719,  1719,  1721,  1720,
    1722,  1720,  1723,  1723,  1723,  1723,  1723,  1723,  1724,  1724,
    1725,  1726,  1726,  1726,  1726,  1727,  1727,  1728,  1728,  1728,
    1730,  1729,  1732,  1731,  1731,  1733,  1733,  1734,  1735,  1734,
    1736,  1736,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1738,
    1738,  1739,  1740,  1741,  1740,  1740,  1742,  1742,  1743,  1743,
    1743,  1744,  1745,  1745,  1747,  1746,  1748,  1748,  1750,  1749,
    1751,  1749,  1749,  1752,  1752,  1753,  1753,  1754,  1755,  1754,
    1757,  1756,  1758,  1758,  1758,  1759,  1759,  1759,  1759,  1760,
    1760,  1762,  1761,  1763,  1763,  1764,  1766,  1767,  1768,  1769,
    1765,  1770,  1770,  1771,  1771,  1772,  1772,  1772,  1773,  1773,
    1773,  1774,  1774,  1775,  1775,  1776,  1776,  1776,  1776,  1777,
    1777,  1778,  1778,  1779,  1779,  1780,  1780,  1781,  1781,  1782,
    1782,  1783,  1783,  1783,  1784,  1784,  1785,  1785,  1786,  1786,
    1787,  1787,  1788,  1789,  1789,  1789,  1789,  1790,  1790,  1791,
    1791,  1791,  1792,  1792,  1792,  1793,  1793,  1794,  1794,  1794,
    1794,  1794,  1794,  1794,  1794,  1794,  1794,  1795,  1795,  1795,
    1795,  1795,  1796,  1796,  1796,  1798,  1797,  1799,  1799,  1800,
    1800,  1802,  1801,  1803,  1803,  1804,  1804,  1805,  1806,  1806,
    1807,  1807,  1808,  1808,  1809,  1810,  1810,  1810,  1810,  1810,
    1811,  1811,  1811,  1811,  1811,  1812,  1812,  1812,  1812,  1813,
    1813,  1813,  1814,  1814,  1815,  1816,  1816,  1817,  1817,  1817,
    1818,  1819,  1820,  1821,  1822,  1822,  1823,  1823,  1824,  1824,
    1824,  1825,  1825,  1826,  1826,  1827,  1827,  1827,  1828,  1828,
    1828,  1829,  1829,  1830,  1831,  1831,  1831,  1831,  1831,  1831,
    1831,  1831,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1833,  1833,  1833,  1833,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1836,  1836,  1836,  1836,  1836,  1836,  1836,  1836,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1838,  1838,  1838,  1838,  1838,
    1838,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,  1839,
    1839,  1840,  1840,  1840,  1841,  1841,  1841,  1842,  1842,  1842,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,  1844,
    1844,  1846,  1845,  1847,  1848,  1845,  1849,  1849,  1851,  1850,
    1852,  1850,  1853,  1850,  1855,  1854,  1854,  1856,  1856,  1858,
    1857,  1859,  1857,  1861,  1860,  1860,  1862,  1862,  1862,  1863,
    1863,  1863,  1863,  1864,  1864,  1864,  1864,  1865,  1865,  1865,
    1866,  1866,  1866,  1866,  1866,  1866,  1866,  1866,  1866,  1866,
    1866,  1866,  1866,  1866,  1866,  1867,  1867,  1867,  1867,  1868,
    1869,  1870,  1870,  1871,  1871,  1871,  1871,  1872,  1872,  1873,
    1873,  1873,  1874,  1874,  1874,  1874,  1874,  1876,  1875,  1877,
    1877,  1877,  1878,  1878,  1879,  1879,  1880,  1881,  1881,  1881,
    1881,  1881,  1883,  1882,  1885,  1884,  1886,  1886,  1887,  1886,
    1888,  1888,  1889,  1889,  1890,  1890,  1890,  1890,  1891,  1890,
    1892,  1892,  1892,  1892,  1892,  1893,  1894,  1894,  1894,  1894,
    1894,  1894,  1894,  1894,  1895,  1895,  1896,  1897,  1897,  1897,
    1897,  1897,  1897,  1897,  1898,  1898,  1899,  1899,  1900,  1900,
    1901,  1902,  1902,  1903,  1903,  1904,  1904,  1905,  1905,  1906,
    1906,  1908,  1907,  1909,  1907,  1910,  1907,  1911,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1907,  1907,  1907,  1912,  1912,  1913,  1913,
    1914,  1914,  1914,  1915,  1915,  1915,  1915,  1916,  1916,  1917,
    1917,  1918,  1918,  1919,  1919,  1920,  1920,  1921,  1921,  1921,
    1921,  1922,  1922,  1923,  1924,  1924,  1924,  1925,  1925,  1926,
    1926,  1927,  1928,  1928,  1928,  1928,  1928,  1929,  1929,  1929,
    1929,  1929,  1930,  1930,  1931,  1931,  1932,  1932,  1933,  1933,
    1934,  1934,  1935,  1935,  1937,  1936,  1938,  1939,  1939,  1940,
    1940,  1941,  1941,  1941,  1942,  1942,  1942,  1943,  1944,  1944,
    1944,  1945,  1946,  1947,  1947,  1947,  1948,  1948,  1948,  1949,
    1949,  1949,  1949,  1949,  1949,  1949,  1949,  1950,  1950,  1951,
    1952,  1953,  1953,  1953,  1954,  1954,  1955,  1955,  1956,  1956,
    1957,  1957,  1959,  1958,  1960,  1960,  1960,  1960,  1961,  1961,
    1962,  1962,  1964,  1965,  1966,  1967,  1968,  1963,  1970,  1969,
    1972,  1971,  1974,  1975,  1973,  1976,  1976,  1976,  1976,  1976,
    1976,  1977,  1977,  1978,  1978,  1978,  1979,  1979,  1979,  1980,
    1980,  1980,  1981,  1981,  1982,  1983,  1982,  1984,  1984,  1985,
    1985,  1986,  1986,  1987
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     5,     3,     0,     0,     6,     0,
       0,     3,     1,     3,     0,     3,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     1,
       0,     1,     3,     1,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     1,     0,     0,     8,     0,     8,     0,     0,    16,
       0,     0,    15,     0,     0,    15,     0,     6,     0,    10,
       0,    11,     0,     5,     0,     6,     0,     5,     0,    12,
       0,    12,    10,     9,     6,     4,     3,     0,     3,     0,
       1,     1,     2,     3,     2,     1,     3,     2,     1,     3,
       3,     3,     1,     1,     1,     1,     3,     0,    12,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     4,     0,     2,     0,     2,     0,     0,
       1,     3,     1,     0,     2,     0,     2,     2,     2,     2,
       2,     3,     3,     1,     1,     2,     3,     3,     0,     4,
       0,     3,     0,     1,     3,     1,     0,     0,     2,     3,
       1,     1,     2,     6,     8,     5,     7,     3,     0,     1,
       3,     1,     2,     0,     1,     1,     1,     0,     4,     0,
       3,     2,     3,     0,     3,     2,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     6,     4,     1,
       4,     1,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     3,     0,     3,     1,     3,
       0,     3,     3,     3,     4,     5,     2,     4,     2,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     0,     6,
       0,     0,     4,     1,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     2,     0,     1,     1,
       0,     7,     0,     5,     0,     7,     0,     1,     2,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     5,     3,     1,     2,     4,     0,
       4,     1,     4,     1,     0,     1,     0,     4,     0,     0,
       3,     0,     6,     6,     0,     4,     2,     2,     0,     3,
       2,     0,     3,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     3,     3,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     6,     1,     0,     0,     4,     0,     3,
       1,     1,     1,     1,     1,     1,     3,     1,     3,     0,
       0,     5,     1,     3,     1,     1,     0,     3,     1,     3,
       0,     4,     1,     0,     1,     2,     1,     3,     4,     3,
       3,     3,     3,     4,     4,     3,     0,     4,     2,     0,
       2,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       3,     0,     3,     1,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     2,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       2,     1,     2,     0,     9,     0,    10,     0,     9,     0,
       9,     0,    10,     0,    11,     0,    10,     2,     7,     7,
       0,     1,     4,     0,     1,     0,     1,     2,     0,     4,
       0,     3,     0,     3,     0,     1,     2,     1,     0,     1,
       2,     1,     0,     1,     2,     3,     0,     6,     5,     5,
       0,     2,     0,     1,     1,     1,     0,     1,     2,     1,
       1,     2,     2,     1,     0,     3,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     2,     1,     1,     3,     3,     3,     3,     0,
       1,     2,     2,     3,     3,     2,     3,     3,     4,     3,
       3,     3,     1,     2,     2,     2,     2,     3,     3,     2,
       3,     2,     2,     3,     3,     2,     3,     2,     2,     2,
       2,     2,     5,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     3,     0,     1,     1,     5,     0,     1,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     2,     1,     1,     2,     4,     1,     3,     2,
       1,     0,     2,     0,     1,     2,     2,     2,     2,     2,
       1,     1,     3,     3,     3,     3,     2,     1,     2,     2,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     0,     1,     2,
       1,     1,     0,     1,     1,     2,     1,     2,     0,     1,
       0,     4,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     1,     3,     3,     1,     1,     0,     2,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     0,     2,     0,     2,     2,     2,
       2,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     1,     1,     1,     4,     2,     1,     4,     0,
       1,     1,     3,     0,     0,     8,     0,     5,     7,     0,
       5,     0,     5,     0,    10,     0,     9,     0,    11,     3,
       4,     3,     3,     0,     8,     9,     0,     0,     7,     0,
       2,     2,     0,     2,     3,     3,     5,     0,     3,     1,
       4,     0,     3,     0,     2,     0,     1,     0,     2,     2,
       2,     2,     1,     1,     1,     4,     4,     0,     6,     4,
       0,     5,     0,     6,     4,     3,     1,     7,     2,     1,
       1,     0,     6,     0,     3,     2,     0,     5,     0,     0,
       6,     1,     3,     1,     1,     3,     3,     3,     2,     2,
       4,     4,     2,     7,     6,     5,     5,     4,     5,     4,
       4,     2,     2,     7,     6,     3,     5,     1,     1,     1,
       1,     1,     3,     3,     3,     5,     0,     1,     1,     2,
       2,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       2,     0,     1,     2,     1,     1,     1,     0,     1,     1,
       0,     2,     1,     0,     1,     1,     1,     0,     6,     0,
       5,     4,     4,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     2,     1,     3,     0,     1,     1,     0,     2,
       4,     1,     3,     0,     5,     0,     1,     1,     3,     0,
       4,     0,     4,     0,     1,     1,     2,     1,     1,     1,
       0,     2,     0,     5,     1,     3,     2,     0,     3,     1,
       4,     1,     0,     4,     1,     0,     4,     0,     1,     3,
       0,     1,     3,     1,     1,     2,     6,     3,     0,     4,
       0,     3,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     0,     2,     0,     6,     0,     1,     1,     0,
       4,     4,     3,     5,     1,     3,     4,     0,     6,     1,
       1,     1,     3,     2,     3,     1,     1,     0,     6,     1,
       1,     1,     3,     3,     4,     0,     6,     0,     2,     0,
       4,     0,     2,     0,     3,     0,     4,     0,     3,     0,
       4,     1,     1,     0,     3,     0,     0,     5,     6,     7,
       1,     2,     1,     1,     0,     3,     0,     3,     3,     3,
       1,     0,     4,     3,     1,     1,     1,     1,     1,     4,
       0,     1,     2,     1,     1,     0,     1,     0,     1,     1,
       2,     1,     2,     9,     0,     1,     0,     2,     3,     1,
       4,     4,     2,     1,     1,     1,     1,     3,     5,     0,
       1,     0,     2,     1,     3,     1,     1,     3,     4,     0,
       0,     0,     0,     2,     2,     1,     1,     0,     2,     3,
       0,     2,     3,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     3,
       6,     1,     3,     4,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     3,     5,     5,     5,     6,     6,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     2,     1,     1,
       1,     2,     1,     2,     2,     0,     3,     1,     4,     1,
       3,     1,     1,     1,     1,     3,     1,     4,     4,     4,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     6,     4,     4,     7,     6,
       3,     4,     6,     6,     4,     4,     4,     4,     4,     4,
       6,     8,    10,     1,     1,     3,     1,     1,     3,     1,
       2,     2,     2,     2,     2,     1,     3,     4,     6,     4,
       6,     2,     2,     4,     4,     4,    10,     6,     8,     6,
       4,     4,     6,     4,     3,     4,     1,     4,     3,     4,
       6,     8,     2,     2,     8,     8,     6,     8,     6,     6,
       6,     6,     2,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     4,     2,     2,     2,     6,     6,     4,
       4,     8,     4,     4,     4,     4,     3,     8,     6,     8,
       4,     6,     4,     6,     4,     4,     4,     6,     8,     4,
       3,     6,     4,     6,     5,     8,     7,    10,     1,     6,
       4,     4,     4,     4,     4,     6,     4,     6,     0,     5,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     4,     4,     5,     4,     4,     4,     5,     4,     0,
       0,     7,     4,     5,     4,     5,     4,     4,     4,     4,
       4,     5,     0,     9,     3,     3,     1,     1,     1,     3,
       3,     3,     3,     3,     4,     4,     4,     6,     4,     6,
       4,     6,     5,     0,     7,     4,     4,     4,     4,     1,
       0,     3,     3,     1,     3,     5,     0,     1,     0,     2,
       0,     3,     4,     2,     0,     1,     1,     2,     1,     3,
       3,     0,     3,     2,     0,     4,     0,     4,     0,     4,
       2,     1,     1,     1,     1,     2,     1,     2,     2,     1,
       2,     1,     2,     2,     3,     0,     1,     1,     3,     1,
       3,     1,     3,     4,     5,     1,     3,     3,     3,     1,
       1,     1,     1,     4,     1,     3,     3,     0,     6,     0,
       8,     4,     0,     8,     0,    10,     6,     0,     8,     0,
      10,     6,     1,     2,     1,     1,     2,     0,     1,     5,
       1,     1,     1,     1,     1,     3,     1,     3,     3,     3,
       3,     3,     3,     3,     5,     3,     0,     1,     0,     2,
       3,     3,     1,     1,     0,     7,     0,     7,     1,     2,
       0,     0,     2,     0,     2,     0,     1,     1,     1,     1,
       3,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     1,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     2,     0,     0,     4,     4,     2,     0,     1,
       1,     0,     2,     3,     1,     3,     0,     7,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     4,
       2,     2,     2,     1,     2,     2,     0,     3,     2,     2,
       3,     3,     3,     3,     1,     2,     0,     1,     0,     4,
       4,     2,     0,     1,     1,     0,     1,     2,     5,     4,
       1,     1,     3,     3,     1,     3,     1,     1,     1,     1,
       1,     0,     2,     3,     4,     1,     2,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     1,     0,     1,     2,
       2,     2,     1,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     2,     1,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     6,     0,     1,     3,     1,
       3,     0,     2,     3,     1,     1,     2,     1,     3,     2,
       0,     0,     7,     2,     1,     0,     3,     0,     8,     0,
       8,     4,     6,     4,     4,     5,     5,     0,     6,     4,
       4,     5,     6,     4,     0,     6,     1,     3,     1,     2,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     0,
       0,     8,     0,     0,     6,     0,     1,     1,     1,     1,
       1,     2,     1,     0,     2,     1,     2,     0,     3,     3,
       0,     1,     3,     1,     1,     3,     1,     3,     1,     3,
       1,     1,     0,     1,     1,     1,     1,     1,     0,     4,
       0,     4,     0,     1,     0,     1,     3,     1,     5,     3,
       1,     1,     1,     0,     0,     0,     7,     5,     1,     0,
       0,    11,     3,     1,     3,     3,     1,     3,     0,     1,
       0,     3,     0,     3,     2,     3,     3,     2,     5,     0,
       5,     0,     6,     0,     2,     1,     3,     2,     4,     0,
       2,     0,     2,     1,     1,     1,     0,     5,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     5,     2,     1,     1,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     4,     4,     3,     3,     3,     2,     3,     2,
       3,     3,     3,     3,     4,     3,     2,     3,     3,     3,
       3,     4,     3,     3,     4,     3,     3,     3,     1,     1,
       1,     1,     1,     0,     1,     0,     2,     0,     1,     1,
       1,     0,     2,     0,     2,     0,     3,     3,     0,     4,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     2,     1,     1,     0,     3,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     1,     4,     0,     3,
       3,     1,     2,     2,     2,     2,     3,     3,     2,     1,
       1,     1,     1,     2,     1,     1,     1,     1,     2,     0,
       1,     2,     2,     0,     3,     1,     0,     5,     0,     1,
       3,     1,     0,     3,     0,     3,     3,     1,     0,     4,
       0,     3,     2,     0,     1,     0,     2,     5,     0,     6,
       0,     5,     0,     1,     1,     0,     1,     1,     2,     1,
       2,     0,     3,     0,     4,     2,     0,     0,     0,     0,
      22,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     5,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     0,     4,     0,     1,     1,
       3,     0,     7,     0,     3,     1,     3,     1,     1,     1,
       3,     5,     3,     5,     1,     1,     3,     4,     5,     4,
       1,     3,     4,     4,     5,     1,     5,     3,     2,     1,
       3,     2,     2,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     0,     0,     7,     1,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     2,     0,     2,     0,
       2,     0,     4,     0,     3,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     3,     5,     5,
       3,     5,     5,     4,     6,     8,     8,     2,     3,     3,
       3,     5,     2,     3,     3,     1,     1,     3,     3,     1,
       3,     2,     2,     2,     2,     2,     1,     1,     3,     1,
       4,     4,     1,     1,     1,     1,     1,     0,     5,     0,
       2,     1,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     2,     0,     3,     0,     3,     3,     2,     0,     6,
       1,     2,     1,     1,     1,     1,     1,     1,     0,     5,
       1,     1,     1,     1,     1,     3,     6,     6,     6,     6,
       7,     7,     5,     3,     4,     1,     3,     8,     8,     8,
       8,     9,     6,     4,     0,     3,     0,     3,     1,     3,
       2,     1,     1,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       1,     3,     1,     2,     0,     2,     5,     0,     3,     3,
       1,     1,     0,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     0,     2,     0,     2,     0,     3,
       2,     1,     2,     1,     0,     3,     1,     0,     1,     0,
       1,     0,     3,     2,     0,     1,     2,     4,     4,     5,
       4,     2,     3,     2,     1,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     3,     3,     3,     0,     1,     3,     3,     0,     3,
       1,     3,     0,     3,     0,     3,     4,     4,     1,     1,
       0,     2,     0,     0,     0,     0,     0,    19,     0,     3,
       0,     3,     0,     0,     6,     4,     4,     3,     4,     3,
       3,     0,     3,     1,     3,     5,     1,     1,     1,     0,
       1,     1,     0,     2,     0,     0,     3,     0,     2,     6,
       3,     4,     4,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 2223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 25997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 26024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 26033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 26041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 26047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 26066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 26072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 2369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= NULL; }
#line 26078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 2371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 26087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 26093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 26099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 26108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 26117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 26126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 26135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 26145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 26153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 26167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 26175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 26183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2448 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 26230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 26238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 26246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 26254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 26262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 26279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 26287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2505 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 26375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 26394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 26402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 26412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 26422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 26432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 26442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 26451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 26463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 26479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 26500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 26510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 26544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 26573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 26582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-7].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 26593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2770 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 26610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 26621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 26638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 26649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 26668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
            Lex->pop_select(); //main select
          }
#line 26681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 26693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 26712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 26730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 26747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 26755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 26765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 26773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 26782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 26790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 26799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 26807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 26817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-8].object_ddl_options) | (yyvsp[-6].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2921 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 26845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 26853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 26859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 26944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 26956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2998 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 3006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 3014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 3022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 3030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 27020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 3042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 27037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 3058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 27047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 3065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 27053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 3075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 27062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 3080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 27071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 3085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 27080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 3090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 27089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 3095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 27098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 3100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 27107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 3105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 27115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 3112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 3133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 3144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 3151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 3157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 3159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 3165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 27191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 3171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 3180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 3187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 3195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 3201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 27260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 3225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 27297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 27307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 27321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 3279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 27327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 27333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 27381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 27417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 27429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 27435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 27441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 27450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 27481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 27489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 27515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd,
                                                                (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].ident_sys),
                                                                (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar),
                                                                (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 27563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyvsp[0].spvar)->mode=(yyvsp[-1].spvar_mode); }
#line 27569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3448 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 27587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 27593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 27629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (unlikely(Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 27642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 27648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3505 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 27696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 27705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 27711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 27719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 27731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 27751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 27761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 27780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-5].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, true)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 27803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 27834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 27846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 27898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 27961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 28028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(cond->type != sp_condition_value::SQLSTATE))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 28047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 28059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 28073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 28139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 28145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 28151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 28157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 28163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 28169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 28175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 28181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 28187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 28193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 28199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 28205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 28230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 28302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 28312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 28454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 28470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 28492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 28498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 4139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 28508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 4145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 28514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 4149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 28526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 4157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 28567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 28702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 28725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 28739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 28764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 28770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 28779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 28812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 28821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 28918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 28928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 28982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 29000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 29006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4536 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;

            if (Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 29030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[-1].ident_sys); }
#line 29113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 29119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 29125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 29135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 29143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 29160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 29179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4678 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 29200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 29209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 29217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 29228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 29238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 29274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 29280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 29299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 29377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 29484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 29490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 29496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 29502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 29508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 29523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 29531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 4969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 29609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5118 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 29618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 29627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 29636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 29654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 29663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 29692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 29703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 29715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 29724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 29735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 29750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 29756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 29783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 29789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 29795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 29810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 29822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 29836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 29857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 29873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 29891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 29899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 29905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 29916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 29922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 29948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 5404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 29957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 29963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 29972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 29984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 29990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 30008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 5444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 5450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 5455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 30047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 5469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 30057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 5479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 30069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 5490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 30078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 5498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 5500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 5512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 30110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 5515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 5518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 30126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 5523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 5527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 5528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 30159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 5547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 30172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 5558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 5560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 30191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 5572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 30205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 5582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 5603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 5604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 5609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 5628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 5633 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 30278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 5644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 30298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 5660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 30315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 5672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 5674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 30338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 5686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 5688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 30353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 5693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 30362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 5698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 30383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 5718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 5735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 5740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 30442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 30481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 30512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 30557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 30651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 30667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 30697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 30707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 30717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 30723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 30741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 30747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 30753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 30769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 30784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 30792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 30806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 30862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 30870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 30886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 30902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 30921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 30930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6115 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 30939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 30948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 30957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 30966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 30975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 31119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 31128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 31137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 31145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 31171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 31180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 31189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 31198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 31204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 31210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 31216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 31226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 31235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6310 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 31244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 31299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 31319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 31328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 31344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 31355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 31409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6431 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 31433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 31439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 31451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 31459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 31467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 31485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 31491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 31601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 31631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 31639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 31648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6580 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 31657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6587 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 31663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 31669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 31704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
          }
#line 31729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 31751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 31757 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 31767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6675 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 31818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 31827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 31836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6707 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 31924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 31932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 31959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 32005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 32011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 32017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 32037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 32045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 32078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 32098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 32116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 6907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 6911 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6921 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 32181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(thd->type_handler_for_date()); }
#line 32187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 32198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 6955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.sql_mode & MODE_MAXDB)
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_datetime2) :
                     static_cast<const Type_handler*>(&type_handler_datetime),
                     (yyvsp[0].const_simple_string));
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                Unless --explicit-defaults-for-timestamp is given.
              */
              if (!opt_explicit_defaults_for_timestamp)
                Lex->last_field->flags|= NOT_NULL_FLAG;
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_timestamp2):
                     static_cast<const Type_handler*>(&type_handler_timestamp),
                     (yyvsp[0].const_simple_string));
            }
          }
#line 32223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 6976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_datetime2) :
                   static_cast<const Type_handler*>(&type_handler_datetime),
                   (yyvsp[0].const_simple_string));
          }
#line 32234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 32243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 6992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 32324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 32330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_json_longtext);
          }
#line 32363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 32369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 32375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 32381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 32387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 32393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 32399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 32405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 32411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 32417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 32423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 32489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 32495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 32501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 32507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 32513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 32523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 32541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 32549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 32555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 32561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 32573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 32591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 32639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 32651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 32663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 32681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 32687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 32698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 32704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 32725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 32731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 32737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 32785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 32831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 32855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 32865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 32875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type);

          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyvsp[-1].Lex_field_type), Lex->charset);
        }
#line 32890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 32935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 32979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 33027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 33036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 33042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 33054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 33060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 33066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 33072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 33078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 33084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 33096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 33114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 33120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7431 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 33138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 33144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 33153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 33161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 33173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 33184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33208 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 33216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 33222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 33252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 33258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 33264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 33270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 33350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 33356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 33404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 33416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 33516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 33522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 33556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7757 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 33646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 33678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 33693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 33708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 33719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 33733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 33745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 33866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 33886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 33895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 33904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 33913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 33922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 33932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-6].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 33947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 33963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 34005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 34013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 34027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 34035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 34043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 34053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 34096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 34114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 34148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 34158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 34188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 34228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-1].table)))
              MYSQL_YYABORT;
          }
#line 34251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 34259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 34267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 34298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 34306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 34327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 34335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 34344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 8300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 8307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 8312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 34394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 8317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 34404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 8323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 8330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 34423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 8334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 8340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 8348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 8355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 34468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 8365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 8376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 34497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 8386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 8397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 8407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 8413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 8419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 34555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 34565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 8430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 34583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 8444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_CONVERT_TO;
          }
#line 34601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 8458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 8463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 34618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 8467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 34627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 8474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 34636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 8479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 34645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 8484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 34653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 8488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 8507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 34674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 8512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 8520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 8525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 8532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 8533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 8537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 8538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 8542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 34746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 8565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 34752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 8566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 34758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 8567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 34764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 8571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 8573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 8578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8586 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8587 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 8588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 34824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 34841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 8611 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 8618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 8628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 8644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 8648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 34948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 34966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 34972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8699 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 34991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 8708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 34999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 35022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 35028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 35034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 8765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8770 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 35108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 8781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 35120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 8797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 35160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 35189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 8846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 35212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 35258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 35269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 35280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 8908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 35290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 35360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 35366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 8959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 35378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 8965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 8980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 8990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 8992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 8997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 35510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 35520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 35556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 35608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 35618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 35636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 35704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 35729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 35750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 35759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) ||
                  lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 35773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= SELECT_LIST;
          }
#line 35781 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 35789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 35848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 35859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 9412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 35868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 9417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 35877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 9425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 35883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 9427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 35894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 9442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 35904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 9449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 35915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 9456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct,
                                                                FALSE)))
              MYSQL_YYABORT;
          }
#line 35927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 9466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 35939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 9482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 9484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 35951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 9493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 35957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 9498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 9539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 9548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              YYABORT;
          }
#line 35990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 9567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 36000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 9582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 36010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 9591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 36018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 9595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 36026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 9599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 36034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 9606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 36047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 9615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 36055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 9619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 36063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 9627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 36079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 9642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36095 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 36119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 36127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 9672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 9676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 36156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 36169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 9711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 36179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 9717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 36189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 36197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 36205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 9739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 36213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 9743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 36222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 9748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 36231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 9758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 36246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 9772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 36255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 9777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 36278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 9798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 36286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 9804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 36294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 9810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 9816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 36308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 9817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 9818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 9819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 9824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 9825 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 9826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 9830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 9831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 9836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 9837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10024 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                   Lex->escape_used);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                             Lex->escape_used);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 37001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 37031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 37037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 37043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 37061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 37067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 37073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 37079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 37093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10310 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 37102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 37126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 37137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 37146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 37152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 37158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10358 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 37164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 37170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 37179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 37191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 37197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 37209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 37215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 37233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 37245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 37257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 37301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 37363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 37443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 37452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 10617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 10631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 10637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 10643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 10652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 10673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 10679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 10685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 10700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10756 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 37750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 37762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10773 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 10833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 10839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 10845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 10851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 10857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 10863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 10869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 38024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 38260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11358 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 38596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 38614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 38620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 38680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 38765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 38903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 39131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 39178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 39197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 39219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 39231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 39271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 39277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11921 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 39382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, 0, (yyvsp[0].const_simple_string));
          }
#line 39513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 39534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12004 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 39732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 39754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 39780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12184 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 39813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 39861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 39875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 39899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 39911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 39921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 39942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 39987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 39999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 40008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 40014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 40045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 40054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 40074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 40086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 40092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 40098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 40104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 40112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 40120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 40126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 40132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 40138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 40150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 40156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 40171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 40198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 40204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 40210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 40216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 40222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 40228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40276 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 40318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 40324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 40342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 40348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 40364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 40372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 40392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 40413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string_ascii(thd, "", 0) :
                 new (thd->mem_root) Item_string_ascii(thd, "\\", 1));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 40521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->order_list= *((yyvsp[0].select_order)); }
#line 40561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 40588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 40594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 40608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 40618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 40657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 40691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 40697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 40703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12768 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 12786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 40725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 12799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_order)= NULL; }
#line 40731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 12801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_order)= (yyvsp[0].select_order); }
#line 40737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 12806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->where= "ORDER clause";
          }
#line 40745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 40753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 12823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 12831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 40779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 40785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 40791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_limit).empty(); }
#line 40797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 40803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 0;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->explicit_limit= (yyvsp[0].select_limit).explicit_limit;
            Select->select_limit= (yyvsp[0].select_limit).select_limit;
            Select->offset_limit= (yyvsp[0].select_limit).offset_limit;
          }
#line 40844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 40900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 12918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 12924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 12933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 40939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 40948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 40959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 40980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 40989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.empty();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 41002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 41011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 41017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock).empty();
          }
#line 41025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 41033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                "<select expression> INTO <destination>;",
                                "'SELECT <select list> INTO <destination>"
                                " FROM...'");
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 41047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 41059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_order_limit_lock *op= (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            op->order_list= NULL;
            op->limit= (yyvsp[0].select_limit);
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 41073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 41247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 41253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 41259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 41265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 41299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 41308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 41343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 41376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 41384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 41468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
          }
#line 41477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 41503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 41525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 41645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 41654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 41663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13408 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 41708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13448 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 41731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 41740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 41748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 41756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 41768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 41849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13554 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 41872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 41908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 41919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 41944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 41952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 13642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 13656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 13657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 42111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_value(thd, Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 42155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 42163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 42171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 42188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 13786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 42207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 42230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 42252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 13852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 13861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 13862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 13869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 42291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 42299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 13889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 42307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
            Lex->pop_select(); //main select
          }
#line 42322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13920 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].num))
            Lex->last_table()->period_conditions= Lex->period_conditions;
        }
#line 42347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            Lex->pop_select(); //main select
          }
#line 42357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 42469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 42588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14115 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 42620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 42643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 42655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 42667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 42679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 42691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 42729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 42735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 42795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 42806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 42815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 42824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 42833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 42857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 42863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 42869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 42892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 42898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 42910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 42921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 42932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 42944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 42954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 42963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 42975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 42987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 42999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 43007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 43016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 43027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 43036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 43068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 43078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 43088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 43100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 43109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 43200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 43223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 43247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 43253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 43259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 43265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 43271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 43277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 43283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 43295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 43344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 43350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 43359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 43367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 43373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 43379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14622 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 43423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 14668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 14678 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 14680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 14711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43619 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 43625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SSL;}
#line 43643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 43695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 43704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 43716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 43725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 43754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 43760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 43766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43781 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 43802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 43808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 43834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 43842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 43848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 43858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 43870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 43878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 43914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 43923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 43931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 43940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 43946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->is_shutdown_wait_for_slaves= false; }
#line 43958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 43966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 43976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 43994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 15004 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 44009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 15015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 44026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 15028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 15032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 44043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 15041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 44049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 15042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 44055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 15046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 44061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 15047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 44067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 15051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 15053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 15060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 15064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 44097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 15065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 44103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 15066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 44109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 15081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 44118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 15086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 44129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 15093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 44138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 15098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 44147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 15116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 44156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 15121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 44165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 15128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 15130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 44177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 15136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 44186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 15143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 15144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 15148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 15149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 15150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 15155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 15157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 15161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 44234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 15163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 15171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 15172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 15182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 15195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 15200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 15205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 44295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 15210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 44304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 15218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 44316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 15225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 44322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 15231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 15239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 15247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 15262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 44373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 15269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 44383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 15275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 15284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 15286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 15293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 15295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 44427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 15297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 15311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 15317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 15323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 15329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 15335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 15341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 15360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 15370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 15380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 15386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 15393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 15403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 15410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 15417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 15427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 44625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 15441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 15449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 15450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 44646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 15463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-2].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].lex_str_ptr), *(yyvsp[-5].lex_str_list), (yyvsp[-1].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[0].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
	  }
#line 44674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 15495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 15500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 15509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 44714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15554 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 44967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 44976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15756 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 45039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 45090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 15800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 45123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 15829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 45134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 45144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->set_stmt_init();
          }
#line 45177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 45215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 16552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 16556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 16565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 16573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 16574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 16575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 16579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 16580 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 16581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16586 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16587 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 16588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 16589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 16595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 16600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 16605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 16614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 16619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 16624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 16629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 16634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 16639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 16644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 16649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 16663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 16674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 16693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 16711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 16723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 16731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 16736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 16759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 16778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 16795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 16796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 16800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 16801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 16802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 16803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 16808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->auth= new (thd->mem_root) USER_AUTH();
          }
#line 45672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 16821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 45678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 16826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 45687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 16831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 45696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 16836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->auth->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->auth->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 45708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 16846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 16847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 45720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 16849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 16855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 16861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 16872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 16880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 16885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 16887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 45784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 16893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 45794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 16901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3123:
#line 16902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3126:
#line 16912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 45826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3127:
#line 16930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3128:
#line 16931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 16933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 16937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 45852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 16938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 16943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 16951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 16960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 45885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 16965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 45893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 16972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 45906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 16981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 16990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              lex->current_select->select_limit= one;
              lex->current_select->offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 45965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 45971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 45977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 17041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 46001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 46007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 46013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 46037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 46043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 46049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 46055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 46061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 46077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 46125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 46174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 46243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 46249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 46255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->auth= NULL;
          }
#line 46290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->auth= NULL;

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17251 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 46334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 46346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 46358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 46370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 46382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 46394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 46400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 46406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 46412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 46418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 46424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 46430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 46436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 46442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 17294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 46454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 17295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 46460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 46466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 46472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 17298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 46478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 17299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 46484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 17300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 46490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 17301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 46496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 17302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 46502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 17303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 46508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 17304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 46514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 17305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 46520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 17306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 46526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 17307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 17308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 17312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 17313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 17323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 46561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 17330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 46572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 17337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 46583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 17347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 17357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 17366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 17375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 17388 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 17393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 17401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 17406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 17414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 17419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 17430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 46701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 17436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 46711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 17442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 46720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 17447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 46728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 17454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 46738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 17460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 46746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 17467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 46755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 17475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 46764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 17480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 46774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 17486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 46784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 17495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 46793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 17499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 46799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 17509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 46829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 17539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 46837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 17543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 46845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 17547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 46853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 17551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 46861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 17558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 46870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 17563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 46879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 17568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 46888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 17573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 46897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 17578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 46906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3272:
#line 17585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3273:
#line 17586 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 17590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 17596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 17597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 17601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 17602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 17606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 17607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 17611 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 17612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 17617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 17622 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 17627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 46998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 17635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 47004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 17636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 47010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 17640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 17641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 17646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 17647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 17648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 17653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 17654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 17655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 17660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 17672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 17681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 17687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 17696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 17705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 17718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 47130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 17720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 47136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 17722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 47142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 17729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 17730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 17731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 47160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 17735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 47166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 17737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 47176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 17742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 47182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 17743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 47188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 17744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 47194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 17745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_BUFFER_RESULT; }
#line 47200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 17746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_FOUND_ROWS; }
#line 47206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 17747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 47212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 47227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 47236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 47242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 47248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 47254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 47260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 47266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3329:
#line 17808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 47290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3330:
#line 17813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3331:
#line 17819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3332:
#line 17827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 47329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3334:
#line 17841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3335:
#line 17842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3336:
#line 17843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3337:
#line 17844 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3338:
#line 17855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 17857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 47465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 47476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 47486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 47505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 47516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 47534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 18006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 47542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 18010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 47550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 18014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 47558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 18018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 47566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 18022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 47574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 18026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 47583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 18033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 47589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 18035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 47606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 18051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 47617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 18058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 47628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 18065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 47639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 18074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 18075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 18076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 18080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 18081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 47669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 18082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 47675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 18086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 18087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 47687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 18092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 18094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 47699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 18099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 18100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 47711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 18105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 18110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 47728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 18117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 47737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 18122 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 18131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 47754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 47758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
