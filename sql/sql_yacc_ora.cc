/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void ORAerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}




#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc_ora.hh".  */
#ifndef YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
# define YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int ORAdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FOREIGN = 346,
    FOR_SYM = 347,
    FOR_SYSTEM_TIME_SYM = 348,
    FROM = 349,
    FULLTEXT_SYM = 350,
    GE = 351,
    GOTO_ORACLE_SYM = 352,
    GRANT = 353,
    GROUP_SYM = 354,
    GROUP_CONCAT_SYM = 355,
    LAG_SYM = 356,
    LEAD_SYM = 357,
    HAVING = 358,
    HEX_NUM = 359,
    HEX_STRING = 360,
    HOUR_MICROSECOND_SYM = 361,
    HOUR_MINUTE_SYM = 362,
    HOUR_SECOND_SYM = 363,
    IDENT = 364,
    IDENT_QUOTED = 365,
    IF_SYM = 366,
    IGNORE_DOMAIN_IDS_SYM = 367,
    IGNORE_SYM = 368,
    INDEX_SYM = 369,
    INFILE = 370,
    INNER_SYM = 371,
    INOUT_SYM = 372,
    INSENSITIVE_SYM = 373,
    INSERT = 374,
    INTERSECT_SYM = 375,
    INTERVAL_SYM = 376,
    INTO = 377,
    INT_SYM = 378,
    IN_SYM = 379,
    IS = 380,
    ITERATE_SYM = 381,
    JOIN_SYM = 382,
    KEYS = 383,
    KEY_SYM = 384,
    KILL_SYM = 385,
    LE = 386,
    LEADING = 387,
    LEAVE_SYM = 388,
    LEFT = 389,
    LEFT_PAREN_ALT = 390,
    LEFT_PAREN_WITH = 391,
    LEFT_PAREN_LIKE = 392,
    LEX_HOSTNAME = 393,
    LIKE = 394,
    LIMIT = 395,
    LINEAR_SYM = 396,
    LINES = 397,
    LOAD = 398,
    LOCATOR_SYM = 399,
    LOCK_SYM = 400,
    LONGBLOB = 401,
    LONGTEXT = 402,
    LONG_NUM = 403,
    LONG_SYM = 404,
    LOOP_SYM = 405,
    LOW_PRIORITY = 406,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 407,
    MATCH = 408,
    MAX_SYM = 409,
    MAXVALUE_SYM = 410,
    MEDIAN_SYM = 411,
    MEDIUMBLOB = 412,
    MEDIUMINT = 413,
    MEDIUMTEXT = 414,
    MINUTE_MICROSECOND_SYM = 415,
    MINUTE_SECOND_SYM = 416,
    MIN_SYM = 417,
    MODIFIES_SYM = 418,
    MOD_SYM = 419,
    MYSQL_CONCAT_SYM = 420,
    NATURAL = 421,
    NCHAR_STRING = 422,
    NE = 423,
    NEG = 424,
    NOT2_SYM = 425,
    NOT_SYM = 426,
    NOW_SYM = 427,
    NO_WRITE_TO_BINLOG = 428,
    NTILE_SYM = 429,
    NULL_SYM = 430,
    NUM = 431,
    NUMERIC_SYM = 432,
    NTH_VALUE_SYM = 433,
    ON = 434,
    OPTIMIZE = 435,
    OPTIONALLY = 436,
    ORACLE_CONCAT_SYM = 437,
    OR2_SYM = 438,
    ORDER_SYM = 439,
    OR_SYM = 440,
    OTHERS_ORACLE_SYM = 441,
    OUTER = 442,
    OUTFILE = 443,
    OUT_SYM = 444,
    OVER_SYM = 445,
    PACKAGE_ORACLE_SYM = 446,
    PAGE_CHECKSUM_SYM = 447,
    PARAM_MARKER = 448,
    PARSE_VCOL_EXPR_SYM = 449,
    PARTITION_SYM = 450,
    PERCENT_ORACLE_SYM = 451,
    PERCENT_RANK_SYM = 452,
    PERCENTILE_CONT_SYM = 453,
    PERCENTILE_DISC_SYM = 454,
    PORTION_SYM = 455,
    POSITION_SYM = 456,
    PRECISION = 457,
    PRIMARY_SYM = 458,
    PROCEDURE_SYM = 459,
    PURGE = 460,
    RAISE_ORACLE_SYM = 461,
    RANGE_SYM = 462,
    RANK_SYM = 463,
    READS_SYM = 464,
    READ_SYM = 465,
    READ_WRITE_SYM = 466,
    REAL = 467,
    RECURSIVE_SYM = 468,
    REF_SYSTEM_ID_SYM = 469,
    REFERENCES = 470,
    REGEXP = 471,
    RELEASE_SYM = 472,
    RENAME = 473,
    REPEAT_SYM = 474,
    REPLACE = 475,
    REQUIRE_SYM = 476,
    RESIGNAL_SYM = 477,
    RESTRICT = 478,
    RETURNING_SYM = 479,
    RETURN_MARIADB_SYM = 480,
    RETURN_ORACLE_SYM = 481,
    REVOKE = 482,
    RIGHT = 483,
    ROWS_SYM = 484,
    ROWTYPE_ORACLE_SYM = 485,
    ROW_NUMBER_SYM = 486,
    SECOND_MICROSECOND_SYM = 487,
    SELECT_SYM = 488,
    SENSITIVE_SYM = 489,
    SEPARATOR_SYM = 490,
    SERVER_OPTIONS = 491,
    SET = 492,
    SET_VAR = 493,
    SHIFT_LEFT = 494,
    SHIFT_RIGHT = 495,
    SHOW = 496,
    SIGNAL_SYM = 497,
    SMALLINT = 498,
    SPATIAL_SYM = 499,
    SPECIFIC_SYM = 500,
    SQLEXCEPTION_SYM = 501,
    SQLSTATE_SYM = 502,
    SQLWARNING_SYM = 503,
    SQL_BIG_RESULT = 504,
    SQL_SMALL_RESULT = 505,
    SQL_SYM = 506,
    SSL_SYM = 507,
    STARTING = 508,
    STATS_AUTO_RECALC_SYM = 509,
    STATS_PERSISTENT_SYM = 510,
    STATS_SAMPLE_PAGES_SYM = 511,
    STDDEV_SAMP_SYM = 512,
    STD_SYM = 513,
    STRAIGHT_JOIN = 514,
    SUBSTRING = 515,
    SUM_SYM = 516,
    SYSDATE = 517,
    TABLE_REF_PRIORITY = 518,
    TABLE_SYM = 519,
    TERMINATED = 520,
    TEXT_STRING = 521,
    THEN_SYM = 522,
    TINYBLOB = 523,
    TINYINT = 524,
    TINYTEXT = 525,
    TO_SYM = 526,
    TRAILING = 527,
    TRIGGER_SYM = 528,
    TRIM = 529,
    TRUE_SYM = 530,
    ULONGLONG_NUM = 531,
    UNDERSCORE_CHARSET = 532,
    UNDO_SYM = 533,
    UNION_SYM = 534,
    UNIQUE_SYM = 535,
    UNLOCK_SYM = 536,
    UNSIGNED = 537,
    UPDATE_SYM = 538,
    USAGE = 539,
    USE_SYM = 540,
    USING = 541,
    UTC_DATE_SYM = 542,
    UTC_TIMESTAMP_SYM = 543,
    UTC_TIME_SYM = 544,
    VALUES = 545,
    VALUES_IN_SYM = 546,
    VALUES_LESS_SYM = 547,
    VARBINARY = 548,
    VARCHAR = 549,
    VARIANCE_SYM = 550,
    VARYING = 551,
    VAR_SAMP_SYM = 552,
    WHEN_SYM = 553,
    WHERE = 554,
    WHILE_SYM = 555,
    WITH = 556,
    WITH_CUBE_SYM = 557,
    WITH_ROLLUP_SYM = 558,
    WITH_SYSTEM_SYM = 559,
    XOR = 560,
    YEAR_MONTH_SYM = 561,
    ZEROFILL = 562,
    IMPOSSIBLE_ACTION = 563,
    BODY_MARIADB_SYM = 564,
    ELSEIF_ORACLE_SYM = 565,
    ELSIF_MARIADB_SYM = 566,
    EXCEPTION_ORACLE_SYM = 567,
    GOTO_MARIADB_SYM = 568,
    OTHERS_MARIADB_SYM = 569,
    PACKAGE_MARIADB_SYM = 570,
    RAISE_MARIADB_SYM = 571,
    ROWTYPE_MARIADB_SYM = 572,
    ACCOUNT_SYM = 573,
    ACTION = 574,
    ADMIN_SYM = 575,
    ADDDATE_SYM = 576,
    AFTER_SYM = 577,
    AGAINST = 578,
    AGGREGATE_SYM = 579,
    ALGORITHM_SYM = 580,
    ALWAYS_SYM = 581,
    ANY_SYM = 582,
    ASCII_SYM = 583,
    AT_SYM = 584,
    ATOMIC_SYM = 585,
    AUTHORS_SYM = 586,
    AUTOEXTEND_SIZE_SYM = 587,
    AUTO_INC = 588,
    AUTO_SYM = 589,
    AVG_ROW_LENGTH = 590,
    AVG_SYM = 591,
    BACKUP_SYM = 592,
    BEGIN_MARIADB_SYM = 593,
    BEGIN_ORACLE_SYM = 594,
    BINLOG_SYM = 595,
    BIT_SYM = 596,
    BLOCK_SYM = 597,
    BOOL_SYM = 598,
    BOOLEAN_SYM = 599,
    BTREE_SYM = 600,
    BYTE_SYM = 601,
    CACHE_SYM = 602,
    CASCADED = 603,
    CATALOG_NAME_SYM = 604,
    CHAIN_SYM = 605,
    CHANGED = 606,
    CHARSET = 607,
    CHECKPOINT_SYM = 608,
    CHECKSUM_SYM = 609,
    CIPHER_SYM = 610,
    CLASS_ORIGIN_SYM = 611,
    CLIENT_SYM = 612,
    CLOB_MARIADB_SYM = 613,
    CLOB_ORACLE_SYM = 614,
    CLOSE_SYM = 615,
    COALESCE = 616,
    CODE_SYM = 617,
    COLLATION_SYM = 618,
    COLON_ORACLE_SYM = 619,
    COLUMNS = 620,
    COLUMN_ADD_SYM = 621,
    COLUMN_CHECK_SYM = 622,
    COLUMN_CREATE_SYM = 623,
    COLUMN_DELETE_SYM = 624,
    COLUMN_GET_SYM = 625,
    COLUMN_SYM = 626,
    COLUMN_NAME_SYM = 627,
    COMMENT_SYM = 628,
    COMMITTED_SYM = 629,
    COMMIT_SYM = 630,
    COMPACT_SYM = 631,
    COMPLETION_SYM = 632,
    COMPRESSED_SYM = 633,
    CONCURRENT = 634,
    CONNECTION_SYM = 635,
    CONSISTENT_SYM = 636,
    CONSTRAINT_CATALOG_SYM = 637,
    CONSTRAINT_NAME_SYM = 638,
    CONSTRAINT_SCHEMA_SYM = 639,
    CONTAINS_SYM = 640,
    CONTEXT_SYM = 641,
    CONTRIBUTORS_SYM = 642,
    CPU_SYM = 643,
    CUBE_SYM = 644,
    CURRENT_SYM = 645,
    CURRENT_POS_SYM = 646,
    CURSOR_NAME_SYM = 647,
    CYCLE_SYM = 648,
    DATAFILE_SYM = 649,
    DATA_SYM = 650,
    DATETIME = 651,
    DATE_FORMAT_SYM = 652,
    DATE_SYM = 653,
    DAY_SYM = 654,
    DEALLOCATE_SYM = 655,
    DECODE_MARIADB_SYM = 656,
    DECODE_ORACLE_SYM = 657,
    DEFINER_SYM = 658,
    DELAYED_SYM = 659,
    DELAY_KEY_WRITE_SYM = 660,
    DES_KEY_FILE = 661,
    DIAGNOSTICS_SYM = 662,
    DIRECTORY_SYM = 663,
    DISABLE_SYM = 664,
    DISCARD = 665,
    DISK_SYM = 666,
    DO_SYM = 667,
    DUMPFILE = 668,
    DUPLICATE_SYM = 669,
    DYNAMIC_SYM = 670,
    ENABLE_SYM = 671,
    END = 672,
    ENDS_SYM = 673,
    ENGINES_SYM = 674,
    ENGINE_SYM = 675,
    ENUM = 676,
    ERROR_SYM = 677,
    ERRORS = 678,
    ESCAPE_SYM = 679,
    EVENTS_SYM = 680,
    EVENT_SYM = 681,
    EVERY_SYM = 682,
    EXCHANGE_SYM = 683,
    EXAMINED_SYM = 684,
    EXCLUDE_SYM = 685,
    EXECUTE_SYM = 686,
    EXCEPTION_MARIADB_SYM = 687,
    EXIT_MARIADB_SYM = 688,
    EXIT_ORACLE_SYM = 689,
    EXPANSION_SYM = 690,
    EXPIRE_SYM = 691,
    EXPORT_SYM = 692,
    EXTENDED_SYM = 693,
    EXTENT_SIZE_SYM = 694,
    FAST_SYM = 695,
    FAULTS_SYM = 696,
    FILE_SYM = 697,
    FIRST_SYM = 698,
    FIXED_SYM = 699,
    FLUSH_SYM = 700,
    FOLLOWS_SYM = 701,
    FOLLOWING_SYM = 702,
    FORCE_SYM = 703,
    FORMAT_SYM = 704,
    FOUND_SYM = 705,
    FULL = 706,
    FUNCTION_SYM = 707,
    GENERAL = 708,
    GENERATED_SYM = 709,
    GEOMETRYCOLLECTION = 710,
    GEOMETRY_SYM = 711,
    GET_FORMAT = 712,
    GET_SYM = 713,
    GLOBAL_SYM = 714,
    GRANTS = 715,
    HANDLER_SYM = 716,
    HARD_SYM = 717,
    HASH_SYM = 718,
    HELP_SYM = 719,
    HIGH_PRIORITY = 720,
    HISTORY_SYM = 721,
    HOST_SYM = 722,
    HOSTS_SYM = 723,
    HOUR_SYM = 724,
    ID_SYM = 725,
    IDENTIFIED_SYM = 726,
    IGNORE_SERVER_IDS_SYM = 727,
    IMMEDIATE_SYM = 728,
    IMPORT = 729,
    INCREMENT_SYM = 730,
    INDEXES = 731,
    INITIAL_SIZE_SYM = 732,
    INSERT_METHOD = 733,
    INSTALL_SYM = 734,
    INVOKER_SYM = 735,
    IO_SYM = 736,
    IPC_SYM = 737,
    ISOLATION = 738,
    ISOPEN_SYM = 739,
    ISSUER_SYM = 740,
    INVISIBLE_SYM = 741,
    JSON_SYM = 742,
    KEY_BLOCK_SIZE = 743,
    LANGUAGE_SYM = 744,
    LAST_SYM = 745,
    LAST_VALUE = 746,
    LASTVAL_SYM = 747,
    LEAVES = 748,
    LESS_SYM = 749,
    LEVEL_SYM = 750,
    LINESTRING = 751,
    LIST_SYM = 752,
    LOCAL_SYM = 753,
    LOCKS_SYM = 754,
    LOGFILE_SYM = 755,
    LOGS_SYM = 756,
    MASTER_CONNECT_RETRY_SYM = 757,
    MASTER_DELAY_SYM = 758,
    MASTER_GTID_POS_SYM = 759,
    MASTER_HOST_SYM = 760,
    MASTER_LOG_FILE_SYM = 761,
    MASTER_LOG_POS_SYM = 762,
    MASTER_PASSWORD_SYM = 763,
    MASTER_PORT_SYM = 764,
    MASTER_SERVER_ID_SYM = 765,
    MASTER_SSL_CAPATH_SYM = 766,
    MASTER_SSL_CA_SYM = 767,
    MASTER_SSL_CERT_SYM = 768,
    MASTER_SSL_CIPHER_SYM = 769,
    MASTER_SSL_CRL_SYM = 770,
    MASTER_SSL_CRLPATH_SYM = 771,
    MASTER_SSL_KEY_SYM = 772,
    MASTER_SSL_SYM = 773,
    MASTER_SYM = 774,
    MASTER_USER_SYM = 775,
    MASTER_USE_GTID_SYM = 776,
    MASTER_HEARTBEAT_PERIOD_SYM = 777,
    MAX_CONNECTIONS_PER_HOUR = 778,
    MAX_QUERIES_PER_HOUR = 779,
    MAX_ROWS = 780,
    MAX_SIZE_SYM = 781,
    MAX_UPDATES_PER_HOUR = 782,
    MAX_STATEMENT_TIME_SYM = 783,
    MAX_USER_CONNECTIONS_SYM = 784,
    MEDIUM_SYM = 785,
    MEMORY_SYM = 786,
    MERGE_SYM = 787,
    MESSAGE_TEXT_SYM = 788,
    MICROSECOND_SYM = 789,
    MIGRATE_SYM = 790,
    MINUTE_SYM = 791,
    MINVALUE_SYM = 792,
    MIN_ROWS = 793,
    MODE_SYM = 794,
    MODIFY_SYM = 795,
    MONTH_SYM = 796,
    MULTILINESTRING = 797,
    MULTIPOINT = 798,
    MULTIPOLYGON = 799,
    MUTEX_SYM = 800,
    MYSQL_SYM = 801,
    MYSQL_ERRNO_SYM = 802,
    NAMES_SYM = 803,
    NAME_SYM = 804,
    NATIONAL_SYM = 805,
    NCHAR_SYM = 806,
    NEVER_SYM = 807,
    NEW_SYM = 808,
    NEXT_SYM = 809,
    NEXTVAL_SYM = 810,
    NOCACHE_SYM = 811,
    NOCYCLE_SYM = 812,
    NODEGROUP_SYM = 813,
    NONE_SYM = 814,
    NOTFOUND_SYM = 815,
    NO_SYM = 816,
    NOMAXVALUE_SYM = 817,
    NOMINVALUE_SYM = 818,
    NO_WAIT_SYM = 819,
    NOWAIT_SYM = 820,
    NUMBER_MARIADB_SYM = 821,
    NUMBER_ORACLE_SYM = 822,
    NVARCHAR_SYM = 823,
    OF_SYM = 824,
    OFFSET_SYM = 825,
    OLD_PASSWORD_SYM = 826,
    ONE_SYM = 827,
    ONLY_SYM = 828,
    ONLINE_SYM = 829,
    OPEN_SYM = 830,
    OPTIONS_SYM = 831,
    OPTION = 832,
    OWNER_SYM = 833,
    PACK_KEYS_SYM = 834,
    PAGE_SYM = 835,
    PARSER_SYM = 836,
    PARTIAL = 837,
    PARTITIONS_SYM = 838,
    PARTITIONING_SYM = 839,
    PASSWORD_SYM = 840,
    PERIOD_SYM = 841,
    PERSISTENT_SYM = 842,
    PHASE_SYM = 843,
    PLUGINS_SYM = 844,
    PLUGIN_SYM = 845,
    POINT_SYM = 846,
    POLYGON = 847,
    PORT_SYM = 848,
    PRECEDES_SYM = 849,
    PRECEDING_SYM = 850,
    PREPARE_SYM = 851,
    PRESERVE_SYM = 852,
    PREV_SYM = 853,
    PREVIOUS_SYM = 854,
    PRIVILEGES = 855,
    PROCESS = 856,
    PROCESSLIST_SYM = 857,
    PROFILE_SYM = 858,
    PROFILES_SYM = 859,
    PROXY_SYM = 860,
    QUARTER_SYM = 861,
    QUERY_SYM = 862,
    QUICK = 863,
    RAW_MARIADB_SYM = 864,
    RAW_ORACLE_SYM = 865,
    READ_ONLY_SYM = 866,
    REBUILD_SYM = 867,
    RECOVER_SYM = 868,
    REDOFILE_SYM = 869,
    REDO_BUFFER_SIZE_SYM = 870,
    REDUNDANT_SYM = 871,
    RELAY = 872,
    RELAYLOG_SYM = 873,
    RELAY_LOG_FILE_SYM = 874,
    RELAY_LOG_POS_SYM = 875,
    RELAY_THREAD = 876,
    RELOAD = 877,
    REMOVE_SYM = 878,
    REORGANIZE_SYM = 879,
    REPAIR = 880,
    REPEATABLE_SYM = 881,
    REPLICATION = 882,
    RESET_SYM = 883,
    RESTART_SYM = 884,
    RESOURCES = 885,
    RESTORE_SYM = 886,
    RESUME_SYM = 887,
    RETURNED_SQLSTATE_SYM = 888,
    RETURNS_SYM = 889,
    REUSE_SYM = 890,
    REVERSE_SYM = 891,
    ROLE_SYM = 892,
    ROLLBACK_SYM = 893,
    ROLLUP_SYM = 894,
    ROUTINE_SYM = 895,
    ROWCOUNT_SYM = 896,
    ROW_SYM = 897,
    ROW_COUNT_SYM = 898,
    ROW_FORMAT_SYM = 899,
    RTREE_SYM = 900,
    SAVEPOINT_SYM = 901,
    SCHEDULE_SYM = 902,
    SCHEMA_NAME_SYM = 903,
    SECOND_SYM = 904,
    SECURITY_SYM = 905,
    SEQUENCE_SYM = 906,
    SERIALIZABLE_SYM = 907,
    SERIAL_SYM = 908,
    SESSION_SYM = 909,
    SERVER_SYM = 910,
    SETVAL_SYM = 911,
    SHARE_SYM = 912,
    SHUTDOWN = 913,
    SIGNED_SYM = 914,
    SIMPLE_SYM = 915,
    SLAVE = 916,
    SLAVES = 917,
    SLAVE_POS_SYM = 918,
    SLOW = 919,
    SNAPSHOT_SYM = 920,
    SOCKET_SYM = 921,
    SOFT_SYM = 922,
    SONAME_SYM = 923,
    SOUNDS_SYM = 924,
    SOURCE_SYM = 925,
    SQL_BUFFER_RESULT = 926,
    SQL_CACHE_SYM = 927,
    SQL_CALC_FOUND_ROWS = 928,
    SQL_NO_CACHE_SYM = 929,
    SQL_THREAD = 930,
    STAGE_SYM = 931,
    STARTS_SYM = 932,
    START_SYM = 933,
    STATEMENT_SYM = 934,
    STATUS_SYM = 935,
    STOP_SYM = 936,
    STORAGE_SYM = 937,
    STORED_SYM = 938,
    STRING_SYM = 939,
    SUBCLASS_ORIGIN_SYM = 940,
    SUBDATE_SYM = 941,
    SUBJECT_SYM = 942,
    SUBPARTITIONS_SYM = 943,
    SUBPARTITION_SYM = 944,
    SUPER_SYM = 945,
    SUSPEND_SYM = 946,
    SWAPS_SYM = 947,
    SWITCHES_SYM = 948,
    SYSTEM = 949,
    SYSTEM_TIME_SYM = 950,
    TABLES = 951,
    TABLESPACE = 952,
    TABLE_CHECKSUM_SYM = 953,
    TABLE_NAME_SYM = 954,
    TEMPORARY = 955,
    TEMPTABLE_SYM = 956,
    TEXT_SYM = 957,
    THAN_SYM = 958,
    TIES_SYM = 959,
    TIMESTAMP = 960,
    TIMESTAMP_ADD = 961,
    TIMESTAMP_DIFF = 962,
    TIME_SYM = 963,
    TRANSACTION_SYM = 964,
    TRANSACTIONAL_SYM = 965,
    TRIGGERS_SYM = 966,
    TRIM_ORACLE = 967,
    TRUNCATE_SYM = 968,
    TYPES_SYM = 969,
    TYPE_SYM = 970,
    UDF_RETURNS_SYM = 971,
    UNBOUNDED_SYM = 972,
    UNCOMMITTED_SYM = 973,
    UNDEFINED_SYM = 974,
    UNDOFILE_SYM = 975,
    UNDO_BUFFER_SIZE_SYM = 976,
    UNICODE_SYM = 977,
    UNINSTALL_SYM = 978,
    UNKNOWN_SYM = 979,
    UNTIL_SYM = 980,
    UPGRADE_SYM = 981,
    USER_SYM = 982,
    USE_FRM = 983,
    VALUE_SYM = 984,
    VARCHAR2_MARIADB_SYM = 985,
    VARCHAR2_ORACLE_SYM = 986,
    VARIABLES = 987,
    VERSIONING_SYM = 988,
    VIA_SYM = 989,
    VIEW_SYM = 990,
    VIRTUAL_SYM = 991,
    WAIT_SYM = 992,
    WARNINGS = 993,
    WEEK_SYM = 994,
    WEIGHT_STRING_SYM = 995,
    WINDOW_SYM = 996,
    WITHIN = 997,
    WITHOUT = 998,
    WORK_SYM = 999,
    WRAPPER_SYM = 1000,
    WRITE_SYM = 1001,
    X509_SYM = 1002,
    XA_SYM = 1003,
    XML_SYM = 1004,
    YEAR_SYM = 1005,
    PREC_BELOW_ESCAPE = 1006,
    CONDITIONLESS_JOIN = 1007,
    ON_SYM = 1008,
    PREC_BELOW_NOT = 1009,
    SUBQUERY_AS_EXPR = 1010,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1011,
    USER = 1012,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1013,
    EMPTY_FROM_CLAUSE = 1014
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;
  struct
  {
    enum sub_select_type unit_type;
    bool distinct;
  } unit_operation;
  struct
  {
    SELECT_LEX *first;
    SELECT_LEX *prev_last;
  } select_list;
  SQL_I_List<ORDER> *select_order;
  Lex_select_lock select_lock;
  Lex_select_limit select_limit;
  Lex_order_limit_lock *order_limit_lock;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  USER_AUTH *user_auth;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  st_select_lex_unit *select_lex_unit;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_sp_aggregate_type sp_aggregate_type;
  enum enum_view_suid view_suid;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int ORAparse (THD *thd);

#endif /* !YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  754
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   93713

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  781
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1281
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3535
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6115

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1014

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   775,     2,     2,     2,   764,   759,     2,
     771,   772,   762,   761,   774,   760,   779,   763,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   778,
     757,   755,   756,     2,   780,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   765,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   776,   758,   777,   766,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     767,   768,   769,   770,   773
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1726,  1726,  1736,  1735,  1760,  1767,  1769,  1773,  1774,
    1775,  1780,  1781,  1782,  1783,  1784,  1785,  1786,  1787,  1788,
    1789,  1790,  1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,
    1799,  1800,  1801,  1802,  1803,  1804,  1805,  1806,  1807,  1808,
    1809,  1810,  1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,  1823,  1824,  1825,  1826,  1827,  1828,
    1829,  1830,  1831,  1832,  1833,  1834,  1835,  1836,  1837,  1838,
    1839,  1843,  1850,  1851,  1856,  1855,  1866,  1872,  1874,  1871,
    1883,  1885,  1884,  1894,  1899,  1911,  1910,  1927,  1926,  1935,
    1936,  1940,  1944,  1948,  1952,  1956,  1960,  1970,  1975,  1979,
    1983,  1987,  1991,  1995,  2000,  2004,  2009,  2037,  2041,  2045,
    2050,  2053,  2055,  2056,  2060,  2066,  2068,  2069,  2073,  2079,
    2081,  2082,  2086,  2093,  2097,  2112,  2116,  2122,  2128,  2134,
    2144,  2148,  2152,  2166,  2178,  2165,  2201,  2200,  2256,  2263,
    2255,  2275,  2281,  2274,  2293,  2299,  2292,  2311,  2310,  2328,
    2326,  2341,  2339,  2352,  2351,  2362,  2361,  2371,  2370,  2382,
    2380,  2395,  2393,  2409,  2407,  2422,  2420,  2434,  2441,  2448,
    2455,  2459,  2463,  2463,  2470,  2466,  2490,  2502,  2507,  2486,
    2520,  2526,  2534,  2535,  2536,  2542,  2543,  2549,  2550,  2556,
    2567,  2566,  2594,  2593,  2620,  2629,  2638,  2644,  2643,  2662,
    2661,  2680,  2683,  2685,  2689,  2690,  2694,  2701,  2712,  2713,
    2717,  2718,  2722,  2727,  2733,  2739,  2747,  2753,  2759,  2767,
    2775,  2783,  2791,  2799,  2807,  2819,  2836,  2835,  2847,  2848,
    2852,  2857,  2862,  2867,  2872,  2877,  2882,  2890,  2889,  2922,
    2921,  2928,  2935,  2936,  2942,  2948,  2958,  2964,  2970,  2972,
    2979,  2980,  2984,  2994,  2995,  3003,  3003,  3045,  3057,  3058,
    3062,  3067,  3075,  3076,  3080,  3081,  3085,  3086,  3091,  3093,
    3095,  3097,  3099,  3101,  3103,  3108,  3110,  3115,  3116,  3119,
    3121,  3125,  3125,  3131,  3132,  3136,  3137,  3142,  3141,  3150,
    3152,  3155,  3157,  3161,  3165,  3174,  3179,  3179,  3189,  3190,
    3194,  3202,  3207,  3212,  3217,  3222,  3227,  3235,  3237,  3241,
    3242,  3246,  3252,  3258,  3264,  3270,  3276,  3285,  3286,  3287,
    3288,  3289,  3294,  3293,  3306,  3313,  3314,  3318,  3319,  3323,
    3324,  3328,  3329,  3333,  3333,  3345,  3348,  3353,  3352,  3361,
    3365,  3366,  3373,  3374,  3381,  3382,  3386,  3392,  3398,  3407,
    3415,  3419,  3424,  3432,  3436,  3443,  3453,  3461,  3469,  3480,
    3481,  3488,  3499,  3498,  3517,  3516,  3530,  3532,  3537,  3547,
    3546,  3562,  3563,  3564,  3565,  3570,  3572,  3577,  3592,  3600,
    3604,  3624,  3625,  3629,  3633,  3639,  3645,  3651,  3657,  3667,
    3672,  3680,  3688,  3703,  3709,  3710,  3716,  3719,  3723,  3731,
    3748,  3750,  3768,  3774,  3776,  3778,  3780,  3782,  3784,  3786,
    3788,  3790,  3792,  3794,  3796,  3801,  3809,  3825,  3826,  3831,
    3837,  3846,  3853,  3862,  3871,  3876,  3885,  3887,  3889,  3898,
    3903,  3910,  3919,  3928,  3930,  3932,  3934,  3936,  3938,  3940,
    3942,  3944,  3946,  3948,  3950,  3952,  3957,  3958,  3966,  3978,
    3993,  3994,  3995,  3999,  4000,  4001,  4002,  4003,  4004,  4008,
    4009,  4010,  4011,  4012,  4013,  4014,  4015,  4016,  4017,  4018,
    4019,  4020,  4024,  4025,  4026,  4027,  4032,  4031,  4042,  4044,
    4043,  4051,  4050,  4059,  4059,  4076,  4077,  4082,  4081,  4092,
    4103,  4103,  4109,  4114,  4119,  4125,  4134,  4139,  4144,  4150,
    4160,  4168,  4176,  4185,  4191,  4201,  4200,  4219,  4218,  4236,
    4242,  4250,  4251,  4255,  4263,  4268,  4273,  4281,  4282,  4290,
    4308,  4322,  4339,  4341,  4357,  4339,  4376,  4378,  4379,  4384,
    4383,  4453,  4455,  4453,  4464,  4469,  4470,  4474,  4475,  4480,
    4484,  4479,  4504,  4508,  4503,  4526,  4536,  4540,  4541,  4545,
    4556,  4554,  4570,  4574,  4568,  4589,  4591,  4596,  4595,  4610,
    4616,  4609,  4631,  4635,  4639,  4645,  4635,  4656,  4654,  4669,
    4670,  4674,  4675,  4680,  4679,  4695,  4696,  4700,  4708,  4713,
    4720,  4729,  4744,  4743,  4760,  4759,  4779,  4788,  4787,  4795,
    4794,  4803,  4808,  4817,  4802,  4827,  4826,  4837,  4836,  4846,
    4845,  4856,  4863,  4855,  4880,  4879,  4891,  4893,  4898,  4900,
    4902,  4919,  4924,  4930,  4937,  4938,  4946,  4952,  4961,  4967,
    4973,  4974,  4978,  4978,  4983,  4984,  4985,  4989,  4990,  4991,
    4995,  4999,  5000,  5001,  5005,  5006,  5007,  5008,  5009,  5010,
    5011,  5012,  5016,  5020,  5021,  5022,  5026,  5027,  5028,  5029,
    5030,  5034,  5038,  5039,  5040,  5044,  5045,  5046,  5047,  5048,
    5049,  5050,  5054,  5058,  5059,  5060,  5064,  5065,  5066,  5071,
    5079,  5087,  5095,  5108,  5121,  5126,  5131,  5139,  5147,  5155,
    5163,  5171,  5179,  5187,  5197,  5207,  5217,  5219,  5223,  5228,
    5238,  5239,  5252,  5251,  5254,  5255,  5269,  5270,  5274,  5275,
    5279,  5284,  5295,  5332,  5333,  5338,  5337,  5353,  5368,  5367,
    5390,  5389,  5395,  5403,  5402,  5405,  5407,  5410,  5409,  5418,
    5421,  5420,  5429,  5430,  5436,  5437,  5454,  5455,  5459,  5460,
    5464,  5478,  5488,  5499,  5508,  5509,  5522,  5524,  5523,  5528,
    5526,  5537,  5538,  5542,  5556,  5568,  5569,  5582,  5591,  5613,
    5614,  5619,  5618,  5642,  5654,  5670,  5669,  5684,  5683,  5697,
    5702,  5707,  5727,  5745,  5749,  5776,  5788,  5789,  5794,  5803,
    5793,  5828,  5829,  5833,  5844,  5863,  5876,  5902,  5903,  5908,
    5907,  5944,  5953,  5954,  5958,  5959,  5963,  5965,  5971,  5977,
    5979,  5981,  5983,  5985,  5987,  5992,  5993,  5999,  6015,  6018,
    6035,  6036,  6040,  6041,  6045,  6046,  6050,  6051,  6056,  6059,
    6067,  6070,  6077,  6081,  6087,  6089,  6093,  6094,  6098,  6099,
    6100,  6104,  6119,  6124,  6129,  6134,  6139,  6144,  6149,  6164,
    6170,  6185,  6190,  6205,  6211,  6229,  6234,  6239,  6244,  6249,
    6254,  6260,  6259,  6285,  6286,  6287,  6292,  6297,  6302,  6304,
    6306,  6308,  6314,  6319,  6324,  6333,  6342,  6348,  6354,  6359,
    6362,  6364,  6368,  6387,  6395,  6410,  6420,  6431,  6432,  6433,
    6434,  6435,  6436,  6437,  6441,  6442,  6443,  6447,  6448,  6449,
    6450,  6455,  6462,  6469,  6470,  6474,  6475,  6476,  6477,  6478,
    6482,  6484,  6490,  6489,  6497,  6496,  6504,  6503,  6511,  6510,
    6520,  6517,  6528,  6526,  6535,  6534,  6573,  6581,  6589,  6597,
    6598,  6602,  6612,  6613,  6617,  6618,  6622,  6627,  6626,  6664,
    6664,  6667,  6666,  6676,  6677,  6681,  6682,  6686,  6687,  6691,
    6692,  6696,  6697,  6698,  6699,  6701,  6700,  6706,  6711,  6719,
    6720,  6725,  6728,  6732,  6736,  6743,  6744,  6748,  6749,  6753,
    6759,  6765,  6766,  6774,  6773,  6795,  6796,  6806,  6814,  6826,
    6826,  6829,  6830,  6838,  6842,  6850,  6851,  6852,  6853,  6854,
    6859,  6860,  6861,  6862,  6863,  6868,  6869,  6870,  6886,  6890,
    6894,  6898,  6900,  6907,  6909,  6914,  6916,  6917,  6918,  6922,
    6926,  6931,  6936,  6940,  6944,  6949,  6954,  6963,  6967,  6972,
    6977,  6981,  6985,  6990,  6995,  7004,  7022,  7023,  7030,  7037,
    7045,  7050,  7055,  7060,  7065,  7076,  7081,  7086,  7091,  7093,
    7095,  7097,  7099,  7101,  7103,  7105,  7113,  7115,  7120,  7121,
    7122,  7123,  7124,  7125,  7126,  7127,  7131,  7135,  7136,  7140,
    7141,  7145,  7146,  7147,  7148,  7149,  7153,  7154,  7155,  7156,
    7157,  7161,  7167,  7168,  7173,  7175,  7182,  7183,  7184,  7188,
    7192,  7193,  7194,  7195,  7196,  7197,  7201,  7202,  7203,  7204,
    7208,  7209,  7213,  7214,  7235,  7236,  7240,  7241,  7245,  7246,
    7251,  7252,  7256,  7257,  7258,  7265,  7266,  7272,  7279,  7283,
    7284,  7288,  7289,  7293,  7301,  7309,  7318,  7322,  7328,  7332,
    7333,  7342,  7351,  7357,  7363,  7376,  7382,  7392,  7406,  7420,
    7421,  7425,  7430,  7434,  7435,  7439,  7440,  7444,  7451,  7455,
    7456,  7460,  7468,  7469,  7473,  7474,  7478,  7479,  7483,  7484,
    7485,  7493,  7494,  7498,  7499,  7500,  7501,  7505,  7506,  7511,
    7510,  7523,  7524,  7528,  7531,  7532,  7533,  7534,  7538,  7546,
    7553,  7554,  7558,  7568,  7569,  7573,  7574,  7577,  7579,  7583,
    7595,  7596,  7600,  7607,  7620,  7621,  7623,  7625,  7631,  7636,
    7642,  7648,  7655,  7665,  7666,  7667,  7668,  7669,  7673,  7674,
    7678,  7679,  7683,  7684,  7688,  7689,  7690,  7694,  7695,  7699,
    7703,  7715,  7716,  7720,  7721,  7725,  7726,  7730,  7731,  7735,
    7736,  7740,  7741,  7745,  7746,  7751,  7752,  7753,  7757,  7759,
    7764,  7769,  7771,  7779,  7787,  7793,  7802,  7803,  7807,  7811,
    7812,  7822,  7823,  7824,  7828,  7832,  7839,  7845,  7857,  7858,
    7862,  7864,  7874,  7890,  7873,  7912,  7911,  7928,  7937,  7936,
    7957,  7956,  7977,  7976,  7995,  7989,  8008,  8007,  8046,  8051,
    8056,  8061,  8067,  8066,  8073,  8080,  8092,  8079,  8114,  8115,
    8119,  8125,  8126,  8130,  8134,  8138,  8147,  8148,  8149,  8150,
    8154,  8155,  8167,  8168,  8172,  8173,  8176,  8178,  8186,  8194,
    8196,  8198,  8199,  8207,  8208,  8214,  8223,  8221,  8234,  8247,
    8246,  8259,  8257,  8270,  8277,  8287,  8288,  8297,  8304,  8308,
    8314,  8312,  8329,  8331,  8336,  8344,  8343,  8357,  8361,  8360,
    8372,  8373,  8377,  8390,  8391,  8395,  8399,  8406,  8411,  8415,
    8422,  8429,  8433,  8438,  8446,  8454,  8464,  8475,  8485,  8496,
    8506,  8512,  8518,  8523,  8529,  8543,  8557,  8562,  8566,  8571,
    8572,  8573,  8578,  8583,  8587,  8597,  8599,  8600,  8601,  8602,
    8606,  8611,  8619,  8624,  8632,  8633,  8637,  8638,  8642,  8642,
    8645,  8647,  8651,  8652,  8656,  8657,  8665,  8666,  8667,  8671,
    8672,  8677,  8686,  8687,  8688,  8689,  8694,  8693,  8703,  8702,
    8710,  8717,  8727,  8744,  8747,  8754,  8758,  8765,  8769,  8773,
    8780,  8780,  8786,  8787,  8791,  8792,  8793,  8797,  8798,  8807,
    8814,  8815,  8820,  8819,  8831,  8832,  8833,  8837,  8839,  8838,
    8845,  8844,  8865,  8866,  8870,  8871,  8875,  8876,  8877,  8881,
    8882,  8887,  8886,  8907,  8908,  8912,  8917,  8918,  8925,  8927,
    8932,  8934,  8933,  8946,  8948,  8947,  8961,  8962,  8967,  8976,
    8977,  8978,  8982,  8989,  8999,  9007,  9016,  9018,  9017,  9023,
    9022,  9045,  9046,  9050,  9051,  9055,  9056,  9057,  9058,  9059,
    9060,  9064,  9065,  9070,  9069,  9090,  9091,  9092,  9097,  9096,
    9106,  9113,  9119,  9128,  9129,  9133,  9149,  9148,  9161,  9162,
    9166,  9167,  9171,  9182,  9193,  9194,  9199,  9198,  9213,  9214,
    9218,  9219,  9223,  9234,  9246,  9245,  9253,  9253,  9262,  9263,
    9268,  9269,  9278,  9277,  9292,  9291,  9311,  9310,  9327,  9325,
    9347,  9348,  9353,  9352,  9366,  9376,  9365,  9386,  9398,  9462,
    9467,  9482,  9483,  9498,  9497,  9513,  9512,  9525,  9527,  9542,
    9550,  9548,  9564,  9582,  9584,  9594,  9598,  9639,  9648,  9658,
    9659,  9663,  9667,  9673,  9680,  9682,  9691,  9695,  9699,  9706,
    9715,  9719,  9726,  9743,  9746,  9754,  9757,  9764,  9768,  9772,
    9776,  9783,  9784,  9788,  9789,  9798,  9811,  9817,  9827,  9830,
    9838,  9841,  9846,  9854,  9855,  9856,  9870,  9875,  9897,  9903,
    9909,  9915,  9924,  9925,  9926,  9927,  9928,  9932,  9933,  9934,
    9938,  9939,  9940,  9944,  9945,  9950, 10001, 10008, 10051, 10057,
   10063, 10069, 10075, 10081, 10087, 10093, 10097, 10103, 10109, 10115,
   10121, 10127, 10131, 10137, 10146, 10152, 10160, 10166, 10175, 10181,
   10189, 10199, 10206, 10214, 10220, 10229, 10233, 10239, 10245, 10251,
   10257, 10264, 10270, 10276, 10282, 10288, 10295, 10301, 10307, 10313,
   10319, 10325, 10331, 10337, 10343, 10347, 10348, 10352, 10353, 10357,
   10358, 10362, 10363, 10367, 10368, 10369, 10370, 10371, 10372, 10376,
   10377, 10382, 10386, 10390, 10391, 10392, 10396, 10397, 10398, 10399,
   10400, 10401, 10405, 10406, 10407, 10412, 10411, 10417, 10425, 10448,
   10455, 10464, 10465, 10466, 10467, 10471, 10480, 10481, 10482, 10483,
   10484, 10485, 10486, 10487, 10519, 10520, 10521, 10522, 10523, 10524,
   10525, 10526, 10527, 10535, 10543, 10544, 10551, 10557, 10562, 10572,
   10577, 10582, 10588, 10593, 10599, 10610, 10617, 10622, 10627, 10632,
   10637, 10642, 10647, 10655, 10656, 10657, 10658, 10666, 10667, 10675,
   10676, 10682, 10686, 10692, 10698, 10707, 10708, 10717, 10724, 10738,
   10744, 10750, 10759, 10768, 10774, 10780, 10786, 10792, 10807, 10818,
   10824, 10830, 10836, 10842, 10848, 10856, 10863, 10867, 10872, 10880,
   10901, 10908, 10914, 10921, 10928, 10934, 10940, 10946, 10952, 10958,
   10964, 10970, 10976, 10983, 10989, 10996, 11002, 11007, 11012, 11017,
   11022, 11040, 11046, 11052, 11057, 11064, 11071, 11079, 11086, 11093,
   11100, 11107, 11124, 11130, 11136, 11142, 11148, 11155, 11161, 11167,
   11176, 11187, 11194, 11200, 11206, 11213, 11221, 11227, 11233, 11238,
   11244, 11252, 11258, 11264, 11270, 11276, 11284, 11296, 11303, 11318,
   11324, 11331, 11338, 11345, 11352, 11359, 11363, 11370, 11388, 11387,
   11455, 11463, 11465, 11470, 11471, 11475, 11476, 11480, 11481, 11485,
   11492, 11500, 11527, 11533, 11539, 11545, 11551, 11557, 11566, 11573,
   11575, 11572, 11582, 11593, 11599, 11605, 11611, 11617, 11623, 11629,
   11635, 11641, 11648, 11647, 11672, 11681, 11699, 11701, 11706, 11723,
   11730, 11737, 11744, 11751, 11758, 11765, 11772, 11779, 11786, 11797,
   11804, 11815, 11826, 11846, 11845, 11851, 11868, 11874, 11883, 11892,
   11902, 11901, 11913, 11923, 11931, 11936, 11944, 11945, 11950, 11955,
   11958, 11960, 11964, 11969, 11977, 11978, 11982, 11986, 11993, 12000,
   12007, 12020, 12019, 12036, 12039, 12038, 12043, 12042, 12047, 12046,
   12050, 12055, 12056, 12060, 12061, 12062, 12063, 12064, 12065, 12066,
   12067, 12071, 12072, 12073, 12074, 12081, 12082, 12086, 12091, 12099,
   12100, 12104, 12111, 12119, 12128, 12138, 12139, 12148, 12157, 12169,
   12170, 12182, 12193, 12194, 12200, 12205, 12219, 12227, 12225, 12245,
   12243, 12256, 12268, 12266, 12286, 12285, 12297, 12310, 12308, 12329,
   12328, 12341, 12355, 12356, 12357, 12361, 12362, 12370, 12371, 12375,
   12384, 12385, 12386, 12391, 12395, 12396, 12400, 12401, 12405, 12406,
   12414, 12422, 12430, 12431, 12444, 12462, 12472, 12473, 12478, 12481,
   12482, 12483, 12487, 12488, 12493, 12492, 12498, 12497, 12505, 12506,
   12509, 12511, 12511, 12515, 12515, 12520, 12521, 12525, 12527, 12532,
   12533, 12537, 12548, 12562, 12563, 12564, 12565, 12566, 12567, 12568,
   12569, 12570, 12571, 12572, 12573, 12577, 12578, 12579, 12580, 12581,
   12582, 12583, 12584, 12585, 12589, 12590, 12591, 12592, 12595, 12597,
   12598, 12602, 12603, 12607, 12615, 12617, 12621, 12623, 12622, 12636,
   12639, 12638, 12653, 12658, 12673, 12675, 12679, 12684, 12692, 12693,
   12710, 12733, 12734, 12740, 12741, 12745, 12758, 12757, 12766, 12767,
   12776, 12777, 12781, 12782, 12786, 12787, 12801, 12802, 12806, 12816,
   12825, 12832, 12839, 12849, 12850, 12857, 12867, 12868, 12870, 12872,
   12874, 12876, 12885, 12889, 12890, 12894, 12908, 12909, 12915, 12914,
   12925, 12931, 12940, 12941, 12942, 12947, 12948, 12953, 12960, 12966,
   12976, 12985, 12991, 12997, 13006, 13011, 13016, 13020, 13026, 13032,
   13041, 13050, 13054, 13061, 13062, 13066, 13071, 13076, 13088, 13092,
   13096, 13100, 13105, 13108, 13112, 13126, 13134, 13147, 13149, 13153,
   13154, 13158, 13159, 13160, 13161, 13162, 13163, 13167, 13168, 13169,
   13170, 13171, 13175, 13176, 13177, 13178, 13182, 13183, 13184, 13185,
   13186, 13190, 13191, 13192, 13193, 13194, 13198, 13203, 13204, 13208,
   13209, 13213, 13214, 13215, 13220, 13219, 13251, 13252, 13256, 13257,
   13261, 13271, 13271, 13283, 13284, 13287, 13307, 13311, 13316, 13324,
   13330, 13341, 13329, 13343, 13358, 13370, 13369, 13390, 13389, 13399,
   13398, 13421, 13427, 13435, 13443, 13457, 13472, 13480, 13484, 13489,
   13488, 13497, 13502, 13508, 13513, 13518, 13525, 13523, 13537, 13538,
   13542, 13554, 13567, 13568, 13572, 13586, 13590, 13599, 13602, 13609,
   13610, 13618, 13629, 13617, 13644, 13654, 13643, 13669, 13677, 13678,
   13685, 13689, 13690, 13699, 13700, 13704, 13704, 13717, 13718, 13720,
   13719, 13732, 13738, 13740, 13744, 13746, 13752, 13756, 13757, 13761,
   13762, 13766, 13776, 13777, 13781, 13782, 13786, 13787, 13791, 13792,
   13797, 13796, 13812, 13811, 13826, 13827, 13831, 13832, 13836, 13841,
   13849, 13857, 13868, 13869, 13875, 13883, 13885, 13887, 13885, 13897,
   13911, 13918, 13928, 13917, 13957, 13958, 13962, 13971, 13972, 13976,
   13986, 13987, 13994, 13993, 14010, 14013, 14020, 14021, 14029, 14044,
   14052, 14063, 14062, 14077, 14076, 14092, 14094, 14098, 14099, 14103,
   14118, 14136, 14137, 14141, 14142, 14146, 14147, 14148, 14153, 14164,
   14152, 14174, 14176, 14177, 14180, 14182, 14185, 14187, 14190, 14191,
   14194, 14198, 14202, 14206, 14210, 14214, 14218, 14222, 14226, 14234,
   14237, 14247, 14246, 14265, 14272, 14280, 14288, 14296, 14304, 14312,
   14319, 14326, 14332, 14334, 14336, 14345, 14349, 14354, 14353, 14360,
   14359, 14365, 14374, 14381, 14386, 14391, 14396, 14401, 14406, 14408,
   14410, 14412, 14419, 14427, 14429, 14437, 14444, 14451, 14459, 14465,
   14470, 14478, 14486, 14494, 14498, 14503, 14510, 14515, 14522, 14529,
   14535, 14541, 14547, 14555, 14560, 14567, 14574, 14581, 14588, 14593,
   14598, 14603, 14608, 14615, 14637, 14639, 14641, 14646, 14647, 14650,
   14652, 14656, 14657, 14661, 14662, 14666, 14667, 14671, 14672, 14676,
   14677, 14681, 14682, 14690, 14702, 14701, 14720, 14719, 14729, 14730,
   14731, 14732, 14733, 14734, 14738, 14739, 14743, 14750, 14751, 14753,
   14754, 14758, 14759, 14772, 14773, 14774, 14789, 14788, 14800, 14799,
   14811, 14816, 14817, 14832, 14835, 14834, 14847, 14848, 14853, 14855,
   14857, 14859, 14861, 14863, 14871, 14873, 14875, 14877, 14882, 14884,
   14892, 14894, 14896, 14898, 14900, 14917, 14918, 14922, 14926, 14939,
   14938, 14951, 14959, 14960, 14963, 14965, 14966, 14970, 14986, 14987,
   14992, 14991, 15001, 15002, 15006, 15006, 15010, 15009, 15015, 15019,
   15020, 15024, 15025, 15032, 15037, 15036, 15051, 15050, 15065, 15066,
   15067, 15071, 15072, 15073, 15074, 15082, 15086, 15095, 15095, 15100,
   15101, 15109, 15121, 15135, 15146, 15159, 15120, 15172, 15173, 15177,
   15178, 15182, 15183, 15191, 15195, 15196, 15197, 15200, 15202, 15206,
   15207, 15211, 15216, 15223, 15228, 15235, 15237, 15241, 15242, 15246,
   15251, 15259, 15260, 15264, 15266, 15274, 15275, 15279, 15280, 15281,
   15285, 15287, 15292, 15293, 15302, 15303, 15307, 15308, 15312, 15325,
   15330, 15335, 15340, 15348, 15356, 15361, 15369, 15377, 15392, 15399,
   15405, 15415, 15416, 15424, 15425, 15426, 15427, 15441, 15447, 15453,
   15459, 15465, 15471, 15490, 15500, 15510, 15516, 15523, 15533, 15540,
   15547, 15558, 15557, 15580, 15581, 15586, 15587, 15594, 15592, 15618,
   15619, 15625, 15630, 15639, 15654, 15655, 15659, 15664, 15672, 15677,
   15685, 15690, 15695, 15700, 15706, 15711, 15719, 15724, 15729, 15734,
   15740, 15748, 15749, 15760, 15768, 15772, 15778, 15784, 15794, 15800,
   15809, 15819, 15820, 15824, 15825, 15826, 15830, 15838, 15846, 15854,
   15862, 15863, 15871, 15872, 15880, 15881, 15886, 15895, 15896, 15904,
   15905, 15914, 15915, 15923, 15924, 15928, 15937, 15938, 15939, 15943,
   15954, 15983, 15992, 15992, 15994, 16004, 16005, 16006, 16007, 16008,
   16009, 16010, 16011, 16012, 16017, 16018, 16019, 16020, 16021, 16022,
   16023, 16024, 16025, 16026, 16034, 16035, 16036, 16037, 16038, 16039,
   16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050, 16051, 16055,
   16056, 16057, 16058, 16059, 16060, 16061, 16065, 16066, 16067, 16068,
   16069, 16070, 16071, 16072, 16073, 16077, 16078, 16079, 16080, 16081,
   16082, 16083, 16096, 16097, 16098, 16099, 16100, 16101, 16102, 16103,
   16104, 16105, 16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113,
   16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123,
   16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133,
   16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141, 16142, 16143,
   16144, 16145, 16146, 16147, 16148, 16149, 16150, 16191, 16192, 16193,
   16194, 16195, 16196, 16207, 16208, 16209, 16210, 16211, 16212, 16213,
   16214, 16215, 16216, 16220, 16221, 16222, 16229, 16230, 16231, 16235,
   16236, 16237, 16246, 16247, 16248, 16249, 16250, 16251, 16252, 16253,
   16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263,
   16264, 16265, 16266, 16267, 16268, 16269, 16270, 16271, 16272, 16273,
   16274, 16275, 16276, 16277, 16278, 16279, 16287, 16288, 16289, 16290,
   16291, 16292, 16293, 16294, 16295, 16296, 16297, 16298, 16299, 16300,
   16301, 16302, 16303, 16304, 16305, 16306, 16307, 16308, 16309, 16310,
   16311, 16312, 16313, 16314, 16315, 16316, 16317, 16318, 16319, 16320,
   16321, 16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329, 16330,
   16331, 16332, 16333, 16338, 16339, 16340, 16341, 16342, 16343, 16344,
   16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353, 16354,
   16355, 16356, 16357, 16358, 16359, 16360, 16361, 16362, 16363, 16364,
   16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372, 16373, 16374,
   16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16383, 16384,
   16385, 16386, 16387, 16388, 16389, 16390, 16391, 16392, 16393, 16394,
   16395, 16396, 16397, 16398, 16399, 16400, 16401, 16402, 16403, 16404,
   16405, 16406, 16407, 16408, 16409, 16410, 16411, 16412, 16413, 16414,
   16415, 16416, 16417, 16418, 16419, 16420, 16421, 16422, 16423, 16424,
   16425, 16426, 16427, 16428, 16429, 16430, 16431, 16432, 16433, 16434,
   16435, 16436, 16437, 16438, 16439, 16440, 16441, 16442, 16443, 16444,
   16445, 16446, 16447, 16448, 16449, 16450, 16451, 16452, 16453, 16454,
   16455, 16456, 16457, 16458, 16459, 16460, 16461, 16462, 16463, 16464,
   16465, 16466, 16467, 16468, 16469, 16470, 16471, 16472, 16473, 16474,
   16475, 16476, 16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484,
   16485, 16486, 16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494,
   16495, 16496, 16497, 16498, 16499, 16500, 16501, 16502, 16503, 16504,
   16505, 16506, 16507, 16508, 16509, 16510, 16511, 16512, 16513, 16514,
   16515, 16516, 16517, 16518, 16519, 16520, 16521, 16522, 16523, 16524,
   16525, 16526, 16527, 16528, 16529, 16530, 16531, 16532, 16533, 16534,
   16535, 16536, 16537, 16538, 16539, 16540, 16541, 16542, 16543, 16544,
   16545, 16546, 16547, 16548, 16549, 16550, 16551, 16552, 16553, 16554,
   16555, 16556, 16557, 16558, 16559, 16560, 16561, 16562, 16563, 16564,
   16565, 16566, 16567, 16568, 16569, 16570, 16571, 16572, 16573, 16574,
   16575, 16576, 16577, 16578, 16579, 16580, 16581, 16582, 16583, 16584,
   16585, 16586, 16587, 16588, 16589, 16590, 16591, 16592, 16593, 16594,
   16595, 16596, 16597, 16598, 16599, 16600, 16601, 16602, 16603, 16604,
   16605, 16606, 16618, 16617, 16634, 16640, 16633, 16656, 16655, 16670,
   16669, 16686, 16685, 16713, 16714, 16720, 16719, 16726, 16725, 16735,
   16734, 16745, 16744, 16750, 16758, 16760, 16765, 16765, 16775, 16774,
   16789, 16788, 16793, 16797, 16798, 16799, 16803, 16804, 16805, 16806,
   16810, 16811, 16812, 16813, 16818, 16823, 16828, 16837, 16842, 16847,
   16852, 16857, 16862, 16867, 16872, 16886, 16897, 16916, 16934, 16946,
   16954, 16959, 16975, 16976, 16977, 16978, 16982, 17001, 17019, 17020,
   17024, 17025, 17026, 17027, 17031, 17045, 17049, 17054, 17059, 17070,
   17071, 17072, 17078, 17084, 17096, 17095, 17109, 17110, 17116, 17125,
   17126, 17130, 17131, 17135, 17154, 17155, 17156, 17161, 17162, 17167,
   17166, 17184, 17183, 17195, 17204, 17214, 17213, 17254, 17255, 17259,
   17260, 17264, 17265, 17266, 17267, 17269, 17268, 17281, 17282, 17283,
   17284, 17285, 17291, 17296, 17302, 17308, 17314, 17321, 17328, 17332,
   17339, 17348, 17350, 17355, 17360, 17367, 17374, 17381, 17388, 17395,
   17402, 17414, 17415, 17419, 17420, 17424, 17429, 17437, 17447, 17466,
   17469, 17471, 17475, 17476, 17483, 17485, 17489, 17490, 17495, 17494,
   17498, 17497, 17501, 17500, 17504, 17503, 17506, 17507, 17508, 17509,
   17510, 17511, 17512, 17513, 17514, 17515, 17516, 17517, 17518, 17519,
   17520, 17521, 17522, 17523, 17524, 17525, 17526, 17527, 17528, 17529,
   17530, 17531, 17532, 17536, 17537, 17541, 17542, 17546, 17553, 17560,
   17570, 17580, 17589, 17598, 17611, 17616, 17624, 17629, 17637, 17642,
   17649, 17649, 17650, 17650, 17653, 17659, 17665, 17670, 17677, 17683,
   17690, 17699, 17703, 17709, 17719, 17723, 17727, 17728, 17732, 17760,
   17762, 17766, 17770, 17774, 17781, 17786, 17791, 17796, 17801, 17809,
   17810, 17814, 17815, 17820, 17821, 17825, 17826, 17830, 17831, 17835,
   17836, 17841, 17840, 17850, 17859, 17860, 17864, 17865, 17870, 17871,
   17872, 17877, 17878, 17879, 17883, 17895, 17904, 17910, 17919, 17928,
   17941, 17943, 17945, 17953, 17954, 17955, 17959, 17960, 17966, 17967,
   17968, 17969, 17970, 17971, 17972, 17982, 17983, 17988, 18001, 18015,
   18016, 18017, 18021, 18022, 18026, 18027, 18032, 18033, 18037, 18043,
   18052, 18052, 18066, 18067, 18068, 18069, 18079, 18081, 18087, 18093,
   18103, 18112, 18118, 18123, 18127, 18101, 18175, 18175, 18191, 18190,
   18206, 18214, 18205, 18229, 18230, 18234, 18235, 18241, 18245, 18249,
   18253, 18257, 18261, 18269, 18270, 18286, 18293, 18300, 18310, 18311,
   18312, 18316, 18317, 18318, 18322, 18323, 18328, 18330, 18329, 18335,
   18336, 18340, 18345, 18352, 18357, 18366
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FOR_SYSTEM_TIME_SYM", "FROM",
  "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM", "GRANT", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HAVING", "HEX_NUM",
  "HEX_STRING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "PORTION_SYM", "POSITION_SYM", "PRECISION", "PRIMARY_SYM",
  "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM",
  "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM",
  "REF_SYSTEM_ID_SYM", "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME",
  "REPEAT_SYM", "REPLACE", "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT",
  "RETURNING_SYM", "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE",
  "RIGHT", "ROWS_SYM", "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW",
  "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_SMALL_RESULT", "SQL_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM",
  "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM",
  "ALWAYS_SYM", "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM",
  "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM",
  "BEGIN_ORACLE_SYM", "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM",
  "BOOLEAN_SYM", "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLON_ORACLE_SYM", "COLUMNS",
  "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM",
  "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM",
  "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM",
  "FIXED_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL",
  "GENERATED_SYM", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM",
  "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM", "PARTIAL",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM",
  "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM",
  "POLYGON", "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNKNOWN_SYM", "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM",
  "VALUE_SYM", "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "PREC_BELOW_ESCAPE", "CONDITIONLESS_JOIN",
  "ON_SYM", "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "','", "'!'", "'{'", "'}'", "';'", "'.'", "'@'", "$accept", "query",
  "$@1", "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "$@2", "execute", "$@3", "$@4",
  "execute_using", "$@5", "execute_params", "help", "$@6", "change", "$@7",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "do_domain_id_list", "do_domain_id", "ignore_domain_id_list",
  "ignore_domain_id", "master_file_def", "optional_connection_name",
  "connection_name", "create", "$@8", "$@9", "$@10", "$@11", "$@12",
  "$@13", "$@14", "$@15", "$@16", "$@17", "$@18", "$@19", "$@20", "$@21",
  "$@22", "$@23", "$@24", "$@25", "$@26", "$@27", "$@28", "$@29", "$@30",
  "$@31", "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@32",
  "package_specification_procedure", "$@33",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@34",
  "package_implementation_procedure_body", "$@35",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "opt_sequence", "sequence_defs", "sequence_def", "server_def", "$@36",
  "server_options_list", "server_option", "event_tail", "$@37",
  "ev_schedule_time", "$@38", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@39", "clear_privileges", "opt_aggregate", "sp_name",
  "opt_sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "create_package_chistic", "create_package_chistics",
  "opt_create_package_chistics", "opt_create_package_chistics_init",
  "$@40", "sp_c_chistic", "sp_suid", "call", "$@41", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "$@42", "sp_fdparams",
  "sp_param_name", "sp_param_name_and_type", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_parenthesized_pdparam_list", "$@43", "sp_no_param",
  "opt_sp_parenthesized_fdparam_list", "opt_sp_parenthesized_pdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_proc_stmts1_implicit_block",
  "$@44", "opt_sp_decl_body_list", "sp_decl_body_list", "$@45",
  "sp_decl_non_handler_list", "sp_decl_handler_list",
  "opt_sp_decl_handler_list", "optionally_qualified_column_ident",
  "row_field_name", "row_field_definition", "row_field_definition_list",
  "row_type_body", "sp_decl_idents_init_vars", "sp_decl_vars",
  "sp_decl_non_handler", "$@46", "sp_decl_handler", "$@47",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@48", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@49", "sp_statement",
  "$@50", "$@51", "sp_proc_stmt_statement", "$@52", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@53", "reset_lex_expr", "$@54",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "remember_lex", "assignment_source_lex", "assignment_source_expr",
  "$@55", "for_loop_bound_expr", "$@56", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@57", "$@58", "$@59", "sp_elseifs",
  "case_stmt_specification", "$@60", "case_stmt_body", "$@61", "$@62",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@63", "$@64", "searched_when_clause", "$@65",
  "$@66", "else_clause_opt", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@67", "$@68", "$@69", "opt_not_atomic",
  "sp_unlabeled_block", "$@70", "$@71", "$@72", "sp_instr_addr", "sp_body",
  "$@73", "$@74", "$@75", "sp_block_statements_and_exceptions", "$@76",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@77", "opt_sp_for_loop_direction", "sp_for_loop_index_and_bounds",
  "sp_for_loop_bounds", "loop_body", "while_body", "$@78", "repeat_body",
  "$@79", "pop_sp_loop_label", "sp_labeled_control", "$@80", "$@81",
  "$@82", "$@83", "$@84", "$@85", "sp_unlabeled_control", "$@86", "$@87",
  "$@88", "$@89", "$@90", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@91", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@92", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@93", "have_partitioning",
  "partition_entry", "$@94", "partition", "$@95", "part_type_def", "$@96",
  "$@97", "$@98", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@99",
  "$@100", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "$@101", "part_name", "opt_part_values", "$@102", "$@103",
  "part_func_max", "part_values_in", "part_value_list", "part_value_item",
  "$@104", "$@105", "part_value_item_list", "part_value_expr_item",
  "opt_sub_partition", "sub_part_list", "sub_part_definition", "$@106",
  "sub_name", "opt_part_options", "opt_part_option_list",
  "opt_part_option", "opt_versioning_rotation",
  "opt_versioning_interval_start", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@107", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list",
  "create_field_list_parens", "field_list", "field_list_item",
  "column_def", "key_def", "$@108", "$@109", "$@110", "$@111", "$@112",
  "$@113", "$@114", "constraint_def", "period_for_system_time",
  "period_for_application_time", "opt_check_constraint",
  "check_constraint", "opt_constraint_no_id", "opt_constraint",
  "constraint", "field_spec", "@115", "field_type_or_serial", "$@116",
  "$@117", "opt_serial_attribute", "opt_serial_attribute_list",
  "opt_asrow_attribute", "opt_asrow_attribute_list", "field_def", "$@118",
  "opt_generated_always", "vcol_opt_specifier", "vcol_opt_attribute",
  "vcol_opt_attribute_list", "vcol_attribute", "parse_vcol_expr", "$@119",
  "parenthesized_expr", "virtual_column_func", "expr_or_literal",
  "column_default_expr", "qualified_field_type", "field_type",
  "sp_param_field_type", "field_type_numeric",
  "opt_binary_and_compression", "field_type_string",
  "sp_param_field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "srid_option", "float_options",
  "precision", "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1",
  "opt_field_length_default_sp_param_varchar",
  "opt_field_length_default_sp_param_char", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "type_with_opt_collate",
  "sp_param_type_with_opt_collate", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "opt_binary", "binary", "opt_bin_mod",
  "ws_nweights", "$@120", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@121", "$@122", "$@123", "$@124", "$@125", "$@126", "$@127",
  "$@128", "$@129", "$@130", "$@131", "opt_account_locking",
  "opt_password_expiration", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@132", "$@133", "$@134", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@135",
  "add_part_extra", "reorg_partition_rule", "$@136", "reorg_parts_rule",
  "$@137", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@138", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@139", "$@140", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@141",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@142", "opt_checksum_type",
  "repair_table_or_view", "$@143", "repair", "$@144", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@145", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@146", "persistent_index_stat_spec",
  "$@147", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@148", "check", "$@149",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@150", "opt_no_write_to_binlog",
  "rename", "$@151", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@152", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@153", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@154", "cache_keys_spec", "$@155", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "$@156", "$@157", "select_into", "$@158",
  "$@159", "simple_table", "table_value_constructor", "$@160",
  "query_specification_start", "$@161", "$@162", "query_specification",
  "select_into_query_specification", "query_expression",
  "query_expression_no_with_clause", "query_expression_body_ext", "$@163",
  "$@164", "query_expression_body_ext_parens", "query_expression_body",
  "$@165", "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end",
  "remember_end_opt", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "opt_dyncol_type", "dyncol_type", "numeric_dyncol_type",
  "temporal_dyncol_type", "string_dyncol_type", "$@166",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@167", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@168", "$@169", "$@170",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@171",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@172", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@173", "cast_type", "$@174", "$@175",
  "$@176", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@177", "$@178", "$@179", "$@180", "$@181", "$@182", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "table_primary_derived",
  "opt_outer", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "$@183", "$@184", "index_hints_list",
  "opt_index_hints_list", "$@185", "opt_key_definition", "$@186",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias_clause", "table_alias_clause", "opt_all",
  "opt_where_clause", "$@187", "opt_having_clause", "$@188", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@189",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@190", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@191", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@192",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@193", "$@194", "do", "$@195", "drop", "$@196",
  "$@197", "$@198", "$@199", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@200", "$@201", "replace", "$@202", "$@203",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "$@204", "insert_field_spec", "$@205", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@206", "no_braces_with_names", "$@207", "opt_values",
  "opt_values_with_names", "values", "values_with_names",
  "expr_or_default", "opt_insert_update", "$@208", "$@209",
  "update_table_list", "update", "$@210", "$@211", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@212", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "delete_single_table_for_period",
  "single_multi", "$@213", "$@214", "opt_select_expressions",
  "table_wild_list", "table_wild_one", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@215", "$@216",
  "opt_truncate_table_storage_clause", "opt_table_sym", "opt_profile_defs",
  "profile_defs", "profile_def", "opt_profile_args", "show", "$@217",
  "show_param", "$@218", "$@219", "show_engine_param", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "from_or_in", "binlog_in",
  "binlog_from", "wild_and_where", "describe", "$@220", "$@221",
  "explainable_command", "describe_command", "analyze_stmt_command",
  "opt_extended_describe", "opt_format_json", "opt_describe_column",
  "flush", "$@222", "flush_options", "$@223", "opt_flush_lock",
  "flush_lock", "$@224", "flush_options_list", "flush_option",
  "opt_table_list", "backup", "backup_statements", "$@225",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@226", "reset_options",
  "reset_option", "$@227", "$@228", "slave_reset_options",
  "master_reset_options", "purge", "$@229", "kill", "$@230", "kill_type",
  "kill_option", "kill_expr", "shutdown", "$@231", "shutdown_option",
  "use", "load", "$@232", "$@233", "$@234", "$@235", "data_or_xml",
  "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "hex_or_bin_String",
  "param_marker", "signed_literal", "literal", "NUM_literal",
  "temporal_literal", "with_clause", "$@236", "opt_recursive", "with_list",
  "with_list_element", "$@237", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "ident_directly_assignable", "label_ident",
  "labels_declaration_oracle", "label_declaration_oracle", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case",
  "keyword_directly_assignable", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@238", "$@239", "$@240",
  "set_assign", "$@241", "$@242", "$@243",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@244", "$@245", "$@246",
  "start_option_value_list_following_option_type", "$@247",
  "option_value_list_continued", "option_value_list", "$@248", "$@249",
  "option_value", "$@250", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@251",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@252", "handler", "$@253",
  "handler_tail", "$@254", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@255", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "grant_role", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@256", "$@257", "$@258",
  "$@259", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "auth_expression",
  "auth_token", "opt_auth_str", "opt_column_list", "column_list",
  "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@260", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@261", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@262", "$@263", "$@264", "$@265", "$@266",
  "sf_return_type", "$@267", "sf_c_chistics_and_body_standalone", "$@268",
  "sp_tail_standalone", "$@269", "$@270", "opt_package_routine_end_name",
  "sp_tail_is", "xa", "opt_format_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "$@271",
  "opt_migrate", "install", "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,  1009,    61,    62,    60,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1010,  1011,  1012,
    1013,    40,    41,  1014,    44,    33,   123,   125,    59,    46,
      64
};
# endif

#define YYPACT_NINF -5129

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5129)))

#define YYTABLE_NINF -3473

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   17195,  3512,  1574, 86347, -5129,   -26, -5129,   675, -5129, -5129,
   -5129, -5129,  4470, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,   310,   101, -5129,   285, -5129, -5129,   267, 81853,  -136,
     924, -5129, -5129, 83137, -5129, -5129,  -163, -5129, 83137, -5129,
   -5129, 86347, -5129, -5129,  1296, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,   221, -5129,  2602,    82, -5129, -5129, -5129,
   -5129, -5129, -5129,  1566, -5129, -5129, -5129, -5129, -5129,   101,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, 86347, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  1314, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,   929, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, 86989, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,   575, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  2351, -5129, -5129, -5129, -5129, -5129,
     502, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  1924, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, 86347, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,   285, -5129, -5129,  1349,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  1314,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, 86347, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,   409, -5129,
   -5129,   384, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  1955, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  3025, -5129, -5129,
     441,  1907,  2026, -5129, -5129,  1555, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,  3367, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
     418, -5129, -5129, -5129, -5129,  4465,  1364, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, 70914, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,   441, -5129, -5129,
      69, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, 86347, 86347,  1452,  1676, 86347,  2176,
    2343, 82495, 86347,  2343, -5129,   104, -5129, -5129,  2066, -5129,
    1821, -5129,   101,   529, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  1880, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  2324,  2383,   997,  2453,  2615, 86347, 50284,
     306,  2343, -5129,   459,  2343,  2343,  2343,  2343,  2671,  2343,
    2343, 86347, -5129,  2343,  2343,   942, 90841, 38351, -5129,  1339,
     890,  2614, -5129, -5129, -5129, -5129, -5129, -5129,  8661,   101,
   24585,  2759, -5129, -5129,  2314,  3859,  2072, -5129,  2600, -5129,
   -5129, 86347, -5129, -5129,  8661,  1428, -5129,  2600, 39096,  3716,
   -5129, 36181,  7083,  2600,   101,  2690, -5129,  2086, 24585, -5129,
   -5129, -5129, -5129, 86347, -5129,  1314, -5129, -5129, -5129,  2538,
   -5129, 82495, -5129, -5129, -5129,  2099, -5129,  2874, 24585,   174,
    2612, -5129, -5129,  2481, 71556, 82495,  2815,  2383,  2840, -5129,
    1927,  1333, -5129,  2201,  2289,  2383,  1989,  2299,  2383,  2677,
    2343,  2343, -5129, -5129,  2367,  2367,  2367,  2546,  2367, -5129,
    2367,  2908,  2243,   280, -5129, -5129,  2252, 86347,  2815, -5129,
   -5129, -5129,  2815,  2815,  2395,  2943,  2947,  2952,   142,  1906,
     127,   127,  2066, 50956,  1179,  2772, -5129,  2908,  2599,   358,
   -5129, -5129,  2311,  2599,   441,  2599, -5129,   265,  1821,   595,
   86347, -5129, -5129, -5129,  2320, -5129, -5129, -5129, 86347, -5129,
    2378, -5129,  1385, 51662, -5129, 86347,  3041, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129,  2430, -5129, -5129,  2875,   574,
    2479,  2716,  2420, -5129,  2915, 82495, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  2412, 86347, -5129,  3114, 24585,  2324,
   -5129,  2916, -5129, -5129, -5129, -5129, 71556, -5129, 86347, -5129,
    3193, -5129, -5129, 90841, -5129, -5129,  1303, -5129, -5129, 53762,
    1620, 43266, -5129,  2464,  2470,  2770, -5129,  2435,  1473,  1549,
   -5129,  1581, -5129, -5129,  1641,  1679,  1860, -5129, -5129,  3157,
   -5129, -5129, 74791,   607, 86347,  3145,  2343, 86347, 86347, 86347,
   86347, 86347, 86347, -5129, 82495,  2585, -5129, -5129,  2343,  2343,
   -5129,  3151,  2697,  2639,  2480,  2518,  2828, -5129,  2725, -5129,
   -5129,  2621, -5129, -5129,   236, -5129, -5129, -5129,   102,   340,
     382,   392,  3141,   419,   119,   431,   433, -5129, -5129, -5129,
    3039,  3146,  2554, -5129,  2919, 24585, -5129, -5129, -5129,  3228,
   -5129, -5129,    38,  2997,   284, 71556, 91483, 74139, 92415, 92415,
   92415, -5129, -5129,   153, 92415, 86347, 91949, 86347,  7717,  2589,
   -5129, -5129, -5129, 18685, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, 86347, -5129, -5129, -5129,  1416, -5129, -5129, -5129,
   -5129, -5129,  8726, -5129, -5129, 29013, -5129,  2616,  2627,  2630,
   20895,  2634,  2665,  2670,  2673,  2684,  2518,  2518,  2518,  2696,
    2699,  2709,  2722, -5129,  2728,  2742,  2745,  2749, -5129,  2752,
   -5129,  2760,  2775,  2778, -5129, -5129,   120,   257,  2784,  2789,
   25323,  2795, -5129, 65778,  2816,  2827,  2841,  2858, -5129, -5129,
   24585,  2696,  2869, -5129, -5129,  2871, -5129,  2884,  2889,  2890,
    2893,  2911,  2926,  2944,  2949,  2953,  3175,  2954,  2960,  2961,
    2972,  2696, -5129,  2979, -5129, -5129,  2502,  2518,  2696,  2696,
    2982,  3001,  3004,  3026,  3031,  3048,  3065,  3082, 83779,  3092,
    3097,  3101,  3107,  3108,  3123,  3147,   154,  3152,  3163,  3164,
    3168,  3169,  3190,  3191,  3200,  3203,  3209,  3210,  3217,  3218,
    3222,  3229,  3235,  2663,  3238,  3245,  3246,  3250,  3254,  2685,
    3255,  3275,  3277,  3278,  3279,  3281,  3283,   464,  3284,  3286,
     486,  3288,  3289,  3297,  3299,  3301,  3317,  3318,  3320, 29751,
   30489, 29013, 19419, -5129, 86347, 87631, -5129, -5129, -5129,  3098,
    2808, -5129,  3762, 29013, -5129, -5129, -5129,  3399, -5129,  3370,
   -5129, -5129, -5129, -5129, -5129,  3393,  3402, -5129,  3496, -5129,
   -5129,  3499,  2951, -5129,  3448, -5129, -5129, -5129, -5129, -5129,
    3036,  3329,  3628,  3643, -5129, -5129,   413, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  3069,
    3161, -5129,  3448, -5129, -5129, 52363, 71556,  6035, -5129, -5129,
   -5129,  3747, -5129, -5129,  2697,  3340,  3788, -5129,  3905, -5129,
    3922, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  3716, -5129, -5129, 57214,  3865,  -173,   389,
    3324,   500,   539, 42531,   355, 79285,   571,  1207,  3325, 61924,
   46184,  3333,    50,  3338, -5129,  3339,  3344,  3350,  3352,  3354,
    3357,  3358, -5129, -5129, -5129,  3457,  3353,  2762,  1250, -5129,
   -5129,   371,    54,  3458, -5129,  3714, -5129,  1250, -5129, 39763,
    4001,   406, -5129,   980, -5129,  4054, -5129, -5129,  3467,  3453,
    3480, -5129,  3043, -5129,  2383, -5129,   967, -5129,  4001,  1250,
     406, -5129,  3652,  3737,   960,  4066, -5129,  1288, -5129, -5129,
    3228, -5129,  3388, -5129, -5129,  3019, 86347, 71556, -5129, -5129,
   -5129, -5129,  3390, 71556, 71556, 86347,  1486,  1027,  3098,  3391,
   24585, -5129, -5129,  6085, 37606,  3585,  1184,   -89, -5129, -5129,
    2602, 86347, -5129, -5129,  1194, -5129,  3819, -5129,  3408, -5129,
   88273,  1027,  4093, -5129, -5129, -5129,  1421,  3806, -5129,  3414,
   -5129, -5129, -5129, -5129, 71556, 86347,  2383, -5129, -5129, -5129,
   -5129,  3415, -5129, -5129,  3619,  3501, -5129,  3439, -5129, -5129,
     633, -5129, -5129,  4116, -5129, 86347, -5129, -5129,  2815, -5129,
    2815, -5129, -5129,  2815,  2815,  1877,  2815, -5129, -5129,  3469,
   -5129,  3750,  3755,  2915, -5129, 65136, 86347,  4119, -5129,  3360,
   -5129, -5129,  3440, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  4018,  3953,  3953, -5129, 62567, -5129, -5129,  4124,  2772,
    3941, 79927,  4101,  4200, -5129,  4001, -5129, -5129, -5129,  1381,
   86347, -5129,  1381,  1381, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,   441, -5129, -5129,   529, 48224, 86347,
    2599,   358, 15676,  3991,  4172,  3839, -5129, -5129, -5129, -5129,
    2518,  3460, -5129, -5129, -5129, -5129, -5129,  4233, -5129, -5129,
   71556,  3668,  3851,  3851,  3851,  4242, -5129, -5129, -5129, 51662,
   71556, -5129, -5129, -5129,   574, -5129,  1076, 86347, 71556,  3514,
   -5129, 71556, 24585, -5129, -5129, 24585, -5129,  3835,  3098, -5129,
   -5129, 71556,  1625, -5129, -5129, -5129,  4233,  3851, -5129,  3914,
    1620,  3477,  3478, -5129,  3487,  3487,   802, -5129,  3488,  4068,
    3488, -5129,  3893,   376,  1638,  3893, -5129,   376,  3488, -5129,
    3503, -5129,  3893, -5129,   376,  3487, -5129,  3487, -5129, -5129,
     376,  3487, -5129,  3505,  3488, -5129, -5129,  3893, -5129, -5129,
   -5129, -5129,   438,  2306,  3488, -5129, -5129, -5129,  3487,  3506,
    3487,  3487,  3487,  3487, -5129,  3487,  4076,  3494,  4253, -5129,
   -5129, -5129, -5129, -5129,  3488,    75,  3487,  3487,  3487,  3487,
    3518,   402, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  4199,
   86347,  4212, -5129, 71556,  4292, 71556,  4215,  2772, -5129,  3534,
   -5129,  3533, -5129, -5129,  4238, 86347, 86347, -5129, -5129, -5129,
   -5129,  3544,  2585, 53063, -5129,  1432,  3906, 52363, 71556, -5129,
   -5129,  4175,  3691, -5129, -5129, -5129, -5129, -5129, -5129,  3632,
   -5129, -5129,  3559, -5129, -5129, -5129,  3561, -5129,  3561,  3561,
   -5129, -5129,  3561, 52363, -5129, -5129, 51662,  2261,  5360,  4224,
    3201, -5129,  3747, -5129,  3866, 26061, -5129, -5129, -5129,  3841,
     353,  1281, -5129, -5129, -5129, -5129, -5129,  4044, -5129, -5129,
   -5129, -5129, -5129, 86347,  3795,  4256,  4230, -5129, -5129, -5129,
    4113, -5129, -5129,  4058,  3587,  4209,  3586, -5129, -5129, -5129,
     394, 24585,  3589, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, 71556,  3594, 29013, 29013, -5129,  4360,  4360,  4360,
   24585,  3671,  1411,  3950, 24585, 24585, 24585,  2592,  3596, -5129,
   -5129, -5129,   318, -5129,  3600, 24585, 24585, 67062,  3603,  1163,
    3551, 24585,  4309, 24585, 24585, 24585, 24585, 19419,  4808, 24585,
   -5129, -5129, 87631, 67062,  4057,  3607, -5129,  3604, -5129,  2598,
   24585,  2610, 24585, -5129, -5129, 24585, 24585,  3614, 24585, 24585,
   31227,  3622, 24585, 24585, 24585,  3627,  3760,  4360,  4360, 24585,
    2662, -5129, 20157, -5129, -5129, -5129, -5129, -5129,  4360,  4360,
   24585, 24585,  2679, 24585, 24585, 24585, -5129,  3612, 24585, 24585,
   24585, 24585, 24585, 24585, 24585, -5129, 24585, 24585, 24585, 24585,
   24585, 24585,  1540, 24585, 24585, 71556, 24585, 24585, 24585, 24585,
   24585, 24585, 24585,  4310, 71556, 24585, 24585, 24585, 24585,  4315,
   24585, 24585, 24585,  3636, 24585, 71556, 24585, -5129, 24585,  3456,
    3456, -5129, 24585, 20157, 24585,  3637, 67704, 24585, 24585, 24585,
   24585, 25323, -5129, 25323, -5129, -5129,  3638,  2848,   341,   441,
   24585,  3641, 63210, -5129, -5129, -5129, -5129, 24585, 24585, 24585,
   31227, -5129,  2941, -5129, -5129, -5129, -5129, -5129, 16440, 31227,
   31227,  3640, 31227, 31227, 31227, 31227, 31227, 31227,  4277, 31227,
   31227, 31965, 32703, 31227, 31227, 31227, 31227,  2009, -5129, 82495,
   29013, 72840,  3646,  4322, -5129, 87631, -5129,  2076,  1108, -5129,
    2383,  3859, 34169, -5129,  3649, -5129,  4154,  3654, -5129,  1501,
   -5129, -5129, -5129, -5129, 71556,  3656,  4343, 52363, 51662,  2390,
    3674, -5129,  3661,   613,  3667, -5129, -5129, 53063, 86347, -5129,
   -5129, -5129, -5129, -5129,  4253, 24585, -5129, 52363, -5129,  1442,
   15676, -5129,  1224,  1077,    50, -5129, -5129, -5129, -5129, -5129,
   15676, 86347, 57899,  3675,  3771,  3693,  2815, 49570, 86347, 71556,
   86347, 86347, 86347, 71556, 52363, 71556, -5129, -5129, -5129,  1042,
    1250, 86347,  1250,   406,  4332, -5129,  1723,  1723, -5129, -5129,
   -5129, -5129, -5129, -5129,  1250, 86347, 86347,  1250, 51662, -5129,
     406,  2041, -5129,  3984,  3773, -5129, -5129, -5129,  4033, -5129,
   -5129,  4384,  3703, -5129,  4053, -5129, -5129,  3800, -5129, -5129,
   71556, -5129, -5129,   406, -5129,   406,   406, 24585,  1250,  1250,
    1250, 66420,  3709,  3711, -5129,  3712, -5129,  3718, -5129, -5129,
   -5129,  4073,  3705,  4359,  3717, -5129, -5129,  4299,   963,  4257,
   -5129,  4148, -5129,  4282, -5129, 24585,  3098, 21633,  4002, -5129,
   -5129,  4003,  4004,  4005, -5129, -5129, -5129, -5129,  4162,  4010,
   -5129,  2383,  4011, -5129, -5129,  3739, -5129, -5129, -5129, 34169,
   82495, -5129,  3740, -5129,  3761, -5129,   202, -5129, -5129,  4431,
    3850, 24585, -5129, -5129, 71556,  4258, -5129,  2383,  1927, 86347,
   -5129, -5129,  4522, -5129,  -162, -5129, -5129, -5129,  3870,  1989,
   -5129, -5129,  1501, -5129, -5129,  2367,  3943, -5129, -5129, -5129,
   82495, -5129, -5129, -5129, -5129, -5129, -5129, 53063, 51662, 82495,
   -5129,  2815,  2815, -5129, 71556,  2815, 86347, -5129, -5129, -5129,
    2815,  2815,  2815,  3803,  2561,  3765,  3769,  3770,  3779,  2122,
    3782, 68346,  3027,   258,  4418,  4434, -5129,  4375,  2746,  4375,
   -5129, -5129, 68346, 66420,  3792,  4119, -5129, -5129, -5129, -5129,
   82495,  3790, -5129, -5129,  3791, -5129, 24585,  4541,  4466,  4124,
    1543, -5129, -5129,  4142, -5129, 83779,  4347,  1275, -5129,  3793,
    3923, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, 29013,  2728, -5129,
    3098, -5129, -5129, -5129,   197, -5129, -5129, -5129,  1313,  4174,
    3345, -5129, 82495,  3345,   -70,  1842, -5129,  3812,  2383,  2857,
   -5129,  2857, -5129,  4115, -5129,  4120,    83, -5129,  1501, -5129,
   -5129, -5129, -5129, -5129, 71556,  3813, -5129,  4007,  3820,  3822,
    3098,  3098, -5129,  8661,  4568,  4304,  5792,   171,  3883, -5129,
   -5129, -5129, -5129, -5129, 71556, -5129, -5129,  2017,  3663,  4329,
    3844, -5129,  1620, -5129, -5129, -5129,  2239, -5129, -5129, -5129,
    3893,    50,  3893, -5129, -5129,  2767,  1054, -5129, -5129, -5129,
    1054, -5129,   292, -5129, -5129, -5129, -5129,   965, 47569,  4599,
    4240,  3865,  3893, -5129,  4323,   376, -5129, -5129,  1054,  2367,
   -5129, -5129,  3893, -5129, -5129, -5129,  2367,  1054, -5129,  4325,
   -5129, -5129, -5129,  1054,  3893, 90841,   402,   376, -5129, -5129,
     376,  1054,   107, 86347, 56529, -5129,  4411, -5129,   965,  4599,
     376,  3893,  1054,  4450, -5129,  1054, 24585, 24585, -5129, -5129,
   -5129,   322,  4018,  3932, -5129,  3854, -5129, -5129,   411,  4430,
   -5129, -5129,  4447, 86347,  4547, 75433, -5129, -5129,  4464, -5129,
   86347,  1432,  3872, -5129, -5129, -5129, -5129, -5129,    50, -5129,
    3873,   164, 71556, 71556,  8661, -5129,  3879, -5129, -5129, 86347,
   -5129, -5129, -5129, -5129,  4373,   405, 34818, 68988, -5129, 68988,
   68988, -5129, -5129, -5129, -5129, -5129,   119, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, 48925,  3098, -5129, 71556, -5129,  4537,
   -5129, -5129, 89557,   463, -5129, -5129,   166, 71556, -5129, -5129,
   24585, -5129,  4531,  4014, 86347, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, 86347,  2412,  3098, 86347, 50284, -5129, 90841,
    8661,  8661, 24585,  1485, 24585, -5129,  3885, -5129,  3890,  3899,
    3724,  4259, 24585, 24585, -5129,  3044,   548,   286, -5129,  3908,
    3897, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  3910,
   -5129, -5129, -5129,   364,   373,  3915, -5129, -5129, -5129,  3916,
     441, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  4595, -5129,   312, -5129, -5129,   290,   420,   395,   430,
     527,  3929,   532,  3612,  2174,  3924, 67062, 87631,  4360,  3921,
     536,  4360,  3925,   590,   756,   621, -5129,  1190,  1227,  2912,
   -5129,   733,   736,   892, -5129, -5129,  3928,  3930,   323,  4360,
    3934, 22371, 23109, 23847,  3878,  3935,  3938,  3939,  1131,  1658,
    4360,  3940,  1879,  2195,  2023, 87631,  1152,  2031,  1238, -5129,
    2205,  1254,  1260,  1278,  1321,  2078,  2081,  1348,  1397,  1415,
    2211, -5129, -5129, -5129, -5129,  3920,  2084,  2102,  3927,  3942,
    2218,  2114,  2121,  2131,  2248,  2274,  2317, 71556,  3946,  2135,
    2172,  1461,  2341, 71556,  2184,  2191,  1630, -5129,  2268,  3948,
    1701,   424,  3951,  3954,  2273,  3960,  1725, -5129, 87631, 86347,
    3966,  3936,   436,   403,  1754,  2279,  4808,  4808, -5129, 24585,
    3969,   238, 87631,  1077, -5129,  4475,  3153,  1937, -5129, -5129,
   -5129, -5129, -5129, -5129,   410, -5129,  3933, -5129,  3971,  2323,
    3980, 19419, -5129,  3555,  3980,  1608,  3874,  2431,  2431, 31227,
    3502,  3319, 25323,  1608, 25323,  1608,  3980,  3980,  3980, -5129,
   31227,  3976, 31227, 31227, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  4555,  3981,  -264,  3979, -5129, -5129, -5129, -5129, -5129,
   -5129,    36,  4388, -5129,  4171,   336, 24585, -5129,  4013,  4499,
    4503,  4504, -5129, -5129, -5129, -5129, 52363, 52363, 71556,  4500,
   24585, -5129,  1806, -5129,  4018,  4675, 53063,  4680, -5129,  4006,
   35467, 68988, 68988, 68988, -5129,  4008, -5129, 24585, 86347, 86347,
   15676, 57214,  4683,  4686,    50, -5129,  3098,    50, -5129,  4015,
    4019, -5129, -5129,  1670,  4286, -5129,  4017,  4020, -5129,  4016,
    4023,  4025, 60639, 24585, -5129,    50,  1224, -5129, -5129, -5129,
   -5129, -5129,  4012, 86347, 86347, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  2383, 24585, 86347,  1250, -5129, -5129,
   -5129,  1250,  2383,  4695, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  1250, -5129, -5129, -5129, -5129, -5129,
    4186,  4001,  3043,  4332, -5129,   406, 71556,  1250,  1250,  3098,
   -5129, -5129, -5129, -5129,  4560,  4018, 21633,  4036,  4035, -5129,
   -5129,  8661, 86347, 86347, -5129,  7050, -5129, 82495, 58584, 71556,
   -5129, -5129, -5129,  2319, -5129, -5129, -5129, -5129, -5129, -5129,
    3098,  2612,  2728, -5129,  4041,  3098, -5129,  4754, -5129, -5129,
   -5129, -5129,  2383, -5129, -5129,  4887, -5129, 71556, -5129, 64494,
   -5129, 64494,  2080, -5129, 88915, -5129,  2383,  3098, 71556,  1301,
     166, -5129,  4813, -5129, -5129,  4161, -5129, -5129, -5129,  4047,
   -5129,  4099, -5129, -5129, -5129,  4051, -5129,  4735, -5129,   264,
     493,    83, -5129, 86347, 86347, 86347, 71556, -5129, 86347, -5129,
   86347,  2815, -5129, -5129,  2815, 71556, 86347, 86347,  2815, 68346,
   -5129, -5129, -5129, -5129, -5129, 68346, -5129,   401, -5129,  4261,
     806,   806, -5129, -5129, -5129, -5129, -5129,  4701,  4375,  4375,
   68346,  4704,  4943, -5129, 86347,  3931,  1239, -5129, 62567, 86347,
    3098, 24585, -5129,  4092,  4466, -5129,   166, -5129, 81211, -5129,
    4405, 81211, 81211, 87631,  4296, 24585,  4065, 15676, -5129,    50,
      50,  4290,  4586,  4590,  4193,  2383,  4593,  4594,  4596, -5129,
   -5129, -5129,  2383,  2383, -5129, -5129,    50, -5129,  1785, -5129,
   -5129, -5129, -5129,  5210,  1520, -5129,    50,    50, -5129,  2748,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  2158, -5129,   259,
    2189, 51662,  4545, -5129,  4669,  4078, -5129, 71556,  4758, -5129,
   -5129, 24585,  4587,  6485, -5129, -5129,  4304, -5129,  4100,  4102,
    4104,  4110,  4111,  4122,  4129,  4130,  4132,  4133,  4134,  4136,
    4140,  4143,  4146,  4150,  4152,  4155,  4157,  4158,  4163,  4165,
    4169,  4176,  4082, -5129, -5129,  4144, -5129, -5129, -5129, -5129,
      50,    50,    50,    50, -5129,  3722, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  4372,  4576, 86347,  4784,  4462,  4145,
    4160,  4173,  4181, -5129, -5129, 86347, -5129,  2373,  4620,  4651,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,    50,
   -5129, -5129, -5129, -5129,  2374, -5129, -5129,  2401, -5129, -5129,
   -5129, -5129,  5790, -5129,  2407, -5129, -5129, -5129, -5129, -5129,
     402,   402,  4167, -5129, -5129, -5129,  4192, -5129, -5129, -5129,
   -5129,  4599, -5129,  4177, -5129,  3098,  3098, 73482, -5129, -5129,
   -5129, -5129,  2802, -5129, -5129,   806, 86347,  4662, 75433, -5129,
    4385,  4815, -5129, -5129, 66420, -5129,  4180, 71556, -5129, -5129,
   53063, -5129, 82495, 52363, -5129, -5129, -5129,  4182,  1485,  8293,
   -5129, -5129,  4891, -5129,  2450, -5129, 51662,  4644, -5129, 68988,
    4187, -5129,  4194,  4694,  4696,  4703,  4706, -5129,  1806, -5129,
   -5129,  4198, -5129, -5129,  4299,  3953, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  4229,  4480,
    4602, -5129, -5129, -5129,  3098, -5129, -5129, -5129,  4862, -5129,
   -5129, -5129,  2466,  3991, -5129, -5129, -5129,  4569, -5129, 92415,
   92415, 92415, -5129,  1893, -5129, 24585, -5129, -5129, 24585, -5129,
    3098,  3802,  4485, 47569, -5129, 47569,  4485, 24585, -5129,  4217,
   -5129,  4866,  4873, -5129, -5129, -5129, 24585, -5129, 24585, -5129,
   24585, -5129, 24585, 24585, 24585, 24585, 24585, 24585, -5129, 31227,
   -5129,  4219,  4231, -5129, -5129,  4235, -5129, 24585, -5129, 24585,
   -5129, -5129, 24585, 24585, 24585, 24585, -5129, -5129, 24585, 24585,
    4236, -5129, 24585,  4117, 24585,  4188, 24585,  4288, 24585, -5129,
   -5129, -5129, 26799, -5129,  4237, -5129, -5129, -5129, -5129, -5129,
   24585, -5129, 24585, -5129, 24585, 24585, 24585, 24585, 24585, -5129,
   -5129, 24585, 24585, 24585, -5129, 24585, -5129,  4823, 24585, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, 24585, -5129, -5129, -5129, -5129, 24585, -5129,   146, 27537,
   -5129, 24585, 24585, 24585, -5129, -5129, 24585,  4241,  4243, -5129,
   86347, -5129, 24585,  2428,  3093,   166,  4244, 24585, -5129,  4260,
    4262,  3391, -5129, -5129, -5129, 90199, 24585, -5129, -5129, -5129,
   -5129,  1163, 31227,   439, 29013, -5129,  3874,  4808,  4808,  3413,
   19419, -5129,  3555,  3874, 86347,  4988,  4247, -5129, 24585, 87631,
   24585,  4255,  4254, -5129,  4263, 31227, -5129, -5129,  4266, -5129,
    2624,  3093,  4340,  4705, -5129,  3098, 34169,  4760, -5129, -5129,
   71556,  2991, 67704,  4731, -5129, -5129, -5129, -5129,   557, -5129,
   -5129,  4461, -5129, 52363, 51662, 68988,  4949,  4950,  4951,  4952,
   -5129,  3098, -5129,  4268,    50,    50, -5129, -5129, 17940, 52363,
   15676, -5129,  4782,  4783, -5129, -5129,  1169,  4567,  4841, -5129,
   -5129, -5129,  4273, -5129, -5129, -5129, -5129,   665, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  3098, 15676, -5129,  3675,
    4281, 36895,   869, -5129, -5129, -5129,  3098, -5129, -5129, -5129,
   -5129,  4297, -5129, -5129, -5129,  4881, -5129, -5129,  4695,  2772,
     406, -5129, -5129, 67704,  3178, -5129, -5129, -5129, 21633,  8510,
   -5129,  2531, -5129,  5049,  4284,  4751, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  4293, -5129, 15676, -5129,
   21633,  4314, -5129, -5129, -5129,  4182,  1263,  4316,  4291, -5129,
   -5129, -5129, -5129, -5129, -5129,   251,   573,  2983,  2772, -5129,
   -5129,   186, -5129, -5129, -5129, -5129, -5129,   844, -5129, -5129,
   -5129, -5129,  -162,  2872, -5129,   516,   166,  4539, -5129, -5129,
     288,  4755, -5129,  4545,  4985,    81,  4899,  4904, -5129,  5210,
   -5129,  1932,  2035, -5129, -5129, -5129, 86347, -5129,    97,   857,
     121, 71556,  3360,  3360, -5129,   806,   515, -5129, 31227,  5074,
   -5129,  4814, 68346,  4959,  4960, -5129, 68346, -5129, -5129,  2557,
   -5129, -5129, 46913, -5129, -5129, -5129,  3098,   448,  2628, 24585,
   86347, -5129,  4092, -5129, -5129, -5129, 81211, -5129, -5129, -5129,
    1543,  4317,  2628,  4320, -5129, 56529, 46913, -5129,  4693,  4698,
    1515, -5129, -5129, -5129, -5129, -5129, -5129,  3493,  1842, -5129,
      50,    50, -5129,   249,    50, -5129, -5129,   239, -5129, -5129,
    1737,   131,  5210, -5129,  2383,  2383,  2383,  2383,   166,  2383,
    2383,  2625, -5129,  3493,  3493,  2857, -5129,  1505, -5129, -5129,
   -5129, -5129,    94, -5129, -5129, 82495, -5129,  4824,  4828, -5129,
    4829, -5129, -5129,   558, -5129,  3504,  4771,  6534,    25, -5129,
    4878, 86347,  5087,  4078, -5129,  1244,  3098, -5129, 24585, -5129,
    4328,  4330,   166,  4333,   166,   166,  2383,  2383,  4297,  2383,
     166,  2383,  2383,  2383,  2383,  2383,  2383,  2383,   166,  2383,
    1830,  2868,  2383,   166,  5792, -5129,  2383,  3093,  3493,  3493,
    3663, -5129,  5001,    50, -5129,  4453, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129,  2637, 44001, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  4929, -5129, -5129, -5129,
     965,  2367,   965, -5129, -5129, 90841, -5129, -5129, 86347,  4932,
   -5129, -5129, -5129, -5129,  5340, -5129, -5129, -5129,  4660, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  4336, 66420,   570,
   -5129, 80569,  4888,  2772,  4349, -5129,  1501, -5129, -5129, -5129,
   -5129,  1920,  4966, -5129,  4345, 24585, -5129, -5129, 86347,   781,
    4542,  4852,  4362, 76075, 51662, 51662, 51662, 51662, -5129,  4947,
   71556, -5129,  5014, -5129, -5129, -5129, -5129, -5129, 24585, -5129,
   -5129,  2412,  4791, 92415,  4981, -5129, -5129, -5129, -5129, -5129,
   24585,  3098,  3098, 24585,  3487,  3487,  3488,  3518, -5129,  5080,
   -5129,  5015,  3487,  3487, -5129,  3487,  5020,  3487,  3487,  4365,
   -5129, -5129,  4376,  4378,  4381,  3391, -5129, 24585, 24585,  2300,
     173,  2303,  2333,  1918,  1951,   452, -5129,  2338,  3997, -5129,
   -5129,  2352,  2384,  2414,  2541,  1969,  2555,   524,   458, -5129,
    3098, 24585,  3098, 24585,  3098, 24585,  3098, 25323,  2576, -5129,
    2643,  3949, -5129,  2653,  4285,  2601,   469,  2605,  1976,  2740,
     482,  2608,  2619,  2694,  2755, -5129,  2489,  4969,  2758, 25323,
    2702,  2747,  1993,  2070,  2797, 87631, 86347,  4379,  2804,  4383,
    4383,   252, -5129,  4386, -5129, -5129, -5129,  4390, -5129,  2813,
   24585, 24585,  4380,  3098,  4393, -5129, -5129, 24585, -5129, -5129,
   -5129, 31227,   511, -5129,  4555, -5129, 24585, -5129,  4971,  4396,
    3391, -5129,  3098, -5129, -5129, 86347,  4397,  3874, -5129, 24585,
    4297, -5129, -5129,  5131,  4401,  4420,  4406,  4266, -5129, 52363,
   -5129,  4957,  4408,  4404, -5129, -5129, -5129,  4403,   441, 67704,
   -5129,  5089,  3873, -5129,  5090, 51662, 51662, 51662, 51662, -5129,
   41802, -5129, 76717, 15676, 15676, -5129, -5129, -5129,  4413,  4414,
      37,  4977, -5129, -5129, -5129, -5129, 86347, 86347, 15676, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  3452, -5129,  4001,
   -5129, -5129, -5129,  1250,  4415, -5129,    50,   240, -5129, 21633,
    4416,  4417, -5129,  5042, -5129, 86347,  4424, -5129,  4900, -5129,
    4429, 84421, -5129, -5129,  4432, -5129,  4991, -5129, -5129,  5568,
   64494, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,  4001,  4658, -5129, -5129, -5129,  4451, -5129,  4435,
    4526,  4529, -5129, -5129, -5129, 51662,  4771,  4817,  1003,  1003,
    5034, 71556, 71556,  7859,  7061,  5210,  1932, -5129, -5129, -5129,
    2383, -5129,  2035, -5129, -5129,  4446, 86347, -5129,  4078, -5129,
   -5129,   794, -5129, -5129, -5129, -5129, -5129,  3874,   806,   806,
    4318,  4933, 68346, 68346,  4724,  4934, 24585,  4452, -5129, 86347,
   -5129,  1177, -5129,  4853, -5129, -5129, 24585, -5129, -5129, -5129,
   -5129,  3098,  5211,  4454, -5129, -5129, -5129, -5129, 24585, -5129,
   24585,  4458,  4457, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,   146,
     146, -5129, -5129,   146,   146, -5129, -5129, -5129, -5129,   146,
     146, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
    1520, -5129, -5129, -5129,  2158, -5129, -5129,  4967,  1363, -5129,
    5040, -5129, -5129, -5129, -5129,   974,   166,   166,   166,  2868,
    2597, -5129,  3504,  1253,  4649,  4089,  4864,  5046,  4864,  5047,
    4972,  3615,  4836,    50,  5052,  5222,    50, -5129,   234,    50,
      50,    50,    50,  4516,    50,    50,    50,    50,  5055,    50,
      50,  4843,    50,  5124,  4558,  5132,    50,  5064, -5129,  4564,
      50,    50,    50,    50,  4864,    50,    50,  5067,  4681,  5069,
    5073,    50,    50,    33, 86347,    50,    50,  5077, -5129, -5129,
    7870, -5129, -5129, -5129, -5129, -5129, -5129, -5129,   619, 69630,
   -5129, -5129, -5129, -5129,    50,  2602,  1903,  4998,  2130, -5129,
    2764, -5129,  5262, -5129,   194, -5129, -5129,  3098,   453,   530,
   -5129,   560, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   86347,  3493,  4576, -5129, -5129, 86347,  3487,  3487,  3487,  3506,
    3487,   110,  4253, -5129, -5129, -5129, -5129, -5129,    75,  3487,
    3487,  3487, -5129, -5129,  4502, -5129, -5129, -5129, -5129, -5129,
   -5129, 73482, -5129, -5129, 75433,  2772, -5129, 86347,  4846,  5051,
    3674, -5129, -5129, -5129, -5129, -5129,  1163, -5129,  3098, -5129,
   -5129,  5180, -5129, -5129, 51662, -5129, -5129,    83,    83,    83,
      83,  3185,  4867, -5129, -5129, -5129,  5014,  4789, -5129,  2253,
    3098, -5129, -5129, -5129, -5129,  8661,   452,  3098, -5129, -5129,
   -5129, -5129,  3487, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,  4511,  4808,  4808, -5129,  5258,  5050,
   -5129, -5129, 24585, 24585, -5129, 24585, -5129,  1243,  4515,  4987,
   -5129, -5129, -5129, -5129, 24585, -5129, 24585, -5129, -5129, 24585,
    3098,  3098,  3098,  4808, -5129, -5129,  3887, -5129, -5129,  4485,
   -5129, -5129, 24585, -5129, 24585, -5129, 24585, -5129, 24585, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,   351,  4808, -5129,
   -5129, 24585, 24585, -5129, -5129, -5129, 86347, -5129,  3093,  4517,
    4795, -5129, -5129, -5129,  3093,  4655, -5129, -5129,  3093,   166,
   -5129, -5129, -5129, 86347, -5129,  2773, -5129, -5129, 24585,  5110,
    4523,  5270,  4527, -5129, 41802, -5129,  4528,  4532, -5129, -5129,
   -5129,  4808, -5129,  5162,  5113, -5129,  3093, 86347, -5129, -5129,
   -5129, -5129, 67704, 77359,  4540,  4543, -5129,    50, 51662, 51662,
    4006,  4006,  4006,  4006, 85063, -5129, -5129, -5129, -5129,  1998,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,    50,    50, -5129,
   36895, 57214, -5129, -5129, -5129, -5129, -5129, -5129,  4001, -5129,
   67704,  2772, 21633, -5129, -5129, -5129, 21633, -5129, -5129,  1163,
   -5129,  4900, -5129, 40430, -5129,  4544, -5129,  4546, -5129,  2020,
    4877,  5170, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  4548, -5129, -5129,
    2383,  2883, -5129, -5129, -5129,  4649,  4578, -5129, -5129, -5129,
   -5129, -5129, 71556, -5129, -5129, 41140,  5185, 71556, -5129, -5129,
    5130, -5129,  4344, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  1342,  5147,  5316, -5129,  4556, -5129, -5129,
   -5129, -5129,  4661, -5129,  4556,  4078, -5129, -5129, -5129,  5044,
   -5129, -5129, -5129,  5045,  3098, 86347, -5129, -5129, -5129,  1387,
    2655,  5191,  2628,  4563, 86347,  2628,  3098, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
    1134, -5129, 82495, -5129, -5129, -5129, -5129, -5129,  5159,  5160,
   -5129, -5129, -5129, -5129,  4901, -5129, 70272,  2815, -5129,  1401,
    4605, -5129, -5129, -5129,  2260, -5129,  2815,  2319,  2319,  5228,
    3145,   285,  3145, 40430,  1239,  2181,  5212,  2343,  1866,  4610,
    5142,  3145,  3145,    50, 59269,   285, 67704,   179, -5129, -5129,
   -5129, -5129, 71556,   211,   250,   348, -5129, -5129, 59954,  4297,
     166,   166,   285,  2383,  2383,    50,   166, -5129, -5129, -5129,
   82495, 86347, -5129,  1024,   166,  4297,  4297,  3145,   428,  2383,
     285, -5129,   285,   285,  2569,   179, -5129, -5129, -5129,   166,
     179, 40430, -5129,  7605, -5129, -5129, -5129, 41140, 86347,  2016,
    5133, -5129,  4572, 54456, -5129,  4749, 24585, 24585,  5168, 86347,
    5173, -5129,  4980, -5129, 86347, -5129,  1163, -5129, -5129, -5129,
    4882,  5095,  2801, -5129, -5129,  2812, -5129, -5129,  2853, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,   965,  5127, 86347, -5129,   965,  4599,   965,  4599, -5129,
   -5129,  4180, -5129,  5269, -5129,  4935,  4008, -5129,   441,  4793,
      83,  5075,  5075,  5075,  5075, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  5246,  4963,  8550,   965, -5129,   965,   965,
   -5129,  4613,  4614, 24585,  2367,  5234,  2821,  2075,  2861,  4898,
    4838, -5129,  4786, -5129,  2829,  2838,  2854,  2049,  3488, -5129,
   -5129, -5129, -5129,  5266,  3487, -5129,  5358, -5129,  3487, -5129,
   -5129, -5129, -5129, -5129, -5129,  4619,  2873,  3098,  3098,  2907,
   -5129, -5129, -5129,  2862,  2073,  2913,  2918, -5129, -5129, -5129,
    4622, -5129, -5129,   489, -5129,  4621, -5129, -5129,  2865,  5370,
    2127, 24585, -5129, -5129, -5129, 86347,  4720,  1088, -5129,  2876,
   -5129, -5129,  4626, -5129, -5129,  4623, -5129, 67704, 21633,  4006,
    4006, -5129, -5129, 78001, 15676, 15676, -5129, -5129, -5129, -5129,
    4447, -5129, -5129, -5129, -5129,  4627, 73482, -5129, -5129,  4631,
    4630, -5129, -5129, -5129, 84421, -5129,  2882, -5129, -5129,  5397,
   21633, -5129, -5129, -5129, 82495, -5129,  4637,  4639, 72198,  3371,
    2922, -5129, -5129, -5129, -5129, -5129, 71556, -5129,   361, -5129,
    7997, -5129,  7870, -5129,  1448, 86347,  4521, -5129, -5129,  1870,
    4764, -5129, -5129,  6858,  4641, 86347,  2383, -5129,  4643,  5405,
   24585,  4646, 24585,  4648,  2994, -5129,  2319, -5129,  2319, -5129,
    1387,  5394,  5395,  5343,  5398,  2655, -5129,  2498, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129,  4654, -5129, -5129, -5129, -5129,
     700,  2602, -5129, -5129,   285,  4657,  2602,  5334, -5129,  4659,
    5300,  5302,  2319, -5129,  2815, 72198, -5129,  2815,  2815, -5129,
   72198, 40430, 72198, -5129, 46913, 72198,  3145, 86347, -5129,  5342,
   -5129,  5306, 72198, 72198,  2383, -5129, -5129, 40430,  4664, -5129,
    2628, -5129, -5129, -5129,  2759, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,  4665, -5129, -5129, -5129, -5129, -5129,  3093, -5129,
   -5129,  2383, -5129, -5129,  5139, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, 72198, -5129, -5129, -5129, 40430, -5129, 40430, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  4439,  3738, -5129,  4670,  4667, -5129, 86347, -5129, -5129,
   71556, -5129, 44736, 86347, -5129, -5129, -5129, -5129, -5129,  3098,
    4808,  5066, -5129, -5129,  4785,  2383,  5032, -5129,  5146, -5129,
   86347,   217, -5129, -5129,   166, -5129,   166, -5129,   166, -5129,
   -5129,   313, -5129, -5129, -5129, -5129, 31227, -5129, -5129,  5075,
    2173, -5129, -5129, -5129, -5129, -5129, -5129,  5319,  5186, 92415,
    5299, -5129, -5129, -5129, -5129, -5129,  4678,  2628, -5129, -5129,
    4684, 81211, -5129, -5129, 24585, -5129,  4914, -5129,  5024, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,   965, -5129,
   -5129, -5129, -5129,  4297, -5129, -5129, -5129,  4689, -5129,   166,
   -5129, 24585, -5129, -5129,  4690,  5689,  2628, -5129,   166, -5129,
    4705,  4692, 86347, -5129,  5113, -5129, 78643, -5129, -5129, -5129,
   -5129, -5129,  4815, -5129,   103, -5129, 86347, -5129, -5129,  4297,
    5058, -5129,  3008,  4893,  4700, 86347, 86347, 86347, -5129, -5129,
   41140,  4712, -5129,  5464, -5129,  5130, 92964, -5129, -5129,  5059,
    1448, -5129,  2437,  4713,  4714, -5129, -5129, -5129,  5410,  1932,
   -5129, -5129, -5129,  5307,  1903, -5129,  4521, 86347, -5129,  5252,
    4715, -5129, 86347,  5265, -5129,  3098, 86347,  3098, 86347, -5129,
    5400,  5400, -5129,  2367,  2367,  5469,  2367, -5129,  5470,  5471,
    2498, -5129,  5232, -5129,  5323, -5129,  5416, -5129, 86347,  5417,
   -5129, 24585,  2815, -5129, -5129, 72198,  5217,  1282, 72198, 72198,
    2153, -5129, 72198,  2017,  4253, -5129, 72198,  4630, 86347, -5129,
   -5129,  1920, -5129, -5129, 67704, -5129, -5129, 71556, -5129, -5129,
    5242,  2016, -5129, 86347, -5129, -5129, -5129,  4736, -5129,  4730,
    5477, -5129, -5129,  4732, -5129, -5129, -5129, -5129, -5129,  1205,
   -5129,  3017, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
     128, 86347,  4179, -5129,  4936, -5129,  2173, -5129,  5229, 71556,
   -5129, -5129, 24585, -5129, -5129, -5129,  1354,  2945, -5129, -5129,
   -5129,  4742, -5129,  4744,  4317, -5129,  5206,  4876,  4499,  4503,
    4504,  4925,  5091, -5129,  4927, -5129, -5129,  4753, 31227, -5129,
    1778, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  5172, -5129,
    4756, 86347,  3033,  2628,  4757,  3053,  4759, -5129, -5129, -5129,
     557,   361, -5129, -5129, -5129, 92964,  1710, -5129, -5129, -5129,
    4748,  4761, -5129,  4762, -5129, -5129, -5129, -5129,  5344, -5129,
   45471, -5129, 86347, -5129, -5129, -5129,  5168,  1932, -5129, -5129,
   -5129, -5129, -5129, -5129,  3058,  3068,  2138, -5129, -5129, -5129,
   -5129,  2367, -5129,  2367,  2367, -5129,  4763,  5135, 72198,  -129,
    4767, -5129,  2955, 72198,  5217,  1804,  1003, -5129,  1003, -5129,
   -5129,  5468,  5475,  2016, -5129, -5129, -5129, -5129, -5129,   285,
   -5129,  4772, 71556, -5129, -5129,  4630,   844, 86347,  5378,  3578,
    5790, -5129, -5129,  4159, 86347,  4869, -5129,  8661,  4973,  5510,
    5516, -5129, 86347, 85705, -5129, -5129,  5356, 31227, -5129, -5129,
   -5129,  4018, 92415,  2628, 81211, 81211, -5129, -5129, -5129,  1699,
   -5129,  5543,  1728, -5129, -5129,  1200, -5129, -5129, 86347,  4792,
    4868, -5129, -5129,  4851, -5129, -5129,  2986, -5129, -5129,  1520,
    3072,  1501, 86347, -5129,  5379,  1501, 86347,  5257, -5129,   254,
     256,  2210,  1710, -5129, -5129, -5129, -5129, 86347, -5129, 86347,
   86347, -5129,  3506,   356, -5129, -5129, 86347, 50284, -5129,  2130,
   -5129, -5129, -5129, -5129, -5129, -5129,  5537, -5129,  5542,  4798,
    4799, -5129, -5129, -5129, -5129, -5129,  5477,  3093,  5113, -5129,
   86347, -5129, -5129, -5129,  1003, -5129,  4801, -5129,  4802,  4803,
   -5129, 33441, -5129, -5129, -5129, -5129,  5454, -5129,  3087, -5129,
    1500,  5399, -5129,  5448, -5129,  2383, -5129,  4889, -5129,  3578,
   -5129, -5129, -5129,  4848,  5453,  5411,    50, -5129, 82495, 33441,
   -5129,  5304, -5129,  5259,  5527, -5129,  5578,  3443, -5129, -5129,
   -5129, 24585,  5174, -5129, -5129,  5013,  5017, -5129, -5129,  3090,
   -5129, -5129,  4880,  3874, 67704, -5129, -5129, -5129, -5129, -5129,
   -5129,  5206, -5129, -5129,  4956,  2168, -5129,  3111, -5129, -5129,
   -5129,  3093, -5129,  4834, -5129,  5192,    50,    50,  5198,    50,
      50,    50,    50,  4837,  2986, -5129,  5189,  3117,  1501,  1990,
    2628,  4839,  1716,  4840, -5129, -5129,  4832, -5129,  4842, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  5382, 86347, -5129,
   -5129, 71556,  4980, -5129, 86347, 86347, -5129, -5129, 84421, 84421,
   -5129, -5129,  3121,  4844,  4850,  4858, -5129, 86347,  4859, 86347,
   86347,  2868,  2868, 19419, -5129, -5129, -5129, -5129, -5129, -5129,
    3329, -5129,  4861, -5129, 86347, -5129, -5129, -5129,   379, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, 55150, -5129, -5129,
    5443, -5129,  4894,  -124,    50, -5129,  4617,  3098, 24585, -5129,
   -5129, -5129, -5129, 85705, -5129,  4860, -5129,    50,  1239, -5129,
   -5129, -5129, -5129, -5129, 86347, -5129,  4865, -5129, -5129,   123,
      50,  2383,  2383,    50,  3386,  3386,  3093, 82495,  4946, -5129,
   -5129,    50, -5129,  2288,  5041,  2383,    50,  1624,  1990, -5129,
   -5129,    50, -5129, -5129,  1624,  1716, -5129, -5129, 86347, -5129,
   -5129, -5129, -5129,  5207, -5129,  4446,  4870, -5129,   412,  5298,
    5546,  5227, -5129, -5129,  4874,  3130, -5129, -5129, 86347, 86347,
    4879,  3131, 86347,  3136,  3140, -5129, -5129,  4875,  5113, -5129,
    1404,  1404, -5129, -5129, -5129, -5129,  4883, -5129,  1080, -5129,
   -5129,  4617,  3098, -5129, 67704, 21633, -5129,  4868, -5129, -5129,
    3156, -5129, 28275, -5129, -5129, -5129,  2383, -5129, -5129,  2383,
   -5129, -5129, -5129, -5129, -5129,  3174, -5129, 82495,  1003,  1003,
    1624,  2288, -5129, -5129, -5129,  3470, -5129,   166, -5129,  5500,
    5326, -5129, 55844, -5129, -5129,  4884, -5129, -5129, -5129, 86347,
   -5129,  4556, -5129,  5422,   472, 86347, -5129, -5129, -5129, -5129,
   -5129,  3182,  3196, 86347,  2288,  3241,  1990,  1716, -5129,  3263,
   -5129, -5129,  1939,  5333,  5474,  5479,   547, -5129,  3144,  3144,
    1834, -5129, -5129,  5431, -5129, -5129,  4865, -5129,  4890, -5129,
    3874, -5129, -5129, 82495, -5129,  4946, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   86347, 86347, -5129,  4521,  4896, -5129, -5129, -5129,  5465, -5129,
   -5129, -5129,  5133,  2288,  3267, -5129,  2288, -5129, -5129, -5129,
   -5129, -5129, -5129,  5380,  5599, -5129,  4897, -5129,  3144, -5129,
   -5129, -5129, -5129, -5129,  2015,  5194,  4853, -5129, 28275,  4903,
    2986, -5129, -5129, -5129, -5129, -5129, -5129, -5129,  4955,  5249,
    5597, -5129, -5129,  2288, -5129,  1404,  1404, -5129, -5129, -5129,
    2015, -5129,  5647,  5191, -5129, -5129, -5129,  4521, -5129, -5129,
    5035, -5129, -5129, -5129, -5129,  2367,  5563, -5129, -5129,  5502,
    4911,  1856,  2353, 61281,  5449, -5129, -5129, 82495, -5129, -5129,
   -5129, -5129, -5129, 82495,  3268, -5129, -5129, 67704, -5129, -5129,
    8661, -5129, -5129, 63852,  4913, -5129,    50, -5129, -5129, 67704,
   -5129, -5129, 21633, -5129, -5129
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  1232,  2461,     0,   529,     0,  1449,   812,   559,  2312,
    2454,  2455,  2239,     2,   601,   257,  2661,  2662,   476,  2241,
    2526,     0,     0,   597,  1465,   953,   708,     0,   396,     0,
       0,   604,  2244,   394,   257,  1514,  3182,  2361,     0,  3279,
    2301,     0,  1512,   599,  2623,  3535,  2885,  2933,  2934,  2962,
    2779,  3057,  3079,  3105,  2867,  2866,  2869,  2868,  2870,  2871,
    2872,  2873,  2874,  2875,  2752,  2876,  2877,  2878,  2880,  2879,
    2881,  2882,  2883,  2753,  3431,   555,  2754,  2832,  2884,  2834,
    2833,  2886,  2755,  2756,  2887,  2888,  2889,  2890,  2758,  2757,
    2891,  2893,  2892,  2835,  2836,  2894,  2895,  2896,     0,  2898,
    2759,  2760,  2761,  2762,  2763,  2897,  2764,  2899,  3436,  2900,
    2901,  2765,  2902,  2903,  2904,  2905,  2907,  2906,  2908,  2909,
    2911,  2912,  2913,  2910,  2914,  2915,  2917,  2916,  2838,  2918,
    2837,  2919,  2766,  2920,  2921,  2922,  2923,  2924,  2925,  2926,
    2927,  2928,  2929,  2205,  2930,  2931,  2932,  2954,  2935,  2937,
    2936,  2839,  2938,  2939,  2940,  2942,  2941,  2943,  2945,  2767,
    2768,  2769,  2944,  2946,  2947,  2948,  2949,  2950,  2952,  2951,
    2956,  2957,  2840,  1465,  2771,  2772,  2953,  2955,  2750,  2958,
    2959,  2841,  2842,  2960,  2773,  2829,  2961,  3281,  2964,  2963,
      85,  2965,  2775,  2966,  2967,  2968,  2969,  2970,  2972,  2974,
    2971,  2975,  2976,  2982,  2776,  2973,  2977,  2978,  2979,  2980,
    2981,  2983,  2843,  2984,  2986,  2985,  2987,  2988,  2989,  2990,
    2844,  2991,  2830,  2992,  2993,  2994,  3007,  3008,  2998,  2999,
    3001,  3002,  3005,  3000,  3006,  3011,  3010,  3012,  3013,  3014,
    3015,  3016,  3009,  2996,  3003,  3004,  2997,  3017,  3018,  2995,
    3019,  3021,  3020,  3022,  2845,  3023,  3024,  3025,  3026,  3027,
    3028,  3029,  3030,  3032,  3031,  3033,  2846,  2847,  2848,  3034,
    3035,  3036,  2823,  3037,  2849,  2850,  3040,  3041,  3038,  3039,
    3042,  3043,  3048,  3049,  3050,  3045,  3044,  3046,  3047,  2851,
    2852,  2853,  3051,  3052,  3053,  3054,  3056,  3055,  2778,  2777,
    2780,  3058,  3059,  2781,  3060,  3062,  3061,  2825,  2782,  3063,
    3064,  3066,  3065,  2854,  2855,  2783,  2784,  2785,  3067,  3068,
    3069,  3070,  3071,  3072,  3073,  3074,  3075,  3076,  3077,  3078,
    2856,  2857,  3080,  3081,  3082,  3084,  3083,  3085,  3086,  3087,
    3088,  3089,  3090,  3091,  2786,  3092,  1465,  3093,  3094,  2787,
    3096,  3095,  2788,  3097,  3098,  3099,  3100,  3101,  2824,  3436,
    3102,  3103,  3104,  2858,  3106,  3107,  3108,     0,  3109,  3110,
    3111,  2789,  3112,  3113,  2859,  2831,  2790,  3114,  3116,  2537,
    2791,  3115,  2793,  2794,  3117,  3118,  3119,  2792,  3120,  2795,
    3121,  3122,  3124,  3123,  3125,  3126,  3127,  3128,  2796,  3129,
    3130,  2797,  3131,  2798,  3132,  3133,  3134,  3135,  3137,  3136,
    3138,  3139,  3140,  3141,  3142,  3143,  3145,  3147,  3146,  3144,
    3148,  3149,  2860,  3150,  2799,  2861,  3155,  3156,  2862,  3151,
    3152,  3153,  3154,  2338,  3157,  3158,  3159,  2802,  3160,  3161,
    3163,  3162,  2800,  2801,  3164,  3165,  2806,  3166,  3167,  3172,
    2863,  2864,  3168,  3169,  3181,  3170,  3171,  3174,  3173,  3175,
    3176,  2751,  2803,  3177,  3178,  2804,  3179,  2805,  3180,  2865,
       0,     0,     3,     8,    22,     0,    44,    27,    32,    17,
      21,    16,    46,    60,    52,    29,  3433,   472,   473,   474,
     475,    42,  3467,    41,    11,    63,    64,    19,    49,    12,
      15,    18,    40,    48,    36,    43,    56,    57,  1535,  1511,
    1539,  1510,  1506,  1502,  1521,  1522,  1523,  1529,    25,    26,
      33,    50,    68,    23,    65,    61,    24,  2461,    13,    28,
      14,    51,    45,    37,    62,    69,    38,     0,  2666,  2679,
       0,  2680,  2748,  2746,  2749,  2745,  2747,    58,    59,    39,
      67,    31,    53,    30,     9,    10,    20,    54,    55,    47,
      70,    34,    66,    35,  1274,     0,     0,     0,     0,     0,
    2237,     0,     0,  2237,  1358,  1579,  3465,  3466,  3467,  1466,
       0,  1467,     0,     0,  2827,  2753,  2826,  2754,  2756,  2810,
    2757,  2813,  2814,  2807,  2766,  2815,  2828,  2769,  2770,  2811,
    2712,  2773,  2816,  2774,  2776,  2808,  2809,  2817,  2812,  2785,
    2818,  2787,  2819,  2820,  2821,  2796,  2797,  2822,  2801,  2713,
    2805,   287,  2677,   261,  2678,  2709,  2707,  2711,  2705,  2706,
    2710,  2704,  2708,   531,   130,     0,     0,     0,     0,   335,
    2333,  2237,  2209,  2237,  2237,  2237,  2237,  2237,     0,  2237,
    2237,     0,  2240,  2237,  2237,     0,     0,     0,   522,  2247,
    2528,     0,  2547,  2548,  2542,  3269,  3270,  3264,   483,     0,
       0,     0,  2428,  2427,     0,     0,   381,   393,   396,   389,
     392,     0,   257,  1468,   483,  2310,   395,   396,     0,  1544,
    3184,     0,  2433,   396,     0,  2310,  2541,     0,     0,  2624,
    2621,  2499,  2501,     0,  2497,  3436,  1650,  1649,   557,     0,
    2667,     0,  1444,  1476,  1402,     0,  3437,  3438,     0,    77,
      80,  2466,   418,     0,     0,     0,   810,     0,     0,  1410,
       0,  3438,  3448,  2539,     0,   130,  1383,     0,   130,  2344,
    2237,  2237,  3518,  3519,     0,     0,     0,  3513,     0,  3520,
       0,  1539,     0,  1525,     1,     5,     0,     0,   810,  1189,
    1190,  1188,   810,   810,     0,     0,     0,     0,     0,  3472,
    3465,  3466,  3467,     0,  2191,  2056,  1540,  1539,  2138,  2142,
    3452,  3451,  3453,     0,     0,  2138,  1530,  2949,  2772,  3062,
       0,  2446,  2460,  2444,  2655,  1508,  1504,  3187,     0,  1235,
    1275,  1238,     0,     0,  1240,     0,     0,  1255,  2688,  2687,
    2686,  1252,  1251,  1250,  1248,     0,   672,   257,     0,  1360,
       0,     0,     0,  3473,  3472,     0,  1421,  2448,  2449,  2450,
    2451,  2452,  2453,  2456,   289,     0,   542,   545,     0,   534,
     537,     0,   131,   132,  1447,  1450,     0,   813,     0,   171,
       0,   372,   374,     0,   371,   373,  2735,   560,   336,   337,
     339,     0,   359,     0,     0,     0,   448,   354,   446,     0,
     447,  2732,  2729,  2734,  2730,  2733,  2731,  2337,  2336,     0,
    2335,  2313,     0,  2333,     0,  2235,  2237,     0,     0,     0,
       0,     0,     0,   257,     0,  2429,   257,  2219,  2237,  2237,
     602,     0,  3334,  3349,  3350,  1593,  3346,  3351,     0,  3348,
    3340,     0,  3344,  3338,     0,  3370,  3342,  3347,  2941,  2769,
    2956,  3071,  3075,  3091,  3094,  2821,  3138,  3328,  3313,  3329,
       0,     0,  3332,  3336,     0,     0,  2248,  2249,  2250,  1356,
    2529,  2530,  2531,     0,  2551,     0,   496,     0,     0,     0,
       0,   471,   485,   486,     0,     0,   492,     0,   483,     0,
     457,   469,   459,     0,   487,   468,   461,   460,   462,   463,
     464,   465,     0,   466,   467,   470,     0,   453,   454,   598,
     455,   456,   483,  2683,  1463,     0,  2611,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1593,  1593,  1593,  1590,
       0,     0,     0,  2616,     0,     0,     0,     0,  2607,     0,
    2617,     0,     0,     0,  2609,  2610,  2663,  2664,     0,     0,
       0,     0,  2614,     0,     0,     0,     0,     0,  2590,  1652,
       0,  1590,     0,  2606,  2613,     0,  2598,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1590,  2589,     0,  2608,  2615,     0,  1593,  1590,  1590,
       0,     0,  2868,  2752,  2883,  2810,  2894,  2896,     0,  2759,
    2760,  2761,  2762,  2763,  2807,  2918,  2837,  2919,  2920,  2921,
    2772,  2841,  2960,  2967,  2985,  2987,  2844,  3026,  3028,  3033,
    2846,  2847,  2848,  3038,  3039,  3053,  2825,  2854,  2855,  3069,
    3076,  3101,  2858,  3106,  3111,  3114,  3134,  2861,  3155,  3156,
    2862,  3154,  2822,  3166,  3172,  3175,  3176,  2803,  2865,     0,
       0,     0,     0,  1651,     0,     0,  1890,  1537,  1726,   954,
    1605,  1611,  1625,     0,  1724,  1723,  1727,  1729,  1735,  1644,
    1756,  1695,  1696,  1698,  1818,  1697,  1702,  1703,     0,  1866,
    1704,     0,     0,  1701,  2603,  1700,  1699,  2604,  2605,  1694,
    2641,  2677,     0,  2665,   710,   709,     0,   408,   403,   411,
     405,   407,   406,   412,   413,   414,   409,   404,   410,   397,
       0,   382,     0,   390,  3449,     0,     0,   483,   605,  2311,
    2252,  2255,  2251,   415,  3334,  2869,  3075,  3302,     0,  3312,
       0,  3464,  3458,  3461,  3460,  3456,  3459,  3457,  3462,  1565,
    3463,  1564,  1515,  1545,  1562,  1563,     0,     0,     0,  1110,
    2743,  3213,  3214,  2823,  2825,  2824,  3215,  3151,  2744,     0,
       0,  2672,     0,     0,  2673,  2740,  2738,  2742,  2737,  2741,
    2736,  2739,  3183,  3199,  3195,     0,     0,     0,  2441,  1185,
    1184,     0,     0,     0,  2383,     0,  1110,  2441,  2384,     0,
    2115,  2431,  2434,     0,  3217,  2397,  1186,  3218,  2427,     0,
    2369,  2385,  2346,  2390,   130,  3219,     0,  2430,  2115,  2441,
       0,  2362,     0,     0,     0,     0,  1578,     0,   391,  3280,
    1356,  2282,  1513,  2268,   600,     0,     0,     0,  2498,  3432,
     562,   556,     0,     0,     0,     0,     0,  3441,  1937,  2206,
       0,    81,    76,     0,     0,     0,     0,  2660,  3282,    86,
       0,     0,  3532,    74,     0,  2516,     0,  2514,  2511,  2513,
       0,  3441,     0,  2538,  1390,  1390,     0,     0,  1382,  1384,
    1385,  1390,  1390,  2345,     0,     0,     0,  2597,  2595,  2596,
    2668,  3515,  2594,  2593,  3524,  3526,  3509,     0,  3512,  3511,
    3521,  1528,  1527,     6,    71,     0,   257,   257,   810,   173,
     810,   141,   144,   810,   810,   810,   810,   153,   157,     0,
     259,     0,     0,  3472,  1543,     0,     0,  1555,  1541,  1952,
    1542,  1954,  1951,  1950,  1949,  1980,  1981,  1983,  1982,  1984,
    1986,  1977,     0,     0,  2204,     0,  2199,  2057,  2064,  2056,
       0,     0,     0,     0,  2137,  2115,  2146,  2139,  1507,  2135,
       0,  1503,  1568,  1568,  3455,  3454,  3450,  2140,  1526,  1534,
    1532,  1533,  2141,  1524,     0,  2458,  2657,     0,  2463,     0,
    2138,  2142,     0,     0,  1126,     0,   264,  3470,  3471,  3469,
    1593,  2689,  2692,  3468,  2693,   264,  1249,     0,   673,  2238,
       0,     0,     0,     0,     0,     0,   675,   674,   611,     0,
       0,  1364,  1365,  1359,  1361,  1363,     0,     0,     0,     0,
    2462,     0,   291,   288,   260,     0,   333,     0,   532,   538,
      87,     0,  1451,  2228,  2230,   170,     0,     0,   362,     0,
     344,     0,     0,  1050,  1072,  1070,  1091,  1036,  1056,  1052,
    1056,  1046,  1091,   985,   985,  1091,  1049,   985,  1056,  1051,
       0,  1048,  1091,  1047,   985,     0,  1040,  1072,   979,   980,
     985,  1070,  1006,     0,  1056,  1029,  1028,  1091,  1032,  1033,
    1031,  1035,     0,  1037,  1056,  1042,  1030,  1034,     0,     0,
    1070,  1070,  1070,     0,  2735,  1070,     0,   346,  1122,   965,
     967,   966,   968,   969,  1056,  1072,  1072,     0,     0,  1070,
    1078,   450,   446,  2732,  2730,  2733,  2731,   340,   342,     0,
       0,     0,   361,     0,  2314,     0,  1553,  2056,  2316,  2321,
    2327,  2331,  2334,  2211,     0,     0,     0,  2212,  2216,  2222,
    2221,  2215,  2429,     0,  2225,   686,     0,     0,     0,  2226,
    2207,     0,   575,   577,  3335,  3333,  3367,  3366,  3371,     0,
    3368,  3364,     0,  3327,  3372,  3357,  3404,  3361,  3404,  3404,
    3358,  3365,  3404,     0,  3363,  3362,     0,  3330,     0,     0,
       0,  1357,  2255,  2532,  2533,     0,  1486,  2553,  2552,  2549,
    2048,  3266,  3271,   490,  2719,  2718,  2681,   497,  2682,  2715,
    2717,  2714,  2716,     0,     0,  3038,     0,   502,   501,   500,
       0,   519,   490,   493,   511,     0,     0,   331,   478,   484,
     479,     0,   517,   520,   552,   550,   591,   587,   595,   589,
     458,  2684,     0,     0,     0,     0,  1730,  2054,  2054,  2054,
       0,     0,  1945,     0,     0,     0,     0,  2054,     0,  1762,
    1741,  1742,     0,  1763,     0,     0,     0,     0,     0,     0,
       0,     0,  1896,     0,     0,     0,     0,     0,     0,     0,
    2663,  2664,     0,     0,     0,  1939,  1941,  2641,  2665,  2054,
       0,  2054,     0,  1598,  1772,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2054,  2054,     0,
    2054,  1780,     0,  2591,  2612,  1784,  1786,  1785,  2054,  2054,
       0,     0,  2054,     0,     0,     0,  2600,  2599,     0,     0,
       0,     0,     0,     0,     0,  2618,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2620,     0,     0,
       0,  2619,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1732,     0,  1731,  1733,     0,  1537,   955,     0,
       0,     0,     0,  1648,  1647,  1646,  1645,     0,     0,     0,
       0,  1654,     0,  1656,  1658,  1653,  1655,  1657,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1734,     0,
       0,     0,     0,     0,  2592,     0,  1828,     0,   722,  2524,
       0,     0,     0,   380,  1470,  2694,     0,  1469,  1473,  3266,
     584,  2255,  2245,  2254,     0,  3333,     0,     0,     0,  3330,
    1579,  1561,     0,     0,  3185,  3193,  1109,     0,     0,  1112,
    1114,  2273,  2272,  1113,  1122,     0,  1111,     0,  3254,     0,
       0,  3239,     0,  3220,     0,  1118,  1120,  1119,  3234,  1117,
       0,     0,     0,  3204,     0,     0,   810,     0,     0,     0,
       0,     0,     0,     0,  2412,     0,  1578,  1578,  2363,     0,
    2441,     0,  2441,  2431,  2437,  2396,     0,     0,   866,  2120,
    2116,  2389,  2435,  2436,  2441,     0,     0,  2441,     0,  2403,
    2431,  2441,  2358,     0,     0,  2350,  2355,  2351,     0,  2357,
    2356,  2359,  2347,  2348,     0,  2376,  2405,     0,  2388,  2395,
       0,  2375,  2382,     0,  2393,  2431,  2431,     0,  2441,  2441,
    2441,     0,  1579,     0,   582,  2622,  2625,  2629,  2633,  2500,
     329,     0,     0,     0,  1478,  1480,  1479,  1496,  1404,     0,
    3440,     0,  3442,     0,  3444,     0,    78,     0,     0,  2493,
    2491,     0,     0,     0,  2485,  2487,  2490,  2486,     0,     0,
    2492,   130,     0,  2488,  2467,  2470,  2477,  1578,  2468,     0,
       0,   416,   419,   421,     0,   424,  2048,  3285,  3284,     0,
       0,     0,  1408,  1411,     0,  2521,  2518,   130,     0,  2820,
    3447,  3445,     0,  1378,  1394,  1376,  1388,  1389,     0,     0,
    1381,  1380,  3266,  3533,  3534,     0,     0,  3510,  3527,  3508,
       0,  3522,  3523,  3507,     7,     4,   147,     0,     0,     0,
     138,   810,   810,   133,     0,   810,     0,   155,  1579,  1579,
     810,   810,   810,     0,     0,  1950,  1980,  1981,  1983,     0,
    1982,     0,     0,  2048,     0,     0,  1972,  1996,     0,  1996,
    1974,  1975,     0,     0,     0,  1555,  1978,  2669,  2200,  2203,
       0,  2192,  2194,  2195,  2686,  2197,     0,     0,  2059,  2064,
    1570,  2128,  2129,     0,  2127,     0,  2117,  2121,  2126,  2124,
       0,  2108,  2145,  2136,  2184,  1569,  2143,  2144,  1531,  2447,
    2445,  2464,  2465,  2656,  1509,  1505,  3262,  3263,  3260,  3261,
    3259,  3188,  3189,  1127,  1126,   804,   807,   806,     0,     0,
    1239,  2691,     0,  1241,     0,  2429,  1256,     0,     0,  2429,
     622,  2429,   676,  2692,  3397,     0,  3409,  3386,  3266,  1362,
    3474,  3475,  1246,  1244,     0,  1422,  1423,  1426,     0,   292,
     294,   543,   546,   483,     0,     0,     0,  1461,     0,  1459,
    1458,  1456,  1457,  1455,     0,  1446,  1452,  1453,  2429,   614,
     366,   562,   345,   338,   341,   343,     0,  1073,   991,  1071,
    1091,  1089,  1091,  1013,  1092,     0,  1060,  1058,  1057,  1053,
    1060,  1016,  1135,  1129,  1133,  1130,  1022,  1131,     0,  1137,
     986,  1036,  1091,  1024,     0,   985,  1015,  1021,  1060,     0,
    1010,  1019,  1091,   978,  1023,  1009,     0,  1060,  1025,  1038,
    1041,  1043,  1045,  1060,  1091,     0,   450,   985,  1008,  1007,
     985,  1060,     0,     0,     0,  1107,  1054,  1039,  1131,  1137,
     985,  1091,  1060,     0,  1079,  1060,     0,     0,   355,   364,
     449,  2147,  1977,     0,  2317,  2323,  2232,  2234,  2655,     0,
    1554,  2319,  2106,     0,     0,     0,  2329,  2236,     0,  2213,
       0,   686,  2218,  3325,   689,   688,  2223,   687,  2274,  3384,
    2217,  1366,     0,     0,   483,   576,   504,  3360,  1594,     0,
    3341,  3345,  3339,  3343,     0,  3323,     0,     0,  3331,     0,
       0,  3369,  3352,  3356,  3355,  3353,     0,  3354,  3359,  3337,
     477,   523,  2242,  2534,  3166,  2535,  2527,     0,  2550,     0,
    2049,  2050,     0,     0,  2052,  3268,  2147,     0,  3265,   498,
       0,   490,     0,     0,     0,   514,  2685,   494,   490,   504,
     513,   581,   332,     0,   289,   488,     0,   335,   562,     0,
     483,   483,     0,  3266,     0,  2055,     0,  1911,     0,     0,
       0,     0,     0,     0,  1710,     0,     0,     0,  1849,     0,
    1911,  1873,  2177,  2178,  2158,  2159,  2157,  2160,  1591,     0,
    2161,  2176,  1796,     0,     0,     0,  1871,  1536,  1519,     0,
       0,  2024,  2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,
    2033,  2034,  2035,  2037,  2042,  2038,  2039,  2040,  2041,  2036,
    2043,     0,  2023,     0,  1897,  1862,     0,     0,     0,     0,
     955,     0,     0,     0,     0,     0,     0,     0,  2054,     0,
       0,  2054,     0,     0,     0,     0,  1872,     0,     0,     0,
    1870,     0,     0,     0,  1869,  1754,     0,     0,     0,  2054,
       0,     0,     0,     0,  1686,     0,     0,     0,     0,     0,
    2054,     0,     0,     0,     0,     0,     0,     0,     0,  1679,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2046,  2044,  2047,  2045,     0,     0,  1937,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1810,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1758,     0,     0,
       0,  2646,     0,  1155,     0,     0,     0,     0,  1725,     0,
       0,     0,     0,  3220,  1891,  1893,  1596,  1595,  1597,  1608,
    1601,  1606,  1599,  1603,     0,  1659,  2875,  1609,     0,     0,
    1641,     0,  1612,  2063,  1642,  1630,  1623,  1628,  1629,     0,
    1626,  1627,     0,  1632,     0,  1631,  1638,  1639,  1640,  1643,
       0,     0,     0,     0,  1728,  1121,  1736,  2076,  1864,  1865,
    1889,  2080,     0,  2642,  1579,  1682,  1681,  1683,  1684,  1685,
     723,     0,   717,   720,   734,     0,     0,  2523,     0,  2837,
    2861,  2862,   398,   401,   400,   402,     0,     0,     0,     0,
       0,  2253,     0,  2256,  1977,     0,     0,     0,  3388,  3310,
       0,     0,     0,     0,  1575,  1516,  1574,     0,     0,     0,
       0,     0,     0,  3237,     0,  3236,  3235,     0,  3256,     0,
       0,  3241,  3240,     0,     0,  3198,  3242,  3243,  3246,     0,
       0,     0,     0,     0,  3227,     0,  3151,  3200,  3201,  3206,
    3196,  2404,     0,     0,     0,  2409,  2407,  2400,  2411,  2421,
    2408,  2402,  2413,  2401,     0,     0,     0,  2441,  2416,  2418,
    2414,  2441,     0,  2439,  2426,  2425,  2424,  2373,  2372,  2366,
    2432,  2419,  2415,   257,  2441,  2371,  2370,  2352,  2353,  2354,
       0,  2115,     0,  2437,  2406,  2431,     0,  2441,  2441,  2422,
    2423,  2392,  2394,  2300,     0,  1977,     0,     0,  2287,  2280,
    2267,   483,     0,     0,  2627,   483,   558,     0,     0,     0,
     707,  1496,  1482,  1498,  1406,  1405,  1403,  3191,  3439,  3443,
    1938,    80,  2293,  2294,    82,  2292,    83,  2502,  2479,  2478,
    2480,  2484,   130,  2489,  2481,     0,  2494,  2495,   429,     0,
     425,     0,     0,  3283,     0,   811,     0,    75,     0,  1412,
    2147,  2517,  2519,  2512,  3446,     0,  1379,  1396,  1395,  1391,
    1392,  1397,  1387,  1386,  2339,  3516,  3525,  3529,  3514,  1126,
    3321,  3409,   226,     0,     0,     0,     0,   136,     0,   281,
       0,   810,   154,   158,   810,     0,     0,     0,   810,     0,
    1993,  1985,  1987,  1988,  1989,     0,  1992,     0,  1558,     0,
    1546,  1546,  1556,  1995,  1976,  1973,  1997,     0,  1996,  1996,
       0,     0,  1956,  1955,     0,  2048,  1115,  2196,     0,     0,
    2058,     0,  2060,  2071,  2059,  1572,  2147,  1566,     0,  2599,
       0,     0,     0,     0,     0,     0,     0,     0,   805,  2274,
    2274,     0,     0,     0,     0,     0,     0,     0,     0,   265,
     274,  2690,     0,     0,   620,   621,  2274,   619,   662,   663,
     666,   667,   668,     0,     0,   669,  2274,  2274,   616,   642,
     643,   646,   647,   648,   649,   650,   612,     0,   617,     0,
       0,     0,  3421,  1233,  1266,  3476,  1242,     0,     0,  1425,
     290,     0,     0,   483,   530,   539,   533,   535,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,    89,   110,     0,  1448,  1460,  2229,  1454,
    2274,  2274,  2274,  2274,   618,   651,   652,   655,   656,   657,
     658,   661,   659,   660,     0,  2429,     0,     0,     0,     0,
       0,     0,     0,  1011,  1093,     0,  1012,     0,  1062,  1063,
    1061,   981,   977,  1136,   988,  1132,  1128,  1138,  1134,  1089,
     987,  1017,  1018,   983,     0,  1230,   995,     0,   984,  1044,
     982,   996,     0,   351,     0,   349,   358,  1020,   993,  1005,
     450,   450,   347,  1125,  1124,  1123,     0,  1014,   989,   990,
     992,  1137,   975,     0,   976,   451,   452,  2147,  2152,  2148,
     360,   379,     0,   378,  2318,  1546,     0,     0,     0,  2658,
       0,  2131,  2107,  2328,     0,  2332,  2331,     0,  2214,  2224,
       0,  2275,     0,     0,  1368,  1367,  2220,  2227,  3266,   483,
     368,   507,   579,  3408,     0,  3407,     0,     0,  3320,     0,
    3380,  3383,  2655,     0,     0,     0,     0,   333,     0,  2536,
    1487,  1489,  1490,  1488,  1496,     0,  2703,  2670,  2053,  2671,
    2700,  2698,  2702,  2696,  2697,  2701,  2695,  2699,     0,  3274,
    3275,  3273,  3267,  3272,   491,   499,   515,   518,     0,   495,
     505,   509,     0,   481,   480,   521,   553,     0,   592,   547,
     547,   547,  1464,     0,  1844,     0,  1845,  1846,     0,  1711,
    1946,     0,     0,     0,  1739,     0,     0,     0,  1848,     0,
    1592,     0,     0,  1714,  1706,  1520,     0,  1875,     0,  1880,
       0,  1878,     0,     0,     0,     0,     0,     0,  1940,     0,
    1942,  2642,     0,  1854,  1885,     0,  1852,     0,  1874,     0,
    1886,  1887,     0,     0,     0,     0,  1858,  1856,     0,     0,
       0,  1860,     0,     0,     0,     0,     0,     0,     0,  1757,
    1857,  1859,     0,  1792,     0,  1842,  1793,  1794,  1795,  2645,
       0,  1789,     0,  1790,     0,     0,     0,     0,     0,  1743,
    1744,     0,     0,     0,  1820,     0,  1745,  1800,     0,  1719,
    1821,  1802,  1750,  1751,  1822,  1823,  1824,  1716,  1717,  1804,
    1805,     0,  1826,  1718,  1806,  1809,     0,  1753,  2147,     0,
    1737,     0,     0,     0,  1755,  1783,     0,     0,     0,  1715,
       0,  1812,     0,     0,     0,  2147,     0,     0,  1759,     0,
       0,   956,  1538,  1707,  2643,     0,     0,  1602,  1607,  1600,
    1604,     0,     0,     0,     0,  1621,  1620,     0,     0,     0,
       0,  1613,  2063,  1624,  2078,     0,     0,  1883,  1935,     0,
       0,     0,  1838,  1839,     0,     0,   716,   715,     0,   719,
     795,     0,   736,   724,   713,  2525,     0,     0,  1471,  1474,
       0,     0,  2262,     0,  2259,  2266,   700,  2246,     0,  2257,
    2231,     0,  3311,     0,     0,     0,     0,     0,     0,     0,
    1579,  1580,  1580,  2641,     0,     0,  3224,  3194,     0,     0,
       0,  3255,     0,     0,  3248,  3249,     0,     0,     0,  3221,
    3222,  3223,     0,  2727,  2728,  2674,  2676,     0,  2675,  2725,
    2723,  2726,  2721,  2722,  2720,  2724,  3230,     0,  3203,  3204,
    3205,     0,     0,  2399,  2410,  2442,  2443,  2420,  2417,  2367,
    2438,  2147,  2377,  2398,  2368,     0,  2391,  2349,  2439,  2056,
    2431,  2364,  2365,     0,  1555,  1580,  2283,  1579,  2284,   483,
    2626,     0,  2631,     0,     0,   569,  1445,  1485,  1477,  1484,
    1481,  1496,  1494,  1483,  1181,  1180,     0,  1497,     0,    79,
       0,     0,  2482,  2483,  2476,  2496,  2471,     0,   420,   430,
     422,   426,   427,   428,   423,  2957,  3038,     0,  2056,  3287,
    3531,  1419,  1417,  1416,  1418,  1407,  1413,  1414,  2522,  2520,
    2515,  2540,  1394,     0,  1377,  2341,  2147,     0,  3528,   148,
    1126,     0,   169,  3421,     0,  1205,     0,     0,   134,   208,
     281,     0,   279,  3500,   156,  3490,     0,   149,     0,   261,
       0,     0,  1990,  1991,  1953,  1546,  1548,  1547,     0,     0,
    1550,     0,     0,     0,     0,  1961,     0,  1957,  1959,     0,
    2021,  2013,     0,  2201,  2193,  2198,  2640,  2068,  2112,     0,
       0,  1517,  2071,  1571,  2130,  2119,     0,  2123,  2122,  2125,
    1570,  2109,  2112,  1579,  3190,     0,     0,  1237,     0,     0,
       0,   268,   271,   269,   270,   671,   670,     0,  2429,   664,
    2274,  2274,   222,  2274,  2274,   221,   223,     0,   217,   214,
     224,  2274,  1257,   210,     0,     0,     0,     0,  2147,     0,
       0,     0,   228,     0,     0,  2429,   644,   623,   624,   627,
     628,   629,     0,  3391,  3390,     0,  3411,     0,     0,  3413,
       0,  3412,  3410,  3376,  3387,     0,  1258,  1126,     0,  1268,
    1270,     0,     0,  3476,  1424,     0,   293,   333,     0,   536,
       0,     0,  2147,     0,  2147,  2147,     0,     0,  2147,     0,
    2147,     0,     0,     0,     0,     0,     0,     0,  2147,     0,
       0,     0,     0,  2147,     0,  1462,     0,     0,     0,     0,
    2429,   653,     0,  2274,   613,   630,   631,   634,   635,   636,
     637,   638,   641,   639,   640,     0,     0,   299,   300,   368,
     561,  1068,  1066,  1069,  1067,  1090,     0,  1064,  1065,  1094,
    1131,     0,  1131,   350,   353,     0,   357,   356,     0,     0,
     994,   388,   387,   385,   483,   375,   383,   377,     0,   384,
    2155,  2156,  2153,  2151,  2154,  2315,  2233,  2331,     0,  2656,
    1578,     0,  2325,  2056,     0,  2330,  3266,  3326,   685,   865,
    3385,  1366,     0,   369,     0,     0,   504,  3405,     0,  3425,
       0,     0,     0,     0,     0,     0,     0,     0,   524,  2295,
       0,  1496,  1500,  2543,  3277,  3278,  3276,   516,     0,   512,
     504,   289,     0,   547,     0,   586,   588,   548,   596,   590,
       0,  1912,  1943,     0,  1070,  1070,  1056,  1078,  1929,     0,
    1923,  1926,     0,  1070,  1931,  1070,  1924,  1070,     0,     0,
    1921,  1922,     0,     0,     0,  1850,  1847,     0,     0,     0,
    1900,     0,     0,     0,     0,     0,  1635,     0,  1833,  1855,
    1853,     0,     0,     0,     0,     0,     0,     0,     0,  1861,
    1692,     0,  1690,     0,  1691,     0,  1693,     0,     0,  1843,
       0,  1661,  1680,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1938,     0,     0,  2163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2647,     0,     0,
       0,  1144,  1150,  1153,  1154,  1156,  1148,     0,  1814,     0,
       0,     0,  1894,  1892,     0,  1618,  1614,     0,  2062,  1634,
    1633,     0,     0,  1622,  2080,  2079,     0,  1882,     0,     0,
    1936,  2644,  1580,  1829,  1579,   726,     0,   744,   718,     0,
    2147,   721,   735,     0,   747,     0,     0,     0,   399,     0,
    1475,     0,     0,  2263,  2265,  2635,  2634,  2646,     0,     0,
    2258,     0,  3309,  3389,     0,     0,     0,     0,     0,  1573,
    1582,  1576,     0,     0,     0,  3186,  3238,  3229,     0,     0,
       0,     0,  3253,  3247,  3244,  3245,     0,     0,     0,  3228,
    3202,  3208,  3207,  3210,  3212,  2387,  2386,     0,  2440,  2115,
    2360,  2379,  2381,  2441,  2302,  2305,     0,  2048,  2291,     0,
       0,  2285,  2289,     0,  2630,     0,     0,   330,     0,   568,
       0,  2015,  3192,    84,     0,  2474,     0,  2469,  2472,     0,
       0,  3298,  3299,  3291,  3294,  3292,  3293,  3297,  3300,  3301,
    3288,  3295,  2115,     0,  1409,  1415,  1393,     0,  1400,  1398,
       0,     0,  2340,  3517,  3530,     0,  1258,     0,     0,     0,
       0,     0,     0,   814,  1126,   209,     0,  3506,  3505,  1579,
       0,   277,   280,   282,   276,   324,     0,   237,  3476,   163,
     165,     0,   159,   161,   151,  1557,  1549,  1551,  1546,  1546,
       0,  1949,     0,     0,     0,  1949,     0,     0,   707,     0,
    1994,  2010,  1116,  2557,  2069,  2070,     0,  2065,  2113,  2114,
    2067,  2061,     0,  2072,  2074,  1518,  2118,  1567,     0,  2111,
       0,     0,  2187,  2189,   864,   863,   273,   272,   285,   286,
    2173,  2174,  2171,  2172,   677,   690,  2175,   691,   665,  2147,
    2147,  2279,  2278,  2147,  2147,   216,   213,  2277,  2276,  2147,
    2147,   211,   232,   231,   233,   234,   236,   235,   230,  1253,
       0,   678,   679,   645,     0,   625,  3394,     0,  3401,  3396,
    3399,  3379,  3378,  3377,  3374,     0,  2147,  2147,  2147,     0,
    2147,  3420,  3422,     0,  1261,  1354,  1354,     0,  1354,     0,
       0,  1354,     0,  2274,     0,     0,  2274,   707,  1372,  2274,
    2274,  2274,  2274,     0,  2274,  2274,  2274,  2274,     0,  2274,
    2274,     0,  2274,     0,     0,     0,  2274,     0,  1337,     0,
    2274,  2274,  2274,  2274,  1354,  2274,  2274,     0,     0,     0,
       0,  2274,  2274,     0,     0,  2274,  2274,     0,  1282,  1336,
     816,   859,   843,   844,  1234,  1281,  1283,  1295,   703,     0,
    1313,  1339,  1340,  1338,     0,  3434,     0,     0,   242,  3478,
       0,  3480,     0,  1428,     0,  1427,   544,   540,  2147,  2147,
     103,  2147,    95,    96,    91,   123,   124,    93,    94,    99,
      98,   100,   101,   104,   105,   102,    97,    92,   127,   129,
     128,   106,   125,   126,    90,   684,   683,   682,   681,   654,
       0,     0,  2429,   632,   367,     0,  1076,  1074,  1074,     0,
    1074,     0,  1122,   970,   972,   971,   973,   974,  1076,  1076,
    1074,  1074,   301,   363,     0,  1027,  1231,  1026,   352,   348,
    1055,  2147,   365,   386,     0,  2056,  2659,     0,     0,  2132,
    1579,  2320,  2322,  2210,  2208,   603,     0,   580,   508,   578,
    3406,     0,  3319,  3324,     0,  3382,  3381,  3409,  3409,  3409,
    3409,   526,     0,  2243,  1491,  1496,  1500,     0,  1492,  2554,
     506,   510,   482,   562,   551,   483,     0,  1944,  1913,  1914,
    1928,  1930,     0,  1927,  1916,  1933,  1920,  1925,  1932,  1918,
    1709,  1740,  1713,  1712,     0,     0,     0,  1770,     0,  1898,
    1881,  1879,     0,     0,  1747,     0,  1749,     0,     0,  1835,
    1803,  1877,  1773,  1807,     0,  1752,     0,  1779,  1777,     0,
    1689,  1687,  1688,     0,  1760,  1787,     0,  1678,  1788,     0,
    1819,  1766,     0,  1768,     0,  1769,     0,  1798,     0,  1771,
    1801,  1825,  1705,  2165,  2164,  2162,  1720,  2147,     0,  1774,
    1738,     0,     0,  1811,  2648,  2649,     0,  1813,     0,     0,
    1155,  1141,  1142,  1143,     0,  1145,  1147,  1149,     0,  2147,
    1827,  1637,  1636,     0,  1610,     0,  1619,  1616,     0,  2082,
    2081,     0,     0,  1830,  1582,  1840,     0,   727,   728,   730,
     732,     0,   797,   722,     0,   711,     0,   726,   714,  1472,
     585,  2261,     0,     0,     0,  2260,  2270,     0,     0,     0,
    3306,  3305,  3304,  3303,     0,  1577,  1586,  1585,  2638,  2642,
    3226,  3225,  3258,  3257,  3251,  3250,  3252,     0,     0,  3231,
       0,     0,  2169,  2170,  2168,  2166,  2167,  2378,  2115,  2374,
       0,  2056,     0,  2013,  1580,  2281,     0,   583,  2632,     0,
     573,   570,   571,     0,  2018,     0,  2019,  2016,  2017,  2147,
       0,     0,   438,   433,   441,   435,   437,   436,   442,   443,
     444,   445,   439,   434,   440,   432,   431,     0,  3286,  1420,
       0,     0,  2342,  2343,  3322,  1261,     0,  1221,  1223,  1222,
    1206,  1207,     0,   142,   145,   914,     0,     0,   135,   695,
     703,   815,   818,   692,   137,  1579,   174,   275,   278,   322,
     328,   327,   266,     0,     0,     0,  3496,   296,   879,   880,
     878,   877,     0,  3496,   296,  3476,  1560,  1559,  1962,     0,
    1966,  1971,  1967,     0,  1958,     0,  1979,  2022,  2014,     0,
       0,  2565,  2112,     0,     0,  2112,  1580,  2185,  1579,   215,
     220,   219,   212,   225,   218,   229,   626,  3395,  3393,  3392,
       0,  3400,     0,  3375,  3416,  3414,  3415,  3418,     0,     0,
    3417,  3419,  1259,  1260,     0,  1254,  1228,   810,  1355,   808,
       0,  1317,  1321,  1318,     0,   915,   810,  1182,  1182,   808,
    2235,  1465,  2235,     0,     0,  2235,     0,  2237,  2235,     0,
       0,  2235,  2235,  2274,     0,  1465,     0,  2147,   705,  1375,
    1373,  1374,     0,  2147,  2147,  2147,   841,   862,     0,  2147,
    2147,  2147,  1465,     0,     0,  2274,  2147,  1330,  1277,  1331,
       0,     0,  1278,     0,  2147,  2147,  2147,  2235,  2147,     0,
    1465,  1297,  1465,  1465,     0,  2147,   849,   850,   848,  2147,
    2147,     0,   817,  1126,  1279,   704,  1280,   914,     0,  1369,
     890,   917,  2651,     0,  3435,     0,     0,     0,  1267,     0,
     245,   243,   253,  3477,     0,  1245,     0,  3480,  1430,  1431,
       0,     0,     0,   116,   118,     0,   120,   122,     0,   112,
     114,   615,   680,   633,   298,  1077,   999,  1075,  1003,  1004,
     306,  1131,     0,     0,  1108,  1131,  1137,  1131,  1137,  1059,
     376,  2331,  2324,     0,  2133,     0,  2326,   370,     0,     0,
    3409,  3423,  3423,  3423,  3423,   333,   522,   525,  2296,  1493,
    1501,  2556,  2555,     0,     0,   483,  1131,  1934,  1131,  1131,
    1851,     0,     0,     0,     0,  1904,     0,     0,     0,     0,
       0,  1708,     0,  1831,     0,     0,     0,     0,  1056,  1668,
    1670,  1666,  1669,     0,  1070,  1672,     0,  1037,  1070,  1675,
    1677,  1662,  1663,  1664,  1665,     0,     0,  1947,  1948,     0,
    2183,  2182,  2181,     0,     0,     0,     0,  2650,  1139,  1816,
       0,  1152,  1146,  1144,  1151,     0,  1895,  1615,     0,     0,
    2084,     0,  1884,  1841,   731,     0,   798,     0,   751,     0,
     749,   725,     0,  2264,  2636,  2647,   701,     0,     0,  3308,
    3307,  1584,  1583,     0,     0,     0,  3209,  3211,  2380,  2304,
    2106,  2306,  2299,  2290,  2288,     0,  2147,   572,  1298,     0,
    1299,  1310,  1312,  1499,     0,  2507,     0,  2505,  2475,  2508,
       0,  1399,  1401,   168,     0,   139,     0,     0,  1228,  2782,
       0,   883,   885,   886,   887,   888,     0,   696,  2554,   702,
    1126,   819,   814,   176,   202,   307,  3501,   606,   607,     0,
       0,  3480,   266,     0,     0,     0,     0,   266,     0,     0,
       0,     0,     0,     0,     0,  2003,     0,  2002,     0,  2008,
    2012,     0,     0,     0,     0,  2558,  2560,     0,  2202,  2066,
    2075,  2073,  2110,  2190,  2188,     0,  3402,  3398,  2150,  2149,
    1262,     0,   916,  1229,  1465,     0,     0,     0,  1341,     0,
       0,     0,  1182,   906,   810,  1228,  1183,   810,   810,  1315,
       0,     0,     0,  1289,     0,     0,  2235,     0,  1343,     0,
    1342,     0,     0,     0,     0,  1352,  1353,     0,  2102,  2104,
    2112,  2180,  2179,   838,     0,  1334,   831,   830,   833,   832,
     835,   834,     0,  1350,  1351,   827,   824,   836,     0,   826,
     851,     0,   839,   821,     0,   875,   876,   874,   845,   852,
     822,   823,     0,   829,   828,   825,     0,  1305,     0,   867,
     872,   870,   869,   868,   873,   871,   840,   858,   837,   853,
    1294,  1354,  1354,  1314,     0,   881,  2654,     0,  1371,  1316,
       0,   891,     0,     0,   857,   856,   854,   855,   252,   241,
       0,     0,  1269,  1271,     0,     0,  1272,  3479,  3482,  1243,
    1436,     0,   333,   108,  2147,   109,  2147,   107,  2147,  1001,
     304,     0,   997,   998,  1000,  1002,     0,  2134,  3426,  3423,
       0,  3317,  3316,  3315,  3314,   528,   527,     0,     0,   547,
       0,  1915,  1917,  1919,  1764,  1765,  1901,  2112,  1899,  1906,
       0,     0,  1905,  1797,     0,  1748,     0,  1832,     0,  1808,
    1778,  1776,  1761,  1671,  1667,  1674,  1038,  1673,  1131,  1791,
    1767,  1799,  1721,  2147,  1775,  1781,  1782,     0,  1815,  2147,
    1617,     0,  2087,  2086,     0,     0,  2112,   729,  2147,   796,
     724,     0,     0,   748,     0,   712,     0,  2269,  2271,  2639,
    3233,  3232,  2131,  2628,     0,  1495,     0,  2020,  2503,  2147,
       0,  2473,     0,     0,     0,     0,     0,     0,   889,   882,
     914,     0,   694,   800,   820,   703,     0,   503,   503,     0,
     203,   204,   317,     0,   308,   310,   283,   267,     0,     0,
     610,   608,   609,     0,     0,   150,  3498,   262,  3497,     0,
     297,   167,   262,     0,  3480,  1963,     0,  1968,     0,  1960,
    1998,  1998,  2009,     0,     0,     0,     0,  2559,     0,     0,
    2566,  2568,     0,  1264,     0,  1263,     0,  1300,     0,     0,
    1319,     0,   810,  1178,  1179,  1228,  1203,  2651,  1228,  1228,
       0,  1288,     0,  1451,  1122,  1326,     0,  1284,     0,  1328,
    1329,  1366,   847,  1286,     0,  2105,   706,  2495,  1293,   846,
       0,  1369,  1285,  1307,  1291,  1320,  1370,  1160,   921,     0,
     909,   919,   963,  2653,   239,   244,   254,   255,  1247,     0,
    3481,     0,  1437,  1433,  1434,  1429,   541,   117,   121,   113,
       0,     0,     0,  3318,     0,  3430,  3424,  3428,     0,     0,
     554,   593,     0,  1903,  1863,  1907,  1908,     0,  1834,  1836,
    1676,     0,  1140,     0,  2083,  2077,     0,     0,     0,     0,
       0,     0,  2096,  2088,     0,  1888,   799,     0,     0,   737,
     754,   753,   750,  2637,  2303,   333,  1311,  2506,     0,  3296,
       0,     0,     0,  2112,  1226,     0,     0,   884,   697,   801,
       0,  2554,   503,   503,   177,   182,   183,   187,   185,   196,
       0,     0,   189,     0,   189,  1581,   205,   320,   318,   319,
       0,   323,     0,   284,   563,  1579,   250,     0,   263,   164,
    3496,   160,  3496,   152,     0,     0,     0,  2006,  2004,  2563,
    2564,     0,  2561,     0,     0,  2567,     0,     0,     0,  1302,
       0,   809,     0,  1228,  1203,  2651,     0,   892,     0,   896,
     898,     0,     0,  1369,  1290,  1335,  1327,  1344,  1325,  1465,
    2103,     0,     0,  1324,  1306,  1308,  1412,     0,  1164,   923,
       0,   918,   910,   931,     0,   246,  1273,   483,     0,     0,
       0,  1432,     0,  1439,   305,   302,     0,     0,  3429,  3427,
    2297,  1977,   547,  2112,     0,     0,  1746,  1722,  1817,     0,
    2093,     0,     0,  2091,  2090,     0,  2085,  2092,     0,     0,
     745,   761,   757,     0,   759,   760,   782,   574,  2509,     0,
       0,  3266,     0,  1225,     0,  3266,     0,   860,   693,     0,
       0,     0,   184,   186,   188,   201,   207,     0,   206,     0,
     262,   321,     0,     0,   311,   309,   262,   335,  3491,   242,
     251,   563,   266,   266,  1965,  1970,     0,  1999,     0,     0,
       0,  2562,  2570,  2569,  3403,  1265,     0,     0,     0,  1301,
       0,   911,   904,   900,     0,  1204,     0,   894,     0,     0,
    1333,     0,  1323,  1287,   842,   707,     0,  1292,     0,  1163,
       0,  1168,  1158,   949,  1105,     0,   952,     0,   922,   924,
    1098,  1099,   926,     0,     0,     0,     0,   964,     0,     0,
    1082,     0,  1085,     0,     0,   920,     0,   932,  1081,  1088,
    2652,     0,   248,   256,  3483,     0,     0,  1438,  1443,     0,
    1440,  1442,     0,  1552,     0,  2544,   594,  1902,  1910,  1909,
    2094,     0,  2095,  2098,     0,     0,  2099,     0,   741,   743,
     733,     0,   738,     0,   755,     0,  2274,  2274,     0,  2274,
    2274,  2274,  2274,   775,   783,   785,     0,     0,  3266,  1193,
    2112,     0,  1195,     0,   699,   861,     0,   503,     0,   503,
     562,   180,   178,   192,   190,   175,   316,     0,     0,  3502,
     564,     0,   253,  3499,   262,   262,  2001,  2000,  2015,     0,
    1322,  1304,     0,     0,     0,     0,   902,     0,     0,     0,
       0,     0,     0,     0,   961,   962,  1332,   958,   959,   960,
       0,  1296,     0,  1161,     0,  1165,  1166,  1167,     0,  1159,
     950,   951,  1106,   925,  1104,  1097,  1096,     0,  1087,  1083,
       0,   940,     0,     0,  1089,  1080,   933,   247,     0,   240,
    3484,  3485,  1435,     0,   303,  2298,  2308,     0,  1115,  2089,
    2097,  2101,  2100,   739,     0,   746,   768,   758,   764,     0,
    2274,     0,     0,  2274,     0,     0,     0,     0,     0,   752,
     784,  2274,   227,  1191,     0,     0,  2274,  1345,  1194,  1219,
    1201,     0,  1224,  1227,  1345,  1196,  1218,  1199,     0,   195,
     199,   194,   197,     0,  1581,   324,   324,   314,     0,     0,
       0,     0,   166,   162,     0,     0,  1303,   907,     0,     0,
       0,     0,     0,     0,     0,  2602,  2601,     0,     0,  1162,
       0,     0,  1103,  1102,  1100,  1101,  1587,  1086,     0,   935,
    1095,   934,   249,  1441,     0,     0,  2545,   745,   742,   768,
       0,   766,     0,   762,   756,   763,     0,   794,   788,     0,
     790,   791,   789,   786,   779,     0,   777,     0,     0,     0,
    1345,  1192,  1217,  1216,  1197,     0,  1211,  2147,   143,  1347,
    1346,  1202,     0,   146,  1200,     0,   563,   563,   181,   262,
     266,   296,   325,     0,     0,     0,   562,  1579,   255,  2007,
    2005,     0,     0,     0,  1191,     0,  1193,  1195,   957,     0,
    1174,  1173,     0,     0,  1170,  1169,     0,  1084,   927,   927,
     941,  2307,  2309,  2571,   740,   765,     0,   773,   769,   771,
     774,   793,   792,     0,   776,     0,   787,  1208,  1209,   140,
    1198,  1220,  1210,  1349,  1348,  1215,  1214,  1212,  1213,   908,
    3503,  3503,   179,   193,     0,  3496,   315,   312,     0,   565,
    3492,   238,     0,  1191,     0,   893,  1191,   897,   899,  1309,
    1177,  1175,  1176,     0,     0,  1588,     0,   938,   928,   930,
     937,   943,   944,   942,   945,     0,  2557,   767,     0,     0,
     782,   781,   778,  3504,   200,   198,   326,   266,     0,     0,
       0,   905,   901,  1191,   895,     0,     0,  1589,   929,   936,
     946,   948,     0,  2565,   772,   770,   780,   191,   313,   566,
       0,   903,  1172,  1171,   947,     0,  2573,  3493,  2572,     0,
    2577,  3488,     0,     0,  2584,  3486,  3487,     0,  3494,  2575,
    2576,  2574,  2579,     0,     0,  2581,  2582,     0,  2546,  3489,
     483,  2583,  2578,     0,  2585,  2587,     0,  3495,  2580,     0,
    1579,  2586,     0,  1580,  2588
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5129, -5129, -5129, -5129,  2270,  4726, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  2870, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  1986, -5129,   534, -5129,   541, -5129,   540, -3351,  -636,
    4422, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,   260,
     245,   263, -5129,   266, -5129, -3986, -5129, -5129, -5129, -5129,
     268, -5129, -5129, -4546, -5129,  2152, -3201, -5129, -5129,   133,
    1539, -5129, -5129,   432, -5129,   113, -5129, -5129, -5129, -4537,
     -28,  -233, -5129,    88,  4961,    22, -3968,  4265, -4484,   108,
    1639, -5129, -5129,  2183, -5129, -5129, -3167, -5129, -5129, -2292,
   -5129, -5129, -4473, -5129,   740, -4582,  1423, -5129, -5129,   277,
   -5129, -5129, -5129,  -116, -5129,  -114, -5129,  -544, -3075, -5129,
   -2384, -5129, -5129, -5129,  4245, -5129, -5129, -5129,  1997, -5129,
   -4161, -5129, -4784,  4885, -5129,  -707, -5129, -5129, -5129,  2014,
   -5129, -5129,   803,  1407,  3419,  2837, -5129, -5129, -5129, -5129,
    2682, -5129,  2444, -5129, -1912,  3862, -5129, -5129, -5129, -5129,
   -5129,  2914, -2675, -5129, -5129, -5129,  1717, -5129,  -857, -5129,
   -2104,  -949,  4776, -5129,    31, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -1456, -5129, -5129, -5129, -5129, -5129,
   -5129, -3835, -2260,  1949, -5129,  1974, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129,   925, -5129, -5129, -5129, -5129,    39,
   -5129, -5129, -5129, -5129, -5129, -5129,  2766, -5129, -5129,  4926,
   -5129, -5129, -5129, -3659, -5129, -5129, -5129, -5129, -5129, -5129,
      41, -5129, -5129, -5129, -5129, -4306, -5129, -5129, -5129, -2225,
   -5129, -5129, -5129,  1208, -5129, -5129,  3341, -5129,  3349,  3336,
   -5129,  3351, -5129, -3122, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,    42, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  4287, -5129, -5129, -5129,
   -3304, -5129, -5129, -3413,  3569, -5129, -2629, -5129, -5129, -2776,
   -5129, -5129, -2667,  1455, -5129, -5129,  1843,  1156, -5129, -1959,
   -2783, -2772, -5129, -5129, -5129, -2882, -2866,  -843,  3430, -1469,
   -2842, -5129, -5129, -5129,   343,   345,   523,  1531,  2123, -5129,
   -3973, -5129, -5129,   718, -5129, -5129, -5129, -5129, -5129,  1292,
     567,  1293, -5129,   884,  3132, -3073, -5129, -5129, -5129, -5129,
   -5129, -5129,   -11,   387,   -88, -5129, -4113,   577, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -3223, -5129, -5129, -5129,
    -230, -5129, -5129,  -170, -5129, -5129,  -224, -5129,   105, -5129,
   -5129, -5129, -5129,  2948, -2039,  1119,  -693, -5129, -3877,  1571,
   -4213, -3497, -5129, -5129,   246, -1377, -1376,   -93, -5129, -5129,
   -5129, -5129, -5129, -5129,  1058,   566,  1570, -4021, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -4008, -4004,   795, -5129, -3761,
   -5129, -5129, -5129, -4646, -5129, -5129, -5129, -5129, -5129, -5129,
    -135, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -4015, -5129,
   -5129,    78,    49, -5129,   181, -5129, -4736, -5129, -3616, -1216,
   -5129, -5129, -3608, -3606, -3603, -5129, -1507, -3609, -1497, -3577,
   -5129, -5129, -5129, -1461, -1498,  1245, -1358, -1424,  1459, -1602,
    -720,  2022,    48, -4289, -3014, -1225, -1204, -5129, -5129, -2909,
   -3613, -5129,  2761, -4229,  -680, -2089, -3440,    43, -5129, -5129,
   -1855, -1894,  2242, -5129,  3581, -2259, -1178, -2261,  1944, -5129,
   -5129,  1382, -5129, -1792,  1380, -5129, -5129, -5129,  1389, -5129,
    -151, -5129, -5129, -5129, -5129, -3825, -5129, -2705, -3439, -5129,
   -5129,  5374,  5375, -3441,   -94,   -87, -5129, -5129, -5129,   374,
   -5129, -5129, -2366,   -52,    26,    34, -3974, -3248,   301, -2474,
    3579, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  1808,  1283, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129,  1619, -3025, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -4685, -4202, -5129, -5129,  1116, -3301, -3591, -3605,
   -3941,  4591, -5129, -5129, -5129, -5129,  4419, -3662, -3943, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  3805,  1732, -5129, -5129,
    2350, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
     380,  2362, -5129, -5129, -5129, -5129, -5129,  2910, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,    95, -5129, -5129, -5129,
   -5129, -5129,   568,  3658, -5129, -5129, -5129, -5129,   -16, -5129,
   -5129, -5129, -5129,  3211, -5129, -5129, -5129, -5129,  3094, -5129,
   -5129, -5129, -5129, -5129, -5129,  2106, -5129,  2744, -5129, -2674,
   -5129, -5129,  1533,  -550, -5129, -5129,  -398, -5129, -5129, -5129,
   -5129, -5129,    28, -5129, -5129, -5129,  5373, -1669,    40,  -465,
   -5129, -5129,    14, -5129, -5129,  4478,  -356,  2565,  -760,  5145,
   -5129, -5129, -5129, -5129, -2739,  2454, -5129,  4551, -5129, -5129,
    4716,  1713,  4507,  2327,  1582,  2521, -1813,  -572, -3359,    79,
    1440, -5129,  1767,   687, 10029, -5129, -1746, -1645, -5129, -5129,
     -60, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
    2651,  2661, -5129, -5129,  4123, -5128, -5129, -5129,  -884, -5129,
   -2729, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,  2001, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129,  4061, -1767, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -1380, -5129, -3051,
   -5129, -5129, -5129, -5129, -5129, -5129,  -637, -5129,  4220, -5129,
    4267, -5129, -1300, -1890,  3815, -5129,  4574, -5129, -5129, -5129,
   -5129, -5129, -5129,  3824, -5129, -2284, -5129, -2722,  4584,  4585,
    4588, -5129,  4592, -5129, -5129, -1907,   662, -5129,   962, -5129,
   -5129, -5129, -5129, -5129,  1422, -5129,   228,  1025,   231, -4146,
   -1684,  1796, -5129, -5129, -1957,  3848,  4276, -1348, -5129,  3060,
   -5129,  2623,  3827,  2052, -5129,  2397, -5129,  1336,  1338, -5129,
   -5129,  2058, -5129, -5129, -5129, -5129,   768,   303, -5129, -5129,
   -5129,   651,  1056, -2282, -5129,   777, -3469,  4589,  -256, -1244,
   -5129, -1390,  2403,   759,  5220,  -387, -5129, -5129,  4565, -5129,
   -2238, -5129, -2061, -1706,  -989, -3332, -4605, -3466, -5129, -1927,
   -5129, -5129, -5129, -5129, -5129,  1347, -5129, -5129, -5129,  3091,
   -5129,  5498, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129,  -671, -1220, -5129, -5129,  2894,  -912,  -557,  5519,
    -390, -5129, -5129,  -382, -5129, -5129, -5129, -5129,  4370,  4114,
   -5129,  2856, -5129, -5129, -5129, -5129,  2626, -5129, -5129,  1090,
   -1187,  2207,  2388, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
    1061, -5129, -2014, -5129, -5129, -5129, -5129,  -379, -5129, -5129,
   -5129,  1472, -5129,   129,  5330,  -372, -5129, -5129, -5129,  5144,
   -5129, -5129, -5129, -5129, -5129, -5129,  3685, -1556,  5148, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  3247, -5129, -5129,
   -5129, -5129, -5129, -5129,  4063,  5345,  -690, -1807, -5129, -1024,
    3249,  2566,  -807, -5129, -5129, -5129,  4598,  5347, -5129, -5129,
    5509, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
    3205,   694, -5129, -5129, -5129, -5129, -5129,   793, -5129, -5129,
   -5129, -5129,  3965, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129,  1665,     9, -5129,  1031,
     -15, -5129,   737, -5129, -5129, -5129, -5129, -5129,   -48, -5129,
   -5129,   -58, -5129, -1406,  5000, -1393, -5129, -1863, -3588, -5129,
       1, -5129, -5129, -5129,  3259, -5129, -5129, -5129, -5129,  1545,
   -5129, -5129, -2844,  -948, -1804, -3834,  2925, -5129, -5129, -5129,
    -587,     0,    65,  1526, -1288, -5129, -5129,  2717,  3776,    47,
    3857, -5129,  5081,   792,  -732,  -669, -1119, -5129,  8197, -5129,
   -5129, -5129, -5129, -5129,    10,  -593,  -585,   139,  -664,    20,
      77,   100, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129,  2617, -5129, -5129,
   -5129,  1527, -5129,  5377, -5129,  3459, -1886,  5384,  3334,  2641,
    2638, -5129, -5129, -5129, -5129, -1866, -5129, -5129, -1880,   273,
   -5129,  3664, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129,  3970,  -594,  -577,  4183,  5388,  4886, -5129,  4440, -5129,
   -5129, -5129, -5129, -5129,  1896, -5129, -2127,  2683, -1585, -2279,
   -5129, -5129,  3104,  1410, -5129, -5129,  1525, -5129,  2305, -2757,
   -3268, -5129,  2545, -2935, -5129, -5129,   705, -5129, -5129, -5129,
    1829,   930,  5365,  4766, -5129, -5129, -5129, -5129,  5582, -5129,
   -5129,   996,  5607,  5608,  5611,  -490, -5129, -3492, -5129, -3475,
   -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -4453, -5129, -4326, -5129, -5129, -5129, -5129,   106, -3946, -5129,
   -5129,  2689, -5129, -5129, -5129, -5129, -5129, -5129, -5129, -5129,
   -5129
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,   471,   756,  2105,   472,   473,   474,   475,   476,  2071,
     477,  1310,  2821,  1312,  2037,  2824,   478,   725,   479,  2236,
    3022,  3023,  4798,  4799,  4792,  4793,  4795,  4796,  3024,   841,
     842,   480,  2876,  4073,  3549,  2873,  5254,  2111,  4966,  2112,
    4967,  2869,  4088,  4635,  2118,  2880,  2119,  4633,  4634,  4626,
    4627,   764,  4984,  5266,  5581,  5854,  5732,  5444,  5445,  5446,
    5587,  5453,  5856,  5451,  5855,  5447,  5728,  5937,  5726,  5936,
    5448,  5269,  5270,  5449,  4074,  3632,  3633,  1369,  3544,  3641,
    3642,  2883,  4624,  4778,  5525,  4782,  5672,  5799,  5599,  3669,
    5146,  5526,  5527,   657,  1381,  5468,  5469,  2200,  5286,  5276,
    4081,  4082,  4083,  3551,  3552,  5277,  2950,   481,   834,  1483,
    2228,  2229,  4994,  4995,  3725,  3726,  3727,  5273,  5274,  5275,
    5460,  4620,  4985,  4621,  5943,  4622,  2805,   958,  2232,  2233,
     857,   858,  1500,   859,   860,  2253,  1556,  3082,  3083,  3084,
    2306,   861,   862,   863,  2250,   864,  3107,  3047,  3783,  3784,
    4356,   865,  3754,  3755,  3756,  3111,  1182,  3757,   482,   483,
     678,   687,   679,  1179,  2682,  1180,   484,   485,   723,  2061,
    2062,  2063,  2064,  3514,  2839,  3508,  3509,  4585,   866,   867,
    2328,   959,   960,   486,   961,   658,  1679,  2424,  3811,   962,
     963,   964,   965,  1681,  2409,  2410,   966,   967,   968,   969,
     970,  5452,  3141,  3191,  3808,  3142,  3785,  3192,  2420,   971,
     972,   973,   974,  1682,   934,   935,  3157,  4371,  4837,   975,
     633,   837,   838,  2235,  2996,   839,  2997,  3678,  4791,   840,
    1485,  2992,  1487,  3815,   976,   977,  2428,  2427,  3812,   708,
     978,  1300,   639,  1499,  2020,  5596,  5597,  5859,  6049,  2021,
    3485,  4029,  4561,  4562,  4946,  2366,   900,  1613,   979,  1294,
    2801,  1188,  2690,  3816,   980,  2430,  2432,  2429,  3814,  5542,
    2431,   981,   668,   698,   656,  1611,   684,  4989,  5283,   812,
     813,   849,  3045,   814,  1495,  1456,  2205,  2976,  2977,  3647,
    3648,  3714,  3715,  3716,  2968,  2969,  2970,  3034,  3035,  3036,
    2957,  2958,  2959,  2209,  2954,  2955,   815,  1457,  1468,  2971,
    2972,  2973,  3720,  3038,  3039,  3040,  3041,  2974,  2356,  2975,
    4144,  4608,  4982,  4609,  5262,  3395,  4978,  4979,  4765,  5074,
    3492,   491,   671,  1165,  1888,  2674,  3957,  3378,  3380,  2675,
    3956,  4496,  4497,  4498,  3376,  3377,  5419,  3382,  3954,  5560,
    5897,  5697,  5698,  3946,  5702,  4505,  4919,  4920,  5232,  5420,
    5566,  5819,  5703,  5904,  5817,  5900,  5818,  5902,  6039,  5978,
    5979,  5829,  5915,  5916,  5983,  6040,  5713,  5714,  5715,  3951,
    5229,  5440,  3539,  2194,  2195,  5037,  1321,   492,  4610,  4249,
    4611,  4612,  5082,  5724,  4251,  4252,  4253,  3778,  1967,  5116,
    5098,  4632,  5124,  4613,  4970,  4971,  4972,  4973,  5626,  5758,
    5628,  5629,  5755,  5870,  5754,  4974,  4975,  5258,  5521,  5043,
    4710,  4694,  4695,  4770,  5132,  5360,  5523,  5519,  5648,  5649,
    6027,  6028,  5665,  5970,  5666,  6034,  6059,  6060,  5650,   493,
     670,  1836,  5764,  5765,  5766,  5361,  1558,  4322,  1559,  2276,
    1560,  4324,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  3097,  2266,  2267,  3061,  2259,  2260,  2258,  4808,
    4806,  2325,  5667,  5668,  3054,  2263,  2264,  3070,  5796,  5651,
    5669,  5653,  1571,  4332,  2278,  1923,  1924,  3583,  1937,  1938,
    3094,  2315,  3095,  2198,  2279,  3064,  3065,  3068,  4469,  5217,
    4475,  4476,  4477,  3911,  3912,  3913,  3914,  3915,  3336,  5654,
    5131,  5518,  5638,  5641,  5779,  5964,  5044,  4696,  5047,  1280,
     765,  4697,  4698,  5920,  5837,  5844,  5921,  5845,  5838,  5497,
    4070,  5922,  5923,  5924,  5847,  5840,  4600,  5432,  5433,  5032,
    3074,   494,   574,  3667,  1444,  1446,  1455,  3673,  2985,  2984,
    1461,  1460,  2963,  4194,  4685,  3670,  4268,  5368,   799,  4254,
    5509,  5333,  5516,  4255,  4949,  4256,  5489,  5619,  4257,  5353,
    5514,  5636,  4950,  4951,  4258,  4259,  4260,  5928,  5929,  5930,
    4699,  1642,   818,   819,  1473,  1474,  1475,  3136,  5129,  4722,
     495,  2861,  2856,   496,  1338,  1339,  1340,  2083,  2084,  2859,
    2860,  3534,  4059,   497,  1304,  2816,  2073,  2848,   498,  1324,
    3525,  3526,  3527,  4054,   499,  1481,  2225,  2226,  2989,  4275,
    4790,  5150,  5375,  5533,  5371,  5679,  5680,   500,   845,  1491,
     501,   635,  2245,  2246,  2247,  3026,   502,  1692,   582,   503,
    1186,  1894,  1897,  1898,   504,  1303,  2023,  2024,  2025,  2026,
    3488,   505,  2397,  3160,  3161,  3162,  3163,  2811,  4030,  2812,
    2813,  3497,  4378,   506,   779,  1441,   507,   778,  1440,   508,
     509,   697,   751,   689,  1910,   511,   512,  3396,  2468,   514,
     785,   783,  1127,   516,  1434,  1430,   517,  2469,  1128,   775,
     776,  1388,  1212,  3568,  3569,  2340,  2341,  2915,  2902,  1213,
    1214,  1414,  2176,  2927,  2705,  2706,  2008,  2707,  3980,  5590,
    4525,  5967,  1713,  1623,  1308,  1130,  1131,  1132,  1848,  1849,
    5655,  1133,  1858,  2628,  4437,  4881,  4882,  4883,  4884,  5208,
    2549,  2550,  2669,  1134,  2535,  1135,  1136,  1137,  1138,  1139,
    1140,  1141,  1142,  1143,  1144,  1145,  2664,  4418,  4419,  4863,
    3371,  3372,  3373,  1146,  3217,  4404,  3228,  1147,  1148,  1149,
    1150,  1151,  3938,  1152,  4492,  4122,  1153,  1842,  2614,  2495,
    4855,  4409,  5186,  5190,  5191,  5192,  5395,  2436,  3205,  3839,
    4846,  4848,  4849,  3840,  3841,  3939,  3341,  1734,  1735,  1702,
    1703,  3889,  1389,  1390,  1391,  1392,  1393,  4106,  4107,  5000,
    4639,  5002,  4643,  2141,  2142,  2145,  2146,  1394,  1395,  1396,
    1397,  2129,  1398,  1399,  1400,  2907,  5477,  5008,  5009,  5610,
    5609,  5010,  4648,  4649,  4110,  4111,  4565,  4566,  4567,  3579,
    2491,  2492,  2565,  2402,  2403,  2404,  2437,  1408,  2156,  2923,
    3589,  3355,  2158,  3587,  4117,  3591,  4123,  4124,  2659,  3364,
    3934,  3366,  4910,  5224,  5225,  5412,  5550,  5551,  5556,  4263,
    5068,  5069,  3121,  1415,  2935,  3601,  4120,  1969,  1970,  1971,
    2166,  3594,  3595,  3772,  1417,  1418,  1428,  1433,  1421,  1419,
    3112,  4680,  3113,  3916,  3898,  4955,  4145,  2460,  2461,  5073,
    4893,  1422,  2936,  4131,  4132,  4133,  1404,  1405,  2151,  2152,
    2153,  1423,  1406,  2916,  4113,   518,   718,   519,  2363,   885,
    1608,  2362,  3505,  1493,  2693,  2335,  2336,  1595,   807,   655,
     520,   659,  3158,   521,   685,  2692,   939,  1191,  1902,  1903,
    1904,  3397,  3969,  3398,  3962,  3963,  3399,  1292,  4515,  4516,
    3131,  4158,  4159,  4153,  2800,  3478,  1293,  2012,  4020,  2797,
    4021,  2798,  4022,  4373,  5177,  5684,  2794,   522,   695,  4551,
    4014,  4015,  5805,  5806,  1192,   523,   640,  2334,   881,  1584,
    1587,  1588,  2344,  3117,  4351,  1589,  1590,  3119,   882,   883,
     524,   739,  3535,  4062,  1344,  1991,  1992,  1993,  2781,   525,
     692,  1281,  4009,  4548,  2767,   674,  1606,  1974,  1284,  1975,
    2763,  3462,  1958,   526,  1438,  1437,   833,   527,   528,   791,
     583,  2180,   529,  1313,  2054,  2837,  4037,  4038,  4570,  2055,
    2056,  3506,   530,   704,  1297,  3502,  4956,  4957,  5251,   531,
     730,  1328,  1329,  2077,  2075,  3530,  2851,   532,  2676,   533,
     660,   942,  1645,  2396,   534,   733,  1333,   535,   536,   944,
    4379,  5808,  5973,   664,  2399,  1649,  5263,  4651,  5015,  5016,
    5018,  5310,  5311,  6036,  6080,  6091,  6084,  6094,  6095,  6098,
    6104,  6105,  1154,  1351,  1352,  1155,  5769,  1156,  1157,  1158,
    2470,  1296,   700,  2015,  2016,  3483,  2804,  3481,  2017,  3964,
    3965,  3412,  3588,  1159,  3966,  5033,  1494,  2337,  1316,   538,
    1160,   622,   809,  1353,  2148,  3168,  1232,  3437,  1162,   869,
    3817,   982,   983,  1451,  1895,  2214,  2215,  3169,   624,  1658,
    3438,   870,  1234,   541,   625,   626,   627,   628,   629,   630,
     631,   632,   547,   691,  1216,  2712,   548,  1442,  2937,  3498,
    1914,  1242,  1943,  1932,  1942,  2737,  3449,  2740,  3450,  3451,
    4540,  4002,  4541,  4003,  1287,  2732,  1915,  4004,  2725,  2726,
    2727,  2728,  3993,  1929,  2721,  2191,   549,   945,  2408,   667,
    1651,  1652,  3181,   550,   694,   551,   724,  1318,  2844,  3518,
    3519,  4050,  4587,  4051,   552,  1197,  1198,   553,   928,  3542,
    3148,  2352,  1454,  2353,  2380,   931,  1615,   932,   933,  1629,
    1626,  1632,  1628,  4185,  3662,  3663,  3153,  2360,  2216,  2699,
    3655,  4670,  2217,  4179,  4180,  4671,  2370,  3144,  3145,  2982,
    5385,  4192,  3666,  5171,  4362,  5386,  5387,   554,   705,   555,
    5278,   717,  1307,  2034,   556,   557,   558,   559,   784,  1426,
    1215,   575,   576,   577,   578,   822,   823,  3672,  4270,  4785,
    4786,  5370,  6087,  6088,  2882,  4086,  5741,  6050,  6081,  6100,
    4992,  4993,  5287,  5467,  3554,  4085,  5279,  6044,  4079,   560,
    1358,  1354,   750,  2103,  2097,  2099,  2867,  3538,   561,   562,
     563
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     539,   537,  1283,   821,  1557,   752,  2459,  2284,   669,  1676,
     542,  1230,  1279,  1387,   515,   709,   817,  2285,  2168,  2689,
     544,  2167,  2600,  2826,  2654,   621,  3048,  1238,   510,  2684,
    2715,   487,  2181,   827,  1998,  2346,  1925,  1928,  1930,   488,
     513,   489,   490,  3196,  2501,  1940,   872,   540,  3114,  2270,
    2467,  2375,  1605,  3981,   873,  3739,  2738,  2288,  3099,  3098,
    3122,  2159,  4262,   929,  2722,  1365,  1896,  2196,  2197,  1366,
    1367,  1452,  2324,  2297,  2734,  1736,  4261,   545,  3818,  3819,
     930,  1309,  3798,  2303,   884,  2124,   887,   888,   889,   890,
     891,  3602,   893,   894,   929,  4601,   896,   897,  1236,  1335,
     546,  1696,  1342,  2316,  2619,  2519,  1237,  2295,  3496,  2843,
    4323,  1199,  2627,  4301,  3543,  2149,  4018,  4329,  4325,  4354,
    4326,  2793,   688,  4327,  2092,  2683,  2307,  2308,  2309,  4008,
    4615,  2311,  3194,  4129,  1453,  4646,  2357,  3493,  4986,   543,
    1187,   712,  4112,  2754,  2755,  2322,  2257,  2838,  2262,  4331,
    2268,  4146,  2268,  1502,  4384,  2938,  2761,   721,  4810,  3190,
    2268,  4998,  3571,  3721,  3507,  3844,  4135,  2292,  5135,  2257,
    4250,  3570,  3570,  2774,  4691,  1492,  2268,  4146,  4146,  3722,
    4997,  4272,  4058,  1345,  1346,   828,  2268,  4692,  3575,  3066,
    2304,  4693,  3134,   829,  3650,  2310,  2684,  4614,  2787,  2788,
    4788,   830,  3086,  3197,   831,  3651,  2268,  2257,  2257,  2320,
    2321,   832,  2864,  2400,  2629,  2630,  2417,  2633,  2634,  2635,
    2636,  2637,  2638,  5373,  2640,  2641,  2643,  2645,  2646,  2647,
    2648,  2649,  2911,  -489,  4718,  1832,  1834,  1835,  1676,  2342,
    5071,  5142,  4146,  4146,  2836,  4719,  2960,  1843,  1844,  1878,
    3154,  2400,  3155,  3156, -2972,  4700,  2000,  4702,  2193,  3711,
    4712,  2227,  3718,  3025,  4471,  4077,   872,  4077,   872,  2400,
    3108,  1435,  5076,  3719,   873,  4151,   873, -1236,  5903,  1379,
    4053, -3369, -2051,  3108,   672,  3652,  1630,  2271,  1921,  3037,
    2286,  3619,  2683,  4747,  3895,  1843,  1844,  2290,  2283,  1843,
    1844,  2287,  4313,   683,  2980,  3948,  4812,   797,  2291,  2277,
    2277,  5078,  2298,  2277,  2294,  3108, -2661,  4472,  2438,  2439,
    2277,  1843,  1844,  4089,  1217,  2193,  2277,  2449, -2457,  1596,
     729, -3289,  1843,  1844,  1479,  2280,  2280,  3090,  2983,  2280,
    3646,  1609,  1610,  4175,  -802,  3182,  2280,  4092,   710,  2193,
    1843,  1844,  2280, -2051,  3108,   820,  4286,  4408,  5534,  2509,
    4176,  2512,   714,   780,  2400,   665,   701,  4068,  -803,  1921,
    5425,  2317,  5337,  1843,  1844,  2452,  3765,  2526,  2527,  4078,
    2530,  4078,  1843,  1844, -2457,  4084,  3570,  3135,  2536,  2537,
     737, -3289,  2541,  2272,  4155,  1959,  5362,  4191,  1432,  4981,
     781,  3374,  4265,  5272,  1843,  1844,  1373,  2453,  1217,  5080,
    3400,  4534,  1843,  1844,  3333,   734,  1961,  3258,  1643,   877,
    1785,  1845,  2454,  1846,   661,  4771,  3108,  1889,  1431,  1843,
    1844,  4161,  4157,  1843,  1844,  1647,  1737,  4890,  5271,  1843,
    1844,  -698,  5880,  2134,  4756,  1843,  1844,  1927,  1843,  1844,
    1965,  1380,  3108, -2662,  5617,  3108,  5351,   878,   579,  2857,
   -2972,  1843,  1844,  2326,  1917,  3383,  2455,  1843,  1844,  1845,
    2299,  1846,  1999,  1845,  4841,  1846,  1634, -2051,  1843,  1844,
     774,  1777,  5450,   886,   753, -2457, -2655,  1921,  2359,  5103,
    3802,  1843,  1844,   634,  2456,  1845,  3347,  1846, -2457,  5004,
    1972,  4471,   702,  5768, -2051,  4720,  1845,  3368,  1846,  5380,
     681,  3474,   773,  2858,  2374,  3369,   690,  2135,  5888, -3352,
    1843,  1844,  1416,  2871,  1845, -2051,  1846,  1416,  2136,  1416,
    1973,  5768,  3108,  1843,  1844,  2137,  1843,  1844,  1841,  5094,
     774,  1843,  1844,  1847,  2952,  1843,  1844,  1845, -2457,  1846,
   -3289,   515,  5737,  3202,  4472, -2457,  1845,  3108,  1846,   782,
    3653, -3356,  1420, -2051,  4757,   510, -2457,  2138,  4184,   676,
     806, -3355,  3215,  3406,  3407,  3408,  3409,   796,  1845,  -258,
    1846,  4842, -2774,  4494,   537,  3348,  1845,   801,  1846,  4060,
     804,  1847,     9,  1921,  2457,  1847,  4625,   515, -3353,  1843,
    1844,  4677,  4276,  1845,  2452,  1846,  1918,  1845,  5944,  1846,
   -3354,   510, -3359,  1845,  3178,  1846,  4426,  1847,  4502,  1845,
    2273,  1846,  1845,   513,  1846,  1387,  4891, -2810,  1847,  2139,
    1843,  1844,   797,  2028,  3108,  1845,  2453,  1846,  1994,   868,
    2327,  1845,  5618,  1846,  1256,  1644,  1847,  5763,    19,   871,
    2953,  2454,  1845, -3290,  1846, -2770,   539,   752, -2459,   875,
    2140,  5450,  5881,  1648,  3108,  1845,   542,  1846,  5515,  1847,
    1161,  5292,  4266,  3179,    35,  2109,   544,  2110,  1847,  4177,
    2113,  2114,  2116,  2117,  1890,  3349,  5503,  1471, -2051,  2865,
    1439,  1231,  1286,  3393,  1845,  2455,  1846, -2331,  1161,   843,
    1847,  1235,  6006,   901,  2273,   662,  3147,  1845,  1847,  1846,
    1845,  1239,  1846, -3290, -2459,  1845,   545,  1846,  1161,  1845,
     877,  1846,  2274,  2456,  5456,  1847,  2710,  2065,  1256,  1847,
    1817,    42,  2300,   545,  1962,  1847,  2962,  2213, -2829,   876,
   -2774,  1847,  1843,  1844,  1847,  1843,  1844,  2733,   579,    32,
    4114,  4115,  1821,  4250,  2261,  4535,   546,  1847,   878,  2351,
    2101,  5313,    35,  1847,  5288,  1843,  1844,  5264,  1240,  2465,
    1185,  4771,   879,  1845,  1847,  1846,  4156, -2830,   874,  3043,
    1635,  4096,  3475,   581,  5657,  1736,   673,  1847,  2697,  3528,
      35,  1241,  1322,  1374,  3541,   543,  4069,   666,  1429,  3384,
     843,  4171,  4172,   843,  1845,  1922,  1846,  3375,  2717, -2831,
    1832,  1834,    40, -2770,  4207, -2459,  1847,  2196,  2197,    42,
    2237,  5314,  3091,  2457,  2169,  3417,  4095,  4880, -2459,  1847,
      44,  2897,  1847,  3721,  3213,  2752,  3570,  1847,  1161, -3472,
    3750,  1847,  2912,  5535,  3416,  4146,  2256,    42,   798,  3722,
    4101,  1921,  4628,   539,  4105,   826, -2331,  2981,    44,   868,
     636,  1572,   711,   542,  3650,  3593,  4307,  4308,  4090,   871,
    4666,  1573, -3290,   544,  4161,  3651, -3369,  4341, -2459,   875,
    5272,  1575,  2357,  3075,  4508, -2459,  1922,   827,  4473,  4813,
    3075, -2661,  4093,  2123,  5899,  1847, -2459,   703,  3334,  4803,
    1498,  1843,  1844,  1921,  2213,  1469,  3896,  3109,   846,  1597,
    1598,  1599,  1600, -3373,   880,  4084,  1845,  4629,  1846,  1845,
     752,  1846,  3339,  3340,  4681,  1786,  1847,  3109,   899,  5600,
     545,  -489,  3718,  4771,  4309,  1161,   545,  2361,  2244,  1845,
    3109,  1846,   984,  3719,  2685,  2244,  1656,  2035,  1656,  1656,
    1656,  4148, -2972,   546,  1656,  3185,  1656,  2401,  3581,   876,
    2244,  1576,  3189,   539,   537,  4789,  1660,  1289,  1660,  1660,
    1660,  1631,  3109,   542,  1660, -1236,  1660,   515,  3469,  2786,
   -2051,  1603,  2272,   544,  1607,  1161,  3746,  3747,  5374,  4721,
    1161,   510,   543,  3654,  3356,  2401,  2656,  1217,   874,  2960,
    1574,  3573,  3574,   513,  1922,  3359,  4630,  3362,  3363,   929,
    1680,  3109,  4474,  2401,  2275,  3343,  4173,  5602,  3649,  5603,
    1161,  2433,  3791,  1661,  3028,  1661,  1661,  1661, -2662, -3289,
    1161,  1661,  5586,  1661,  5588,  3053, -2457,  3056,  1847,   828,
     545,  1847,  -802, -3373,  5426,   738,  1662,   829,  1662,  1662,
    1662,  1960,  1362,  2184,  1662,   830,  1662,  3071,   831,   663,
    3216,  1847,  3229,   546,  3230,   832,  -803,  3076,  2446,  3072,
     735,  3604,  1877,   581,  3055,  1845,  3037,  1846,  1431,  3081,
    3897,  2277,  4361,  3109,  3227,  1659,  3717,  1659,  1659,  1659,
    2458,  3087,  5381,  1659,  3088,  1659,  3101,  3259,  2275, -2051,
    4691,  2632,   543,  2277,  3100,  5265,  2277,  2280,  2401,  3109,
    1922,  2685,  3109,  4692, -3352,  2609,  2277,  4693,   736,  1161,
    1161,  1161,  1161,  1839,  3842,  4473,  3843,  4376,  3242,  2280,
    1737,  3245,  2280,  1161,  3350,  5738,  1837,  2543,  3221,  -698,
    1843,  1844,  2280,  4999, -2810,  2503,  1737,  3222,  1472,  3260,
    5474,  4061,  5475,  2758,  2560,  2760, -3356,  2568,  4262,  2570,
    3274,  1843,  1844,  2574,  2575,  2576, -3355,  2769, -2810,  3233,
    2772,  2582,  4261,  2423,  2775,   637,  1452,  3335,  3564,  2981,
    2261,  4712,  5883,  5019,  1416, -2331,  5022,  6007,   665,  3109,
    3118,  5945,  3231, -3353,  3232,  4943,  3320,  1847,  3321,  1843,
    1844,  2790,  2791,  2792,  3234, -3354,   665, -3359,  3331,  3180,
    3332,  3926,   470,  3927,  3109,   880,  5330,  5230,  5332,  5910,
    5911,  5335,  4116,  4007,  4414,  -115,  4415,  -115,  5340,  5341,
    4428,  5594,  4429,   710,  3773,  1818,  1843,  1844,  5528,  2698,
    4962,  4441,  4238,  4442,  2032, -3373,  1452,  1843,  1844,  2670,
    4273,  1387,  5315,  2743,  4447, -2829,  4448,  1822,  3781,  5048,
    2069,   665,   752,  1843,  1844,  2102,  4250,  3130,  4771,  1843,
    1844,  1217,  4652, -2774,  3917,  3159,  5744,  5745,  3974, -2829,
   -2774, -2774,  3522,  4487,  4655,  4488,  1818,  1843,  1844,   731,
   -2011,  3109,  4005,  2273, -2830,  5743,  4427,  5023,  2663,  5693,
     470,  3235,  -119,  1696,  -119,  1737,  3237,  4146,  3244,  2773,
    1161,  2274,  5149,  2057,  1845,  2671,  1846,  1256, -2830,  6025,
    3214,  3109,  2035,   929,  5471,  2003, -2831,  5996,   470,  3657,
    1843,  1844,  -111,  5464,  -111,  1845,  3058,  1846, -2751,   843,
    2713,   843,  1976,  1306, -2331,  1217, -2770,  2939,  4597,  3774,
   -2831, -3290,   940, -2770, -2770,  4035,  4987,  1843,  1844,  4636,
    4637,  3059,  2961,   811,  3247,  3507, -2459,  1402,  1922,  3570,
    3570,  1387,   638,  1845,  4668,  1846,  2213,  4323,  5795,  3990,
    4640,  4641,  1387,  1387,  4329,  4325,  1839,  4326,  4885,  1956,
    4327,  3650,  2709,  4763,  2067,  3249,    35,  5085,  4682,  1837,
     710,  2814,  3651,  2849,  2756,  3042,  1843,  1844,  5513,  4859,
    1845,  2094,  1846,  5100,  5101,  2833,  4331, -3197,  2874,  2875,
    1922,  1845,  2878,  1846,  1843,  1844,  4771,  2885,  2886,  2887,
    3721,  5736,  5960,  5454,  2723,  1995,  1847,  1845,   537,  1846,
    2796,  2852,  1161,  1845,  3997,  1846,  3722,   780,  1429,   927,
    4007,   515,  3523,    42,  2107,  2108,  6003,  1847,   665,  3658,
    5584,  1845, -2011,  1846,    44,   510,  4598,  5095,  6004,  4802,
    1843,  1844,  1737,  1410,  3958,  4063,  1684,   513,  4631,  2220,
     927,  4335,  1161,  4337,   781,  1161,  4033,  2442,   769,  2962,
     936,  4091,  2196,  2197,  5035,  1847,  4711,  5968,  4771,  2222,
    5005,  2938,  5506,  1302,  1845,  5752,  1846,  3253, -2679,   699,
    3254,  3566,  5036,   929,  5096,  3567,  5285,  1319,  2940,  4382,
    5390,  5601,  5625,  2684,  5627,   -72,  1412,  3420,  3248,  3718,
    3421,  1845,  1847,  1846,  4683,  2168,  2729,  3466,  2168,  2168,
    3719,  3597,  3598,  1847,  2068,  1502,  2881,  2884,  3447,  1957,
    3190,  5231,  6047,  5529,  3987,  2981,  2221,   941,  3240,  1847,
    5632,  3789,  2004,  6067,  4036,  1847,  3043,  3387,  3388,  3634,
    3775,  2815,  3524,  2256,   824,  2730,  3724,  4166,  2929,  1189,
    1845,  3999,  1846,  1847,  1581,  5097,  2058,  4860,  2033,  3562,
    5694,  1256,  1403,   898,  3858,  3563,  5584,  2074,  1845,  5522,
    1846,  5345,  5795,  5324,  1330,  2672,  3925,  4006,  5454,  4274,
    4831,  4832,  4833,  4834,  5334, -2751, -2748,  1480,  2349,  2683,
     666,  4280,  5735,  4282,  4283, -2011,  1847,  5961,  5739,  4288,
    6000,  6001,  4032,  5727,  5729,  1299,   835,  4296,   666,  1843,
    1844,  5962,  4303,   782,  1845,  1161,  1846,  1996,  4599,  4669,
    5756,   682,  5267,  1847,  5616,  2272,  2005,   851,   852,  2960,
    1977,  3660,  5771,  4013,  4988,  1256,  3255,  1843,  1844,  4016,
    2281,  2006,  5006,  3929,  3930,  3952, -2746,  1860,  5053,  5508,
     713,  1161,  2467,  1709,  1710,  1711,  1604,  2275,  3649,  2993,
   -3197,  3137,  3138,   666,  1161,  1161,  4520,  4521,  4522,  4523,
    1161,  3802,  1847,  5530,  1161,  1161,  1161,  2724,  2718,  2443,
    1843,  1844,  4007,  3060, -2749,  1161,  1161,  2238,  5393,  5025,
    1847,  1161,  2757,  1161,  1161,  1161,  1161,  1161,  1839,  1161,
    3947,  2731,   844,   515,  1843,  1844,  5120,  2244,  3174,  3522,
    1161,  1837,  1161,   937,  1765,  1161,  1161,   579,  1161,  1161,
    1161,  3037,  1161,  1161,  1161,  1685,  3717,  5415,  5969,  1161,
    5175,  5695,  1161,  1843,  1844,  5959,  1847,  2227,  1383,  4203,
    1161,  1161,  1863,  1161,  1161,  1161,  5862,  5863,  1161,  1161,
    1161,  1161,  1161,  1161,  1161, -2679,  1161,  1161,  1161,  1161,
    1161,  1161,  2624,  1161,  1161,  3991,  1161,  1161,  1161,  1161,
    1161,  1161,  1161,  2673,   938,  1161,  1161,  1161,  1161,  3171,
    1161,  1161,  1161,  1845,  1161,  1846,  1161,  3172,  1161,  5473,
    3139,  3992,  1161,  1161,  1161,    16,    17,  1161,  1161,  1161,
    1161,  1161,  1190,  1161,   872,  5007,  2030,  2966, -1465,  5561,
    1161,  1845,   873,  1846,  4323,  2931,  2405,  1161,  1161,  1161,
    1161,  4329,  4325,   515,  4326,  5750,  3484,  4327,  1161,  1161,
    1161,  1582,  1161,  1161,  1161,  1161,  1161,  1161, -2510,  1161,
    1161,  1161,  1161,  1161,  1161,  1161,  1161,  3803,  4345,  2610,
    1161,  5401,  3055,  4331,  1845, -2274,  1846,  1187,  1843,  1844,
     666,  3361,  5850, -2748,  5852, -2747,  4353,  5172,  5173,  5174,
    5268,  2115,  1843,  1844,  5696,  3272,  5652,   754,  1845,  3523,
    1846,  3897,  3897, -2274,  5442,  3897,  3897,  1447,  4138,  1737,
    3241,  3897,  3897,  4097,  5544,  1161,  3280,  1843,  1844,  2072,
    1161,  2282,  1526,  5280,   470,  1847,  2561,  1845,  2562,  1846,
    1161,  3392,  3393,  4077,  5987,  5988,  1843,  1844,  3134,  4214,
    3458,  5775,  4679, -2746,  3459,  2677, -2510,  4347,  3279,  5058,
    1843,  1844,  3250,  1847,  5573,  5963,  2273,  3464,  2009,  2745,
    2746,  6002,  2748,  2749,  2750,  1921,  2239,  1594,  1843,  1844,
    3471,  3472,  2956,  2759,  2274,  1843,  1844,  3635,  1320,  5281,
    1256, -2749,  5046,  5046,  2086,  4139,  2354,  5498,  2771,  3251,
    6020,  4306,  1843,  1844,  1496,  4554,  1847,  1161,  5435,  5187,
   -2510,  3327,  3282,  2719,  3780,  1926,  2261,  1931,  2406,  6061,
    2010,  1934,  1939,   580,  2650,  3344,  5331,  2720,  3285,  3524,
    1847,  2967,  1843,  1844,  3286,  1161,  5783,  1161,  4157,    35,
    1843,  1844,  5343,  3394,  1676,  6074,  2776,  2031,  1602,  2932,
    2405,  1968,  3287,   854,   855,  2407,  5965,  4078,   716,  1847,
    4553,  5133,  1845,  2240,  1846,  2241,  2405,  5226,  3443,  5562,
    5563,  1161,   581,  5169,  5687,  2244,  1845,  5376,  1846,  1843,
    1844,  5352,  5776,  5354,  1843,  1844,  1448,  1843,  1844,  5835,
    1843,  1844,  3370,  1843,  1844,  3288,    42,  1375,  3636,    16,
      17,  1845,   929,  1846,  1449,  3637,   755,    44,  2925,  2238,
    1376,  1843,  1844,  3638,  6021,  2961,   843,  4530,  4531,  3402,
    3413,  4012,  3291,  1843,  1844,  4674,  4675,  4676,  5545,  1387,
    1843,  1844,  4539,  2651,  1845,  1387,  1846,  2201,  2879,  3440,
    1843,  1844,   843,  3135,  1843,  1844,  5690,  3441,  2652,  2962,
    1387,   757,  1845,  5282,  1846,  2242,  1161,   820,  4844,  1845,
    5777,  1846,  5443,  2196,  2197,  4517,   752,  2087,  5564,  2355,
    4052,  3292, -2747,  5875,  5876,  5692,  1845,  3521,  1846,  1377,
    1956,  1843,  1844,  5570,  1847,  4486,  3639,  1161,  3555,  3293,
    1676,  3556,  3042,  1843,  1844,  3561,  3503,  2155,  1847,  1336,
    1843,  1844,  3723,  2168,  5836, -2429,  1845,   802,  1846,  4367,
    4368,  4369,  4370,  4346,  1845,  3649,  1846,  4794,  4797,  4328,
    4800,  4298,  2406,  1847,  2764,  2653,  5501,  3983,  3984,  4330,
    6072,  6073,  4776,  2243,  5383,  3311,  3582,  5606,  2406,  4929,
    4930,  3043,  1847,  3424,  5565,  2563,  3724,  3640,  2564,  2213,
    3998,  5842,  2065,  1845,  2065,  1846,  1847,  3479,  1845,  2244,
    1846,  1845,  2956,  1846,  1845,  5607,  1846,  1845,  2765,  1846,
   -1465,  5384,  4100,  2965,  1847,   805,  4104,  1843,  1844,  4174,
    2926,  1847,  1843,  1844,  2359,  1845,  2944,  1846,  1843,  1844,
    1337,  5834,  1594,  5039,  5554,  5643,  3049,  1845,  1847,  1846,
    3986,  5300,  6085,  5301,  1845,   539,  1846,   710,  2949,  1843,
    1844,  2949,  1843,  1844,  1845,   542,  1846,  1424,  1845,  2956,
    1846,  4146,  5608,  5557,  5993,   544,  1161,  1161,  1847,  2324,
    4777,  4007,  1378,  3352,  5222,  4336,  1847,  5046,  5127,  5994,
    1957,  2169,  1843,  1844,  2169,  2169,  3599,  1843,  1844,  2354,
    5567,  5040,  3085,  3717,  5811,  1845,  5223,  1846,  4146,  4146,
    2275,  1843,  1844,  5835,  1387,  4390,  4841,  1845,  2239,  1846,
    1873,  1874,  1875,  1876,  1845,  1847,  1846,  3602,  2168,  1425,
    1847,  4349,   545,  1847,  -913,  1347,  1847,  3050,  5645,  1847,
    5502,  4299,  1860,  1843,  1844,   927,  4892,    16,    17,  2244,
    4388,  4389,  3167,  2766,  3316,   546,  2354,  1847,  4080,  4395,
    1161,  4396,  3170,  4398,  2213,  3051,  3425,  4711,  4905,  1847,
    5686,  6031,  3175,  1843,  1844,  4352,  1847,   868,  4814,   539,
    3273,   803,  1161,  3494,  1161,  1462,  1847,   871,  2685,   542,
    1847,  3656,  1161,  1161,   543,  3909,  1325,   875,  3495,   544,
    6086,  1845,  2376,  1846,   806,  2240,  1845,  2241,  1846,  5128,
    3910,  1463,  1845,  5041,  1846,  2377,  4146,  1277,  2268,   567,
    3928,  1348,  1349,  4842,  4394,  3319,   901,  1847,  5836,  3176,
    4399,   850,  5812,  1845,   515,  1846,  1845,  1863,  1846,  1847,
    2966,  4007,  1922,  4300,   895,  6089,  1847, -2274, -2274,  3326,
    1860,  5646,  3177,  1464,   545,  1864,   545,  4007,  4007,  5871,
    3225,  5873,  5874,  6015,   726,  3052,  1845,  6032,  1846,  5624,
    1347,  1845,  2355,  1846,  1277,  2378,  2665,   876,  3337,   546,
    1676,  1161,  1161,  1161,  1326,  1845,   929,  1846,  4941,  4780,
    5042,  3173,  4944,  5933,  3657,   740,  4781,  2242,  5543,  5730,
    1843,  1844,  5159,  3777,  5457,  5163,  5162,  5165,  5164,  3618,
    2666,  5458,  1866,  1867,  1843,  1844,   874,  1845,   543,  1846,
    6033,  5326,  6052,  1847,  5918,  6054,   825,   470,  1847,  2355,
    3845,  2700,  6090,  5133,  1847,  1843,  1844,  5181,  1327,  5182,
    5183,  3850,   727,  5901,  2701,  1863,  5905,  1845,  2435,  1846,
    2301,  1465,  2302,  2134,  2435,  1847,  1348,  1349,  1847,  1161,
    1843,  1844,  6071,  1864,  1843,  1844,  2435,  1843,  1844,  5989,
    5951,  5952,   836,   741,  5955,  2243,  5459,  5731,  1843,  1844,
    5109,  1161,  1839,  1350,  2615,  2956,  2667,  4453,  1847,  1161,
    4118,  1466,  1161,  1847,  1161,  1837,  3511,  3512,  3883,   710,
    1161,  3276,  1161,  1161,  2378,  4937,  5072,  1847,  3122,   835,
    2448,  5835,  5077,  5079,  5081,  4454,  2508,  3820,  2435,  5086,
    5087,  2655,  1452,   847,  3658,  5092,  1161,  2135,  2511,  3894,
    1884,  3443,  4901,  5099,  2967,  2435,  4903,  5104,  2136,  1847,
    1161,  1410,  4412,  4119,  5072,  2137,  4186,  4187,  5118,  5072,
    4188,  4189,  4190,  1843,  1844,  6014,   515,  1161,  1893,   927,
    1161,  1843,  1844,  2379,   848,   686,  4809,  2668,  4811,  1847,
     693,  4851,  4852,  3513,  1845,  4413,  1846,  2138,  4817,  4818,
    2529,  3940,  3435,  1161,  5011,  3973,   943,  5012,  1845,  1411,
    1846,   722,  3439,  4424,  1412,  3949,  4016,  2540,  3659,  4867,
    4444,  5308,  3440,  6037,  6114,  1161,  1843,  1844,  -417,  1845,
    3441,  1846,  4898,  5309,  3950,  4547,  3454,  4461,  1763,  3368,
     892,  1230,   706,   707,  4894,  2961,  5836,  4933,  3457,  4830,
    5890,  3109,  3941,  1413,  1845,  1164,  1846,  1238,  1845,  2139,
    1846,  1845, -2504,  1846, -2504,  3278,  1161,  3436,  1744,  1737,
    4921,  1181,  1845,  3281,  1846,  4342,  1843,  1844,  4588,  3444,
    3236,  1946,  1387,  1843,  1844,  1166,  1387,  4916,  1761,  3455,
    2140,  5202,  1843,  1844,  3049,  1766,  1767,  3460,  5117,  4552,
    1843,  1844,  3445,  5119,  3236,  2057,  5013,   675,  1843,  1844,
    4509,  1189,  2702,  3724,  4462,  5214,  1847,  1843,  1844,  5194,
    3289,  5494,  2840,  3290,  5499,  5500,  3296,  1291,  1236,  3760,
    1847,  3463,  2135,  1843,  1844,   677,  1237,  3042,  1301,  4321,
     677,  3442,  3723,  2136,  3297,   677,  3660,  1845,  1305,  1846,
    2908,  1847,  1843,  1844,  1306,  1845,  3301,  1846,  1314,  1850,
    4945,  3761,  2868,  3302,  2894,   752,  2895,   843,  1311,   927,
    3550,  2872,  3553,  3303,  1851,  4019,  1847,  3309,  3558,  3560,
    1847,  3520,  5070,  1847,  5238,  3050,  1843,  1844,  2210,  2211,
    5014,  1161,  1843,  1844,  1847,  1003,  1320,  1843,  1844,  4879,
    1845,   780,  1846,  1852,  1323,  1161,  3661,  1161,  1332,  1853,
   -1525,  1343,  2917,  3057,  3310,  5110,  3238,  5111,  2506,  5400,
    3762,  1334,  2249,  1947,  1843,  1844,  3314,  1010,  4805,  4807,
    4807,  1341,  4807,  3315,  1843,  1844,  1948,  3277,   781,  2035,
    4805,  4805,  4807,  4807,  2909,  4007,  1854,  3283,  3763,  3284,
    1845,  1860,  1846,  3294,  5112,  2035,  2293,  1845, -1525,  1846,
    3300,  1161,  2035, -1525,  2951,  1357,  1845,  4822,  1846,  1847,
    1843,  1844,   773,  5919,  1845,  2140,  1846,  1847,  1387,  2169,
    3611,  4007,  1845,  5113,  1846,  1361,  1022,  3615,  3616,  5622,
    3304,  1845,  2035,  1846,  2318,  2319,  1949,  2620,  1843,  1844,
    1363,  4130, -1525,  2898,  4847,  1950,  3252,  1845,  2899,  1846,
    3317,  1467,  2900,  3052,  1034,  3324,  3305,  3758,  2035,  1982,
    1368,  3338,  1847,  1843,  1844,  3212,  1845,  1370,  1846,  6029,
    6029,  1371,  2213,  2213,  2213,  2213,  1372,  2085,  5240,  5241,
    1926,  1407,  4407,  2090,  2091,  4410,  1863,  4773,  3764,  4041,
    2966,  1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  3306,
    1845,  2035,  1846,  4794,  1864,  4797,  1845,  4800,  1846,  1439,
    5705,  1845,  1847,  1846,  1445,  4411,  2655,  1843,  1844,  1847,
    4416,   706,   707,  3312,  4042,  2035,  2621,  5148,  1847,  6058,
    1617,  2901,  1183,  4517,  4420,  1459,  1847,   782,  1845,  1476,
    1846,  1193,  2173,   872,  1847,  2175,  2175,  1288,  1845,  1470,
    1846,   873,  1477,  1847,  1055,  3733,  3740,  3736,  3741,  5114,
    2452,  1866,  1867,  2371,  2372,  1478,  4421,  2373,  5403,  1847,
    4659,  4660,  1843,  1844,  4661,  4662,   820,  5416, -2429,  2014,
    4663,  4664,   515,  3742,  1845,  3741,  1846,  1618,  1847,  3744,
    1619,  3745,  2453,  1482,  2169,  5115,  4422,  1490,  1951,  2966,
    1486,  1871,  1872,  1873,  1874,  1875,  1876,  2454,  1497,  1656,
    1656,  1656,  1845,  4940,  1846,  1161,  4549,  1620,  1161,  1580,
    1843,  1844,  1847,  5740,  1952,  1621,  2622,  1161,  1847,  1660,
    1660,  1660,  3787,  1847,  3788,  2956,  1161,  1845,  1161,  1846,
    1161,  1579,  1161,  1161,  1161,  1161,  1161,  1161,  3809,  1161,
    3810,  2455,  1577,  1452,  1452,  1452,  1452,  1161,  1578,  1161,
    1847,  1583,  1161,  1161,  1161,  1161,  1594,  5685,  1161,  1161,
    1847,  4835,  1161,  4836,  1161,  4346,  1161,  1277,  1161,  2456,
    2339,  2132,  1161, -1157,  2967,  1612,  1661,  1661,  1661,  1616,
    1161,  1845,  1161,  1846,  1161,  1161,  1161,  1161,  1161,  1622,
    4485,  1161,  1161,  1161,  1624,  1161,  1847,  1614,  1161,  1662,
    1662,  1662,  1625,  4024,  4938,  4025,  2698,  2698,  2698,  2698,
    1636,  1161,  2354,  4423,   706,   707,  1161,  1627,  4464,  1161,
    1633,  1161,  1161,  1161,  1847,  1637,  1161,  4425,  1638,  4108,
    4928,  4109,  1161,  1452,  2956,  2889,  1639,  1161,  1659,  1659,
    1659,  1641,  1387,  1387,  1646,  3435,  1161,  5642,  4434,  1847,
    4934,  4935,  1161,  5839,  1161,  3439,  5846,  4678,  3109,  5706,
    1161,  1839,  5414,   742,   743,   515,  5707,  1677,  1161,  2457,
    1161,  1756,  3370,  4440,  1837,  1161,  4057,  4443,  3005,  3006,
    4449,  5708,  5348,  2967,  1845,  1983,  1846,  1697,  1860,  3005,
    3006,  4450,  1803,  3018,  3968,  4529,  4594,  4169,  1698,  4170,
     744,  1699,  2134,  1847,  3018,  1704, -2429,  5203,  3961,  4314,
    3436,  4315,   515,  1953,  1809,  4435,   758,  3284,   539,   537,
    1161,  2354,  3444,  3931,  5643,  4438,  4043,  2035,   542,  1984,
    1277,  1985,   515,  1879,  1355,  1356,  1705,  1359,   544,  1360,
    5505,  1706,   745,  2452,  1707,  3445,   510,  1161,  5188,   487,
    5205,  1231,   793,  2065,  5207,  1708,  5364,   488,   513,   489,
     490,  1235,   759,  5257,  5035,   540,  4451,  1712,  2391,  3723,
    1714,  1239,  5839,  4044,  4459,  2453,  2135,  5658,  1161,  5846,
    1715, -1187,  1860,  1863,  3442,  2355,  4328,  2136,   927,  1954,
    4140,  3020,  3021,  1716,  2137,   545,  4330,  1955,  1161,  1717,
    1161,  1864,  3020,  3021,  5659,  5853,  1847,  4616,  2942,  4542,
    2268,  5709,  4445,  1718,  4446,  3062,  1719,  5645,   546,  4460,
    1720,  5382,  3645,  1721,  5710,  1986,  2138,  4452,  1240,  2035,
    4456,  1722,  4457,  3073,  4141,  1880,  4783,  4045,  4784,  1277,
    5070,  4543,  3078,  5552,  5711,  4907,  1723,  2035,  3080,  1724,
    2452,  1241,    16,    17,  2943,  1725,  3089,   543,  1866,  1867,
    1726,   564,  4142,  1855,  1856,  1857,  1729,  3102,  1161,  4463,
    3104,  1860, -1157,  5153,  1987,  5154,  4467,  1863,  4087,    16,
      17,  4046,  2453, -1868,  5155,  4480,  5156,  1739,  2139,  1161,
    5839,  5846, -1867,  5193,  2355,  1864,  2944,  4140,  1740,  3486,
    4544,  5199,    16,    17,  2471,  2472,  2473,  2474,  4815,  4816,
    5200,   760,  1741,   706,   707,  2592,  2593,  4147,  5660,  2140,
    1362,   746,  5661,  1988,  1860,  5157,  5201,  5158,  4545,  1742,
    5646, -2239,  2213,  5195,  5212,  2035,  5213,  5220,   747,  2035,
    1745,  4141,  1746,  4147,  4147,  5210,  5642,   761,  5233,  1315,
    5234,  4705,  1866,  1867,  5248,  1747,  5249,  2475,  2476,  2477,
    1748,  1749,  4143,   748,  1750,  2623,  1863,  4264,  1277,  4142,
    1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  1161,  5211,
    1843,  1844,  1751,  5712,  1864,  5215,  1881,    16,    17,  1882,
    5216,  5719,   566,  1883,  5259,  5722,  5260,  1752,  1401,  4162,
    4163,  4164,  4165,   749,  4167,  4168,  4706, -1157,  4147,  4147,
    2155,  2478,  2479,  1989,  1350,  1753,   565,  5546,  2945,  1863,
    1754,  6009,  1201,  5643,  1755,  1757,  1572,  5621,  4546,  3494,
    2946,  1758,  1759,  1843,  1844,  1990,  1573,  1864,  4047,  4048,
    4049,  1866,  1867,  1760,  3495,   539,  1575,  5644,   706,   707,
    1762,  4284,  4285,  1768,  4287,   542,  4289,  4290,  4291,  4292,
    4293,  4294,  4295, -3467,  4297,   544,  5299,  4302,  4109,  4143,
     567,  4305,  1769,  3947,  4705,  1770,  5662,  1859,  4858,   623,
    5429,  5642,  4556,  2480,  1202,  1161,  1452,  1452,  5050,  5531,
    5052,  5532,  3085,  5055,  1866,  1867,  5059,  1771,  2168,  5062,
    5063,  5396,  1772,  5788,   680,  5571,  4827,  5572,  1161,   680,
    4707,  1843,  1844,  1656,   680,  1885,  5645,   696,  -912,  1773,
    1161,  5794,   545,  1161,  1887,  5575,  1576,  5572,  5552,  4706,
    5604,  1860,  4109,  1660,  2947,  5102,  1774,   566,  5833, -2678,
    5605,  4845,  4109,  1891,  5718,   546,  5572,  1161,  1161,  2698,
    2698,  4908,  3494,  1775,  1845,  2482,  1846,  2481,  5643,  5773,
    1230,  5774,  5802,  1778,  5803,  1574,  5992,  3495,  1779,  1901,
    1650,  1161,  1780,  1161,   715,  1161,  1238,  1161,  1781,  1782,
    5807,  5972,  5644,  5813,   543,  5814,  1861,  1843,  1844,  5832,
    1661,  4170,  5683,  5866,  1783,  5234,  1676,  5479,  5480,  1161,
    5482,  1862,  5950,  5954,  4954,  5572,  2948,  1845,  5956,  1846,
    5572,  5751,  5957,  1662,  5572,   567,  1892,  1906,  1784,  1507,
    1161,  1161,   927,  1787,  3779,  2483,  1863,  1161,  5975,  5646,
    5976,  1161,   706,   707,  1788,  1789,  1161,   720, -3467,  1790,
    1791,  -912,  2400,  1860,  1864,  4868,  5984,  1236,  5985,  1161,
    2482,  5645,  1659,  4328,  6012,  1237,  5572,  4869,  1843,  1844,
    4436,  1792,  1793,  4330,   568,  1203,  1204,  1907,  6013,  1700,
    5572,  1794,  3268, -2051,  1795,  1205,  1847,  4870,  1865,  3354,
    1796,  1797,   515,  1161,  1161,  1845,  4688,  1846,  1798,  1799,
    2484,  3208,  2485,  1800,  5034,  5815,  1206,  2486,  1161,  1908,
    1801,  1866,  1867,  5045,   762,  1926,  1802,  1926,  4514,  1804,
    4871, -2051,   569,  6016, -2051,  5572,  1805,  1806, -2239,  1161,
    2483,  1807,  -172, -2051,  5054,  1808,  1810,  4186,  4187,  1847,
   -2051,  4188,  4189,  4190, -2051,  6019,  3030,  5234,  1863,  6053,
    6102,  5572,  6103,  4983, -2051,  4526,  1811, -2051,  1812,  1813,
    1814, -2051,  1815, -2051,  1816,  1819,  1864,  1820, -2051,  1823,
    1824,  1845,  2487,  1846,  5646, -2051,  1860,   652,  1825,  3823,
    1826, -2051,  1827,  4264,  4264,  5611, -2051,  5612,  5613,  1871,
    1872,  1873,  1874,  1875,  1876,  2484,  4130,  2485,  1828,  1829,
    5807,  1830,  2486,   728,   763,  3030,  5664, -2051,  6113,  4872,
    1886,  1909,  1916, -2712, -2713,  2488,  1161,  1847,  4623,  4688,
   -2051,  1899, -2677,  1866,  1867, -2051,  1161,  1941, -2709,  1944,
    5912,  4417,  -914, -2707,  1945,  4686,  1843,  1844,  1161, -2711,
    1161, -2706,  1845, -2710,  1846, -2051, -2704, -2708,  1963,  1964,
    2956,  1411, -2429,   732,  5336,  4617,  1978,  1979,  1981,  1980,
    5057,  2168,  2168,  2001,  5688,  5689,  2002,  2487,  2007, -2051,
    2066,  1863,  2013,   570,  2022,  2035,  2076,   571, -2051,  4873,
    -939,  1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  1864,
    -914,  1207,  2078,  1847,   759,  2082,  5647,  2088,  2089,  2095,
   -2051,  2096,  2098,  5658,  2100,  2489,  2104,  1843,  1844,  2956,
    2488,  4708,  2121,  3494,  2120,  4774,  2490,  2122,  1167,   572,
   -2051,  3871,  2132,  2144,  2143,  1168, -2051, -2051,  3495,  2147,
    5659,  3031,  2019,  2157,  2160,  2170,  2171,  2354,  2027,  2192,
   -2051,  1169, -2051,  2193,  2199, -2051,  1866,  1867,  2204,   573,
    2202,  1170,  1171,  1172,  2207,  2208,  2212, -3467,  1860,  2224,
    4264,  1173,  2234,  2251,  1847,  2254,  2255,  5980,  2256,  2265,
    6026,  1870,  1871,  1872,  1873,  1874,  1875,  1876,    16,    17,
    2269,  2261,  2312,  2313,  2289,  5359,  2296,  2305,  3032,  6096,
    3031,  3758,  3873,  4874,  4687,  4875,  2354,  2314, -1157,  2323,
    2489,  2329,  -914,  6106,  1843,  1844,  4439,  1843,  1844,  6096,
    1845,  2490,  1846,   794,  2331,  6106,  2333,  2339,  2343,  4709,
    1401,  4147,  2345,  1869,  1870,  1871,  1872,  1873,  1874,  1875,
    1876,  5647,  2347,  2350,  4708,  2364,  2358,  2365,  2367,   706,
     707,  2368,  2369,   760,  5660,  2390,  2393,  3032,  5661,  2398,
     800,   623,  2411,  1863,   623,  1277,  3941,   810,   816,  2413,
    2414,  5325,  2415,  2416,  5328,  5329,  2418,  4828,  2419,  2421,
    2134,  1864,  5642,  2426,  2422,  2434,  2435,  2444,  2451,  -914,
     515,  1845,  2462,  1846,  1926,  2466, -1126,  2494, -1126, -2051,
    2505,  2506,  3875,  2507,  3033,  2206,  2516,  1208,  1209,  1210,
    1211,  2545,  1174,  5980,  2520,  2218,   513,  2655,  1926,  2524,
    2355,  2525,  2577,  2223,  1277,  2193,  1175,  2583,  2587,  2597,
    2608,  2631,  1161,  1161,   816,  1161,  2639,  2661,  1866,  1867,
    2612,  2662,  1847,  2686,  1161,  2687,  1161,   816,  2688,  1161,
    2695,  1868,  4709,   810,  2135,  2696,  2704,  4876,  4877,  5643,
    2708,  2711,  1161,  3033,  1161,  2136,  1161,  4178,  1161,  2739,
    5537,  2741,  2137,    16,    17,  2742,  2762,  1184,  4202,  2355,
    4688,  1161,  1161,  5644,   810,  2777,  2778,  1233,  1845,  5787,
    1846,  1845,  -914,  1846,  2779,  4686,  2780,  2782,  2783,  1298,
    2784, -2286,  2799,  2808,  2138,  2807,  2802,   810,  1161,  2803,
    2806,  2809,  5662,  1847,  2810,  2817,  3710,  4638,  2818,  2819,
    1317,   810,  3824,  2827,  2828,  2829,  2830,  1176,  2332,  2831,
    2332,  2832,  2834,  2835,  2841,  2845,  2842,  3825,  2846,   641,
    1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  2855,  2850,
    -914,  2866,  5645,  1364,   759,  2862,  4206,  2890,  2888,   872,
    1231,  2891,  2892,  3826,  1177,  2904,  2139,   873,   780,   794,
    1235,  2893,  1161,  3494,  2896,  3827,  1161, -1525,  1178,  4526,
    1239,  2905,  2906,  2914,  2918,  3132,  1436,  2921,  3495,  2922,
    2919,  2928,  2933,   515,  1443,  3828,  2930,  2140,  5673,   810,
    2934,  1458,  2941,  2964,   642,   781, -2694,  2987, -3434,  4931,
    1847,  2979,  2990,  1847,  2988,  4878,  2991,  2994,  4209,  4210,
    4211,   810,  2995,  5593,  2169, -1525,  3829,  3055,  3830,  3027,
   -1525,  1484,  4264,  5663,  3044,  3046,  3067,  1240,  3069,  2317,
    5895,  3079,   794,  4212,  1458,  3096,  3103,  3115,  3116,  5493,
    3120,  1413,  1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,
    1241,  3124,  -914,  3127,  3146,  5646,  3130,  3133,  4213, -1525,
    3140,  5658,  3165,  3186,  5932,  4961,  3187,  3204,  1591,  3219,
    1593,   643,  3206,   623,   623,   623,   623,  1601,  1458,  6078,
     810,  3207, -2051,   872,   644,  4689,  3209,  4215,  5659,  4216,
    3218,   873,  3220,   760,  2942,  5051,  2401,  3223,  3224,  3226,
    3236,   706,   707,  3243,  3295,  3239, -1126,  3246,  4217,  5067,
    3256,  3298,  3257, -2051, -1660, -2051,  3261,  3269, -2051, -2051,
    3270,  3271,  3275,  3346,  3299,  3330,  5088,  4219,  3308,  -914,
    2569,   794,  3318,  1666,  4220,  3322,    16,    17,  3323,  2578,
    2943,  1671,  3325,  1674,  5106,  5026,  5107,  5108,  3329,  4221,
    2589,  3342,  3351,   645,   782,  1876, -1157,  3360,  1683,  4222,
    3365, -1837,  3367,  3374,  3381,  1869,  1870,  1871,  1872,  1873,
    1874,  1875,  1876,  4264,  4226,  1785,  2134,  3831,  3386,  1817,
    1821,  3390,  2944,  3401,  3403,  3418,  1161,  1161,  3419,  3832,
    3404,  3426,  3410,  4690,  3452,  2966,  3422,   706,   707,  3461,
    3423,  3427,  5660,  3465,  3428,  3429,  5661,  3473,  5089,  5090,
     515,  5143,  3430,  1657,  3431,  1667,  1668,  1669,  3476,  3477,
    4688,  1670,  5664,  1673,  5105,  3500,  3501,  1843,  1844,  3529,
    5642,  3532,  4230,  3531,  3533,  3536,  3030,  3537,  3572,  2694,
    3565,  3576,  4231,  3590,  3596,  3600,  3603,  3608,  5136,  3607,
    2135,  3609,   515,  3610,  3612,  3613,  3665,  3614,  3668,  3671,
    3675,  2136,   872,  1161,  3677,  3680,  3704,  3681,  2137,  3682,
     873,  2471,  2472,  2473,  2474,  3683,  3684,   872,   796,  4232,
    3705,  5767,  3712, -2429,  2747,   873,  5716,  3685,  2751,  3730,
    2753,  3833,  4233,  3834,  3686,  3687,  3758,  3688,  3689,  3690,
    2138,  3691,  3713,  5598,  2945,  3692,   646,  5643,  3693,  5767,
    1840,  3694,  5647,  4642,  2038,  3695,  2946,  3696,  2966,  3729,
    3697,  1161,  3698,  3699,  2475,  2476,  2477,  3731,  3700,  6110,
    3701,  5644,   647,  4235,  3702,  2785,  4774,  3737,  1161,  4236,
    2956,  3703,  3732,  3738,  1161,  1161,  2795,  1869,  1870,  1871,
    1872,  1873,  1874,  1875,  1876,  3733,  3748,  3749,  3768,  3030,
    5662,  3736,  2139,  3734,  3770,  3771,  2244,  2169,  2169,  3774,
    1161,   810,   794,  3786,  3790,  3794,  3792,  3795,  2478,  2479,
     648,  5316,  3800,  3793,  3796,  3804,  5319,  3797,  3805,  2967,
    4264,  3806,  4264,  2140,  3807,  2134,  3813,  3847,  4241,  3846,
    5645,  1845,  1913,  1846,  3848,  4242,    16,    17,  3369,   810,
    1161,   810,  1161,  3859,   872,   810,   810,  3860,  3869,  3879,
    2947,  3031,   873, -1876,  3936,  3713,  3918,  2354,  5317,  3937,
    3905,  3920,  3906,  3921,  5716,  4689,  4243,  3943,  3944,  3953,
    3955,  3959,    44,  5767,  3945,   810,  3835,  3375,  3971,  2877,
    2480,  4244,  4245,  3975,  3976,  3977,  3978,  3982,  3988,  3989,
    2724,  2723,  3996,  2956,  4246,  4001,  1401,  4010,  3109,  2135,
    4026,  5291,  4027,  4028,  4031,  4040,   -73,  1401,  1401,  4034,
    2136,  4039,  2018,   794,  4064,  4065,  4067,  2137,  4071,   794,
     794,  2029,  2948,  4072,  4098,  4099,  4102,  4103,  4136,  4193,
    4181,  4128, -2186,  4137,  4182,  4183,  4267,  2070,  4271,  4278,
    4310,  4279,  2967,  5646,  4281,  4334,  2080,   649,  4340,  2138,
    4343,  3125,  4350,  1847,  2481,  4344,  4355,  4357,  4980,  4363,
     794,  2093,  3577,  4364,  4365,   650,  4372,  4377,  3582,  5342,
    4383,  4385,  1572,  4690,  3031,  1277,  4392,  4400,  4393,  2039,
    2354,  2106,  1573,  4397,  3836,  4455,  3605,  3606,  4401,  2986,
    4402,  6107,  1575,  4403,  4468,  4491,  5349,  4503,  4466,  4483,
    4478,   794,  2131,  3617,  4479,  4484,  1161,   651,  4493,  4500,
     652,  2139,  4504,  3643,  3644,  4506,  4510,  4507,  4512,  1656,
    4511,  2154,  4513,  4518,  4519,  4532,  4533,  4536,  4555,  4550,
    2355,  4556,  4557,  3837,  1161,  4559,  2174,   653,  4560,  1660,
    4563,  4571,  2140,  4569,  4589,   654,  4590,  2482,  4592,  4591,
    5366,  4593,  4596,  4602,  2182,  2183,  3838,  4619,  4650, -1964,
   -1969,  1161,  4653,  4645,   986,  4672,  4774,  4312,  4654,  3578,
    4657,  4658,  1576,  4667,  4684,  4688,   794,  3706,  3707,  3708,
    3709,  4701,  4703,  4704,  4713,   810,   794,  4715,  4716,  4727,
    4732,  4735,  4737,   623,   794,  4738,  1661,   794,  1277,  4741,
    4739,  4742,  4750,  1003,  4752,  4751,  1572,   794,  4753,  4779,
    5664,  1574,  4761,  4787,  4819,  4824,  1573,  2483,  4829,  1662,
    4825,  4838,  4840,  4850,  4853,  4854,  1575,  4861,  4862,  4899,
    3334,  4473,  1008,  2040,  4909,  1010,  4911,  4116,   752,  4912,
    4914,  3151,  3151,  2670,  3151,  3151,  4915,  2041,  4918,  2042,
    1014,  1015,  4926,  2355,  4958,  4959,  4953,  4927,  1659,  4960,
    4954,  1161,  3164,  4964,  4976,  4207,  4990,  4991,  -295,  4996,
    5001,  5003,  1650,  5017,  2657,  5028,  5029,  5030,  5038,  5036,
    2043,  5056,  2484,  5060,  2485,  5061,  5138,  5141,  5130,  2486,
    5716,  5133,  5144,  5145,  1022,  2044,  2330,  5160,  5151,   794,
    5647,  2338,  5152,  5166,  5167,  3620,  1576,   903,  5178,     4,
    5168,  2348,   623,  1028,  5189,  6010,  5170,  5197,   946,   810,
    5179,  1033,  1034,   810,   794,  5184,  5185,  5196,  2045,  5204,
    5206,  5209,  1161,  5198,  5218,  5219,  5221,  5228,  5235,  5243,
       8,   904,  5236,  5245,  5246,  1574,  2046,  5250,  5255,   810,
    5256,  5284,   810,  5289,  2487,  5293,  5294,  5296,  1161,  5298,
    5303,  5304,  5305,   906,  5306,  5312,  5257,   947,  5318,  5322,
    5321,  5323,    14,   907,  5338,  5339,  5347,   948,  5344,  2412,
    5350,  5260,  5355,  4265,  5367,  1572,  5365,  5369,  5388,  5391,
    5389,    18,  5392,  5398,   515,  1573,  5394,  2488,   908,  5399,
    1572,  5402,  5405,  5418,  4178,  1575,   949,  5428,   794,  5430,
    1573,  5431,  1052,   950,   909,  5439,  5455,  5463,  5470,   910,
    1575,  1054,  1055,  1056,  5438,  5461,  5465,  2047,  5462,  4315,
      23,  5472,  5476,  5633,  2048,  5481,  5483,  5484,  5486,  5487,
    5488,  5491,  3307,  5496,  2049,   911,  5512,  5517,  3313,  5520,
    5039,  5524,  5540,  5538,  5547,   951,  5548,  2050,  5553,  5656,
    5554,  5555,  5557,  5656,  5558,  5568,  5585,  5569,  5574,  5630,
    5576,  5640,  5093,  5591,  5615,  5614,  5631,  1161,  6112,  5586,
    5588,  5620,  1656,  5675,  5634,  1576,  5671,  2489,  2051,  5676,
    5674,  2052,  5682,  5691,  5704,  5721,  5701,  3621,  2490,    31,
    1576,  4213,  1660,  5746,  5700,   952,   953,  2053,  5747,  5748,
    5749,   794,  5757,  5759,  5760,   912,  5772,  5780,  5778,   954,
     794,  5784,  5785,  5782,  1574,  5791,  5786,  5790,  5792,  5793,
    5800,   794,  5798,   913,  5801,  5804,  5407,   868,  5810,  1574,
    5820,   914,  2601,  3622,  5408,  5816,  5823,   871,  5828,  5831,
    5849,  5843,  5857,  1899,  5848,  5886,  5867,   875,   810,  1661,
    5851,  5868,  5925,  5887,  5938,  3151,  3151,  3151,  3151,  5869,
    5872,  5770,  5878,   915,  5894,  5914,  5899,  5946,  5947,  5948,
      43,  5941,  1662,   916,   917,  4203,  5949,  5958,  6005,  5656,
    5953,  4214,  6022,  6023,  5966,   810,  5999,  2660,  6024,  5770,
    6035,  6048,  6056,  6055,  6038,  6062,  6069,  5656,  6046,  6057,
    6068,  1161,  6070,  6075,   545,  6065,  6079,  6077,  6082,    75,
     794,  1659,  6083,   810,   810,  3623,  6097,  6109,  3985,  1678,
    4304,  3499,  5379,   810,  2714,  5377,  5378,   876,  1997,  5589,
     955,  4075,  5717,   810,  5406,  5582,  5580,   986,  5579,  4665,
    5781,  3470,  5742,  5583,  5861,  6011,  5466,  2735,  1913,  5841,
    2203,  4618,  5841,   623,   623,   794,   623,   623,   623,   794,
     810,   794,  1382,  4076,  3491,  5290,   874,   623,  4804,  5595,
    5942,  5940,  4338,  4333,  1501,  2252,  1003,  3624,  4820,  5244,
    3110,  2770,   623,  2678,   810,  3510,  5253,  4586,  1690,  4381,
    4359,  5176,  3679,  1161,  1839,  1489,  3625,  3626,  3201,  4947,
    3198,  3627,  3628,  3629,   956,  1008,   794,  1837,  1010,  3199,
    2978,  3129,  3200,  2248,  5578,  5577,  2381,   794,  5441,  4764,
    4248,  2382,  5346,  1014,  1015,  4917,  5656,  5417,  1161,  5227,
    4922,  3548,  2383,  5898,  3379,  5559,  1503,  1504,  6064,  5974,
    3557,  5422,  1505,  1506,  1401,  6042,  6066,  3540,  5049,  5830,
    1401,  4762,  1507,  5725,  5986,  5125,  5437,  4149,  4150,  4769,
    4152,  4154,  5320,  5841,  6030,  1401,   810,  1022,  5841,  3630,
    5789,  5877,  5889,  3743,  5891,  5841,  1926,  4134,  1508,  4391,
     794,  5896,  5884,  3063,  4470,  2854,  1028,  4902,  4904,  4900,
    1509,  6051,  6017,  2998,  1033,  1034,   766,   767,  5623,  5990,
    6018,  5934,  5931,  5720,  4595,  3077,   810,  4766,  4963,  5123,
    1510,  2011,  4056,   810,   810,   810,  5907,  5908,  3631,  4055,
     794,  5656,   623,  2219,  2863,  1161,  5637,  3674,  5893,  3389,
    5926,  5504,  1161,  3490,  2999,  3029,  4374,   794,  3801,  4839,
     795,  5409,  2178,  1511,  5410,   957,  3924,  4572,   794,   794,
    4311,  5841,  1409,  5549,  4573,  5991,   810,  4127,  4017,  1911,
    2177,  3979,  4826,  5939,  4913,  3882,  1512,  1513,  2133,  1514,
    4574,  3880,  2658,  4774,  3000,  4495,  2595,  1515,  1516,  1517,
    4575,  4576,  4577,  2504,  5841,  1052,  5841,  5841,  2913,  2125,
    4578,  2384,  2910,  5478,  1054,  1055,  1056,  1518,  2441,  2126,
    2127,  5981,  5302,  2128,  5982,  4942,  5864,  2130,   810,  5247,
    5865,  2903,  2385,  2450,  3592,  3933,  2924,  2386,  4490,  4125,
    5021,  5020,  4489,  5413,  5809,  5510,  5242,  5997,  5404,  4126,
     794,  5424,  1519,  1427,  2172,  5024,  2185,  4774,   777,  3584,
    3766,   768,  2392,  5841,  3799,  2691,  5841,  5237,  2387,  4160,
     794,  5252,  4939,  5971,  3970,  1290,  1586,  1520,  3123,  3467,
    2768,  1592,  3468,  1521,  4011,  2179,   792,  1282,  1161,  1285,
    3504,  5511,  5427,  2853,  4843,  6063,  5307,  5485,  6076,  1401,
    2388,  6111,  3776,  5841,   810,  6108,  1764,  4923,  1522,  1523,
    1524,  3480,  3922,  1691,     4,  3994,  4000,  4936,  1243,  3995,
    3448,  3183,  3345,   946,  3151,  1244,  1200,  2870,  2389,  5407,
    1905,  4673,  5027,  1525,  1526,  3664,  3972,  5408,  4066,  3092,
     810,  5539,  2703,  4360,  4775,     8,  1331,  2081,   786,   770,
     771,  4579,  2038,   772,     0,     0,     0,  6045,     0,     0,
       0,     0,  1161,     0,  4341,  4580,     0,     0,     0,  1591,
       0,  3126,   947,     0,     0,     0,  3128,    14,     0,     0,
       0,  1527,   948,  1528,  1529,     0,     0,     0,   794,   794,
       0,     0,     0,     0,     0,  3143,    18,     0,     0,  1530,
       0,     0,  3152,  3152,     0,  3152,  3152,     0,     0,     0,
       0,   949,     0,     0,     0,     0,     0,     0,   950,     0,
     810,     0,     0,   794,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   794,     0,    23,  1531,     0,  1532,     0,
    3188,     0,     0,     0,    16,    17,     0,     0,     0,  3193,
       0,  4581,  3195,     0,     0,     0,     0,     0,     0,     0,
     951,  1533,     0,     0,     0,     0,  4582,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1534,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1535,  1536,     0,     0,     0,
       0,     0,     0,  4583,    31,     0,     0,     0,     0,     0,
     952,   953,     0,     0,  3001,     0,     0,  4584,     0,     0,
       0,     0,     0,     0,   954,     0,     0,  1537,     0,     0,
       0,     0,     0,     0,     0,     0,  1538,     0,     0,     0,
       0,     0,     0,     0,  3002,  3003,     0,  3004,  3005,  3006,
    3007,  3008,     0,  3009,  3010,  3011,  3012,  3013,  3014,  3015,
    3016,     0,  3017,  3018,  3019,  3960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3151,     0,  1539,  1540,  1541,    43,     0,  2039,     0,     0,
    1542,  1543,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,   794,     0,     0,     0,  1544,  1545,   794,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    75,  3328,     0,     0,     0,     0,
       0,  1546,  1547,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5409,   955,     0,  5410,     0,     0,
    1548,     0,     0,     0,     0,     0,  5411,     0,     0,     0,
    4714,  3020,  3021,  4717,     0,     0,  4723,  4724,  4725,  4726,
       0,  4728,  4729,  4730,  4731,     0,  4733,  4734,     0,  4736,
       0,     0,     0,  4740,     0,     0,     0,  4743,  4744,  4745,
    4746,     0,  4748,  4749,     0,     0,     0,     0,  4754,  4755,
    2655,     0,  4759,  4760,     0,     0,     0,     0,     0,     0,
       0,     0,   810,   810,   794,     0,     0,     0,     0,   956,
       0,     0,   810,     0,     0,     0,  3152,  3152,  3152,  3152,
       0,     0,     0,     0,  3414,  3415,  4094,  1913,     0,     0,
       0,  2040,  1550,     0,     0,  1551,     0,  1401,  1552,     0,
       0,  1401,     0,     0,     0,  2041,     0,  2042,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,     0,  3453,
     623,  1553,     0,   946,     0,     0,     0,     0,     0,     0,
       0,     0,   623,     0,     0,     0,     0,     0,  2043,  4195,
    1555,  4196,  4197,     0,     0,     8,     0,     0,     0,     0,
       0,     0,     0,  2044,     0,     0,     0,     0,     0,     0,
       0,  -334,   794,  -334,     0,  4198,     0,  4199,     0,     0,
       0,     0,   947,  4200,     0,     0,     0,    14,  2018,  3482,
       0,     0,   948,   810,  3489,   794,  2045,     0,     0,     0,
       0,     0,     0,     0,     0,  2193,    18,     0,     0,     0,
       0,     0,     0,     0,  2046,     0,     0,  4201,     0,     0,
     957,   949,     0,   794, -1276,     0,     0,     0,   950,  5913,
    3517,     0,     0,     0,   794,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    23,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,  4202,  3545,
    3546,  3547,   794,     0,   623,     0,   623,     0,     0,     0,
     951,   794,  3559,   623,     0,   794,     0,     0,     0,     0,
       0,   794,     0,     0,     0,     0,     0,     0,     0,  4203,
       0,     0,     0,     0,     0,  2047,   794,     0,     0,     0,
    3580,     0,  2048,  1401,  2154,  3585,     0,     0,     0,     0,
       0,     0,  2049,     0,    31,     0,     0,     0,     0,  3779,
     952,   953,     0,     0,  4204,  2050,     0,     0,  4205,     0,
       0,     0,     0,     0,   954,  4375,  4206,     0,     0,  4207,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2051,     0,     0,  2052,
       0,     0,  4208,     0,     0,     0,     0,   810,     0,     0,
    1900,     0,     0,   794,     0,  2053,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  6041,     0,     0,     0,     0,
       0,   666,     0,  -334,     0,    43,     0,     0,  4209,  4210,
    4211,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4212,     0,     0,     0,     0,     0,     0,
       0,     0,  3728,     0,    75,     0,     0,     0,     0,     0,
       0,  3735,     0,     0,     0,     0,     0,     0,  4213,     0,
       0,     0,     0,     0,     0,   955,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4214,
       0,     0,     0,     0,     0,     0,     0,  4215,     0,  4216,
       0,     0,     0,     0,  1503,  4316,     0,     0,     0,  6099,
    1505,  1506,     0,  3759,     0,  6101,     0,     0,  4217,     0,
    1507,     0,  3767,     0,  3769,  4218,     0,     0,     0,     0,
     794,     0,  -334,   794,     0,     0,   810,  4219,   810,   810,
       0,     0,     0,     0,  4220,     0,  1508,     0,     0,   956,
    5064,     0,   810,     0,     0,  3152,     0,     0,  1509,  4221,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4222,
       0,     0,  5091,  4223,  4224,     0,     0,     0,  1510,     0,
    4225,     0,     0,     0,  4226,     0,     0,     0,     0,     0,
       0,     0,  4227,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1511,  4228,     0,     0,     0,     0,     0,     0,   810,
       0,   810,     0,     0,     0,     0,  4603,  4604,     0,     0,
       0,     0,     0,     0,  1512,  1513,     0,  1514,  4229,     0,
       0,     0,  4230,     0,     0,  1515,  1516,  1517,     0,     0,
       0,     0,  4231,     0,     0,     0,     0,  1401,  1401,     0,
       0,     0,     0,     0,     0,  1518,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4232,
     957,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1519,     0,  4233,     0,  4234,     0,     0,     0,     0,     4,
       0,     0,     0,     0,     0,     0,     0,     0,   946,  1245,
       0,     0,     0,     0,     0,  1520,     0,     0,     0,     0,
     672,  1521,     0,     0,     0,     0,  3907,     0,     0,     0,
       8,     0,     0,  4235,     0,  1217,     0,     0,     0,  4236,
       0,     0,  2193,  1246,  1247,     0,  1522,  1523,  1524,     0,
       0,     0,     0,  1248,     0,     0,     0,   947,     0,     0,
    3935,  -814,    14,     0,     0,     0,  4237,   948,    10,    11,
       0,  4317,  1526,     0,     0,     0,     0,  4238,  4239,  4240,
       0,    18,     0,     0,     0,     0,   794,     0,  3967,     0,
      16,    17,     0,     0,     0,  4202,   949,     0,  4241,   810,
     810,  3152,     0,   950,     0,  4242,     0,     0,     0,     0,
       0,     0,    16,    17,     0,   810,     0,  1249,     0,  1527,
      23,  1528,  1529,     0,     0,     0,     0,     0,     0,     0,
       0,  1250,     0,     0,     0,     0,  4243,  1530,     0,     0,
       0,     0,     0,     0,     0,   951,     0,  1233,     0,     0,
       0,  4244,  4245,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4246,     0,     0,  4247,     0,  2601,
       0,     0,     0,  4206,  1531,     0,  1532,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,  1251,   952,   953,     0,     0,  1533,
       0,     0,     0,     0,     0,     0,     0,  1252,     0,   954,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1534,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1276,  1535,  1536,  4209,  4210,  4211,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   623,     0,     0,     0,     0,   794,     0,     0,
    4212,     0,     0,     0,     0,  1537,     0,  1253,   794,     0,
      43,     0,   794,     0,  1538,     0,     0,     0,   810,     0,
       0,     0,  -567,     0,     0,  4213,  2660,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   810,   810,     0,     0,     0,     0,     0,     0,    75,
       0,     0,     0,     0,  4215,     0,  4216,     0,     0,     0,
    1539,  1540,  1541,     0,     0,     0,     0,     0,  1542,  1543,
     955,     0,     0,     0,  1254,  4217,     0,     0,     0,     0,
       0,     0,     0,  1255,     0,  1544,  1545,     0,     0,     0,
       0,   810,     0,     0,  4219,  1256,     0,     0,     0,     0,
       0,  4220,     0,     0,     0,     0,  1257,  4269,     0,  1546,
    1547,     0,     0,     0,     0,     0,  4221,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4222,  -567,  4318,     0,
    1258,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4226,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2429,  1259,     0,     0,  1260,     0,  1261,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4339,     0,     0,  4965,     0,     0,
       0,     0,  4977,     0,  1262,  1263,     0,     0,     0,  4230,
       0,     0,  1264,  1265,   794,     0,     0,     0,     0,  4231,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1266,
    1550,     0,     0,  1551,  3143,     0,  1552,     0,     0,  2183,
     810,   810,   810,   810,     0,     0,   794,     0,     0,     0,
       0,  1267,     0,     0,     0,     0,  4232,     0,     0,  4320,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4233,
       0,     0,  1268,     0,     0,     0,     0,     0,  1555,     0,
    5121,     0,  4196,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4198,     0,     0,     0,
    4235,     0,     0,     0,  4200,     0,  4236,  5075,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1269,     0,
       0,     0,     0,     0,     0,     0,  2193,     0,     0,     0,
       0,     0,  1270,     0,     0,     0,     0,     0,  5122,     0,
       0,     0,  4465,  1271,     0,     0,  1272,  1273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1274,     0,     0,     0,  4241,     0,     0,     0,     0,
       0,     0,  4242,     0,    16,    17,     0,     0,     0,  4202,
       0,  4499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   810,     0,  1275,     0,     0,
       0,     0,     0,  4243,  1276,  2601,     4,     0,     0,     0,
    4203,   810,   810,   810,   810,   946,  4527,     0,  4244,  4245,
       0,     0,     0, -3216,     0,  1277,     0,     0,     0,     0,
       0,  4246,  4537,  4538,     0,     0,     0,     8,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4205,
       0,     0,     0,     0,     0,     0,     0,  4206,     0,     0,
       0,  4558,     0,     0,   947,     0,     0,  4568,     0,    14,
       0,     0,     0,     0,   948, -3216,     0,     0,     0,     0,
       0,  1278,     0,  4208,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -814,
       0,   810,     0,   949,     0,     0,     0,   794,   794,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,  4209,
    4210,  4211,   623,     0,     0,     0,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   794,   794,
       0,     0,     0,     0,  4212,  4647,     0,     0,     0,     0,
       0, -1126,   951, -1126,     0,     0,     0,     0,     0,     0,
       0,  5261, -1126,     0, -1126,     0,     0,     0,     0,  4213,
       0,     0,     0,  5821,  5822,     0,  5824,  5825,  5826,  5827,
    2193,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4214,  2193,     0,     0,     0,     0,    31,     0,  4215,     0,
    4216,     0,   952,   953,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   954,     0,     0,  4217,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,  4202,     0,     0,     0,     0,  4219,    16,
      17,     0,     0,     0,  4202,  4220,     0,     0,     0,     0,
       0,     0,     0,     0,  4605,     0,  4606,     0,  4607,     0,
    4221,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4222,     0,     0,     0,  4223,     0,     0,    43,     0,     0,
    4758,  4225,     0,     0,     0,  4226,     0,  5906,     0,     0,
    5909,     0,     0,     0,     0,  4772,     0,     0,  5917,     0,
       0,     0,     0,  5927,     0,     0,     0,     0,     0,     0,
       0,  4206,     0,  4228,     0,  5357,    75,     0,  2193,     0,
       0,     0,  4206,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   955,     0,     0,
       0,     0,     0,  4230,     0,     0,  4801,     0,     0,     0,
       0,  3728,     0,  4231,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,  4202,     0,  4209,  4210,  4211,     0,  3759,     0,     0,
    4821,     0,     0,  4823,  4209,  4210,  4211,     0,     0,     0,
    4232,     0,     0,     0,  1675,     0,     0,     0,  4212,     0,
     810,     0,     0,  4233,     0,  4234,     0,     0,     0,  4212,
       0,   956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4213,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4213,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4235,     0,     0,     0,     0,  4206,
    4236,     0,  4215,     0,  4216,     0,     0,     0,     0,     0,
       0,     0,     0,  4215,     0,  4216,     0,     0,     0,     0,
       0, -1126,     0,  4217,     0,     0,     0,     0,     0,     0,
       0,     0, -1126,     0,  4217,     0,     0,     0,     0,     0,
       0,     0,  4219,     0,     0,     0,     0,     0,     0,  4220,
       0,     0,  4897,  4219,     0,     0,     0,     0,     0,  4241,
    4220,  4209,  4210,  4211,  4221,     0,  4242,     0,     0,  4906,
       0,     0,     0,     0,  4222,  4221,     0,     0,     0,     0,
    4527,     0,     0,     0,     0,  4222,  4212,     0,     0,  4226,
       0,     0,     0,  4499,     0,     0,     0,  4243,  3967,  4925,
    4226,     0,   957,     0,   810,   810,     0,     0,     0,     0,
    4932,  4213,  4244,  4245,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5541,  4246,  1233,  1913,     0,     0,
       0,     0,     4,     0,     0,     0,  2601,     0,     0,     0,
    4215,   946,  4216,     0,     0,     0,     0,  4230,     0,  4952,
       0,     0,     0,     0,     0,     0,     0,  4231,  4230,     0,
       0,  4217,     0,     8,     0,     0,     0,     0,  4231,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4219,     0,     0,     0,     0,     0,     0,  4220,   794,     0,
     947,  4772,     0,   794,  4232,    14,     0,     0,     0,     0,
     948,     0,  4221,     0,     0,  4232,     0,  4233,     0,     0,
       0,     0,  4222,     0,    18,     0,     0,     0,  4233,     0,
       0,     0,     0,     0,     0,     0,     0,  4226,     0,   949,
       0,  3580,     0,     0,     0,     0,   950,     0,     0,     0,
    2660,     0,     0,     0,     0,     0,     0,  5635,  4235,     0,
       0,     0,     0,    23,  4236,     0,     0,     0,   810,  4235,
       0,     0,     0,     0,     0,  4236,     0,     0,     0,     0,
       0,     0,  4772,     0,     0,     0,     0,     0,   951,     0,
       0,     0,     0,     0,     0,  4230,     0,     0,     0,  4952,
       0,     0,     0,     0,     0,  4231,     0,     0,     0,     0,
    5066,     0,  2601,     0,     0,     0,     0,     0,   794,     0,
       0,     0,     0,  4241,  5084,     0,     0,     0,     0,     0,
    4242,     0,    31,     0,  4241,     0,   810,  4952,   952,   953,
       0,  4242,  4232,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   954,     0,     0,  4233,     0,  4952,     0,     4,
       0,  4243,     0,  4772,  5126,     0,     0,     0,   946,  5137,
       0,     0,  4243,     0,     0,   623,  4244,  4245,     0,     0,
    5147,     0,     0,     0,     0,     0,     0,  4244,  4245,  4246,
       8,     0,     0,     0,     0,     0,  4235,     0,     0,     4,
    4246,     0,  4236,     0,     0,     0,     0,     0,   946,  5161,
       0,     0,     0,    43,     0,     0,     0,   947,     0,     0,
       0,     0,    14,     0,     0,     0,     0,   948,     0,     0,
       8,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    75,     0,     0,     0,   949,   947,     0,     0,
       0,  4241,    14,   950,     0,     0,     0,   948,  4242,     0,
       0,     0,     0,   955,     0,     0,     0,     0,     0,     0,
      23,    18,     0,     0,     0,     0,  5860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   949,     0,     0,  4243,
       0,     0,     0,   950,     0,   951,     0,     0,     0,     0,
       4,  4499,     0,     0,  4244,  4245,     0,     0,     0,   946,
      23,     0,     0,  2601,     0,     0,     0,  4246,     0,     0,
    3782,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     8,  3759,     0,     0,   951,     0,   956,     0,    31,
    4568,     0,     0,     0,     0,   952,   953,     0,     0,     0,
     810,     0,     0,     0,  4772,     0,     0,     0,   947,   954,
       0,     0,   794,    14,     0,     4,     0,     0,   948,     0,
       0,  3728,     0,     0,   946,     0,     0,     0,     0,    31,
       0,  3728,    18,     0,     0,   952,   953,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  -549,   949,     0,   954,
       0,     0,     0,     0,   950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      43,    23,     0,   947,     0,     0,     0,     0,  1686,     0,
       0,  5327,     0,   948,     0,     0,  4772,  4952,  4772,     0,
     810,  4772,     0,  4952,     0,     0,   951,    18,  4772,  4772,
       0,     0,     0,  4952,     0,     0,     0,     0,     0,    75,
      43,     0,   949,     0,     0,     0,     0,     0,     0,   950,
       0,     0,     0,     0,     0,     0,     0,  1163,   957,     0,
     955,     0,     0,     0,     0,     0,  1687,     0,  4772,     0,
      31,     0,  4952,     0,  4952,     0,   952,   953,     0,    75,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
     954,   951,     0,  5356,     0,     0,   794,     0,     0,  5363,
     955,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5372,  4023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   956,  1688,     0,     0,     0,     0,
       0,   952,   953,     0,     0,     0,     0,     0,     0,     0,
       0,    43,     0,     0,     0,   954,     0,  5180,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      75,     0,     0,     0,     0,     0,     0,     0,  5421,     0,
       0,     0,  4897,     0,     0,     0,     0,     0,     0,     0,
       0,   955,  4952,     0,     0,     0,  1689,     0,     0,     0,
       0,  5434,  5434,  5436,     0,  1163,  4772,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   623,     0,  -549,     0,     0,   623,     0,
       0,     0,  3580,     0,  3580,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   955,     0,     0,     0,
       0,     0,     0,     0,  5490,   956,     0,     0,     0,     0,
       0,  5495,     0,     0,  4772,  4772,     0,     0,  4772,     0,
       0,     0,  4772,     0,  5507,     0,     0,     0,     0,     0,
    2601,     0,     0,   794,     0,   957,     0,     0,     0,  4952,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5536,     0,     0,
     956,     0,     0,     0,     0,   794,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5434,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
    1738,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,   957,     0,  3728,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4772,  1738,     0,     0,     0,  4772,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   794,     0,
       0,     0,     0,  5639,     0,     0,     0,     0,     0,     0,
    5670,   957,     0,     0,     0,     0,     0,     0,  5677,  5681,
       0,     0,     0,     0,     0,     0,  1163,  1163,  1163,  1163,
       0,     0,  1738,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,  5699,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5434,     0,
       0,     0,  5723,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5733,     0,  5734,   623,     0,     0,     0,
       0,     0,   623,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5753,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   810,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2601,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,  1738,     0,     0,  5858,     0,     0,   794,     0,     0,
     623,   623,     0,     0,  4568,  4568,     0,     0,     0,     0,
       0,     0,     0,  5434,     0,  5434,  5434,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5879,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5885,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5681,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5699,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   810,     0,     0,     0,     0,  1738,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,  5434,  5434,     0,     0,  5434,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2601,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   810,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5998,     0,
       0,     0,     0,     0,     0,   623,     0,     0,     0,     0,
       0,  6008,     0,     0,     0,     0,     0,     0,     0,  5434,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   810,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  6043,  6043,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2601,
       0,     0,     0,   810,     0,     0,     0,     0,     0,   810,
       0,     0,     0,  2601,     0,     0,     0,     0,  1163,  2601,
       0,     0,     0,     0,     0,  2601,     0,     0,     0,     0,
       0,  1163,  1163,     0,     0,     0,     0,  1163,     0,     0,
       0,  1163,  1163,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  1163,  1738,     0,     0,     0,  1163,     0,
    1163,  1163,  1163,  1163,  1163,     0,  1163,     0,     0,  1738,
    1738,     0,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,     0,  1163,  1163,     0,  1163,  1163,  1163,     0,  1163,
    1163,  1163,     0,     0,     0,     0,  1163,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,  1163,  1163,     0,
    1163,  1163,  1163,     0,     0,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,     0,  1163,  1163,  1163,  1163,  1163,  1163,     0,
    1163,  1163,     0,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
       0,     0,  1163,  1163,  1163,  1163,     0,  1163,  1163,  1163,
       0,  1163,     0,  1163,     0,  1163,     0,     0,     0,  1163,
    1163,  1163,     0,     0,  1163,  1163,  1163,  1163,  1163,     0,
    1163,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,  1163,  1163,  1163,  1163,     0,     0,
       0,     0,     0,     0,     0,  1163,  1163,  1163,     0,  1163,
    1163,  1163,  1163,  1163,  1163,     0,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,     0,     0,     0,  1163,     0,     0,
       0,     0,  1738,     0,     0,     0,     0,     0,     0,  1738,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1738,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,  1738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1129,
       0,     0,     0,  1738,  1738,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1295,  1163,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1738,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,  1738,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,  1163,
       0,  1163,     0,     0,     0,     0,     0,  1163,     0,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1488,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1640,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1701,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1738,     0,  1738,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1728,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,  1738,     0,     0,  1738,  1738,
    1738,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1838,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2036,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,  1163,     0,  1163,     0,  1163,
    1163,  1163,  1163,  1163,  1163,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,  1163,     0,     0,  1163,
    1163,  1163,  1163,     0,     0,  1163,  1163,     0,     0,  1163,
       0,  1163,     0,  1163,     0,  1163,     0,     0,     0,  1163,
       0,  2190,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,  1163,  1163,  1163,  1163,  1163,     0,     0,  1163,  1163,
    1163,     0,  1163,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,  2230,     0,  1163,  2231,     0,  1163,     0,  1163,  1163,
    1163,     0,     0,  1163,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,  1163,
       0,  1163,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,  1163,  1738,  1163,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1738,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2395,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2425,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2440,
       0,     0,     0,  2445,     0,  2447,     0,     0,     0,     0,
       0,     0,     0,     0,  2463,  2464,     0,     0,     0,     0,
    2493,     0,  2496,  2497,  2498,  2499,  2500,     0,  2502,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,  2510,
       0,  2513,     0,     0,  2514,  2515,     0,  2517,  2518,     0,
       0,  2521,  2522,  2523,     0,     0,  1163,     0,  2528,     0,
       0,  2534,     0,  1738,     0,     0,     0,     0,     0,  2538,
    2539,     0,  2542,     0,  2544,     0,     0,  2546,  2547,  2548,
    2551,  2552,  2553,  2554,     0,  2555,  2556,  2557,  2558,  2559,
       0,     0,  2566,  2567,     0,     0,  2571,  2572,  2573,     0,
       0,     0,     0,     0,  2579,  2580,  2581,     0,     0,  2584,
    2585,  2586,     0,  2588,     0,  2590,     0,  2591,     0,     0,
       0,  2594,  2534,  2596,     0,     0,  2602,  2603,  2604,  2605,
    2606,     0,  2607,     0,     0,     0,     0,     0,     0,  2611,
       0,     0,     0,     0,     0,  1163,  2616,  2617,  2618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2716,     0,     0,     0,     0,  2190,
       0,     0,     0,     0,     0,     0,     0,     0,  1738,  2190,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2789,     0,     0,     0,
       0,     0,     0,     0,  1163,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2820,     0,  2825,     0,  1163,     0,
    1163,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
    2847,     0,  1738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,  1163,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,  1163,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1738,
    1163,  1163,     0,     0,     0,  2920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1738,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3105,  3106,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1295,     0,  3203,     0,     0,     0,     0,     0,     0,
       0,  3210,  3211,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3263,  3265,  3267,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
    1163,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,  1163,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,  1163,     0,  1163,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
    3353,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3357,     0,  3358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3385,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3391,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3411,     0,     0,  2190,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,  3446,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3586,     0,  2190,     0,     0,     0,
       0,     0,     0,  1163,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3676,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
    1738,  1163,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3821,     0,     0,  3822,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3849,     0,     0,     0,  3851,
       0,  3852,  3853,  3854,  3855,  3856,  3857,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3861,     0,  3862,     0,
       0,  3863,  3864,  3865,  3866,     0,     0,  3867,  3868,     0,
       0,  3870,     0,  3872,     0,  3874,     0,  3876,     0,     0,
       0,  3878,     0,     0,     0,     0,     0,     0,     0,  2548,
       0,  3881,     0,  2548,     0,  3884,  3885,  3886,     0,     0,
    3887,  3888,  3890,     0,  3891,     0,     0,  3892,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3893,     0,     0,     0,     0,     0,     0,     0,  3900,     0,
    3901,  3902,  3903,     0,     0,  3904,     0,     0,     0,     0,
       0,  3908,     0,  1163,     0,     0,  3919,     0,     0,     0,
       0,     0,     0,     0,     0,  3923,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1738,  3932,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,  3942,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2190,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2190,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,  2190,     0,  2825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,  4121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4277,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,  1738,  1738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1738,     0,
       0,     0,     0,     0,     0,     0,     0,  4380,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4386,
       0,     0,  4387,     0,     0,     0,  1738,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,  4405,  4406,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4430,     0,  4431,     0,  4432,     0,  4433,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4458,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4481,
    4482,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,  3586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4501,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2190,  2190,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2190,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2825,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4644,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3586,     0,  4656,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4856,  4857,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4864,     0,  4865,     0,     0,  4866,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4886,     0,  4887,     0,  4888,     0,  4889,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4895,  4896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2825,     0,     0,     0,  2825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5139,  5140,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2825,     0,     0,
       0,     0,     0,  2190,  2190,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5295,
       0,  5297,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5397,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2186,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2187,   986,   987,   988,   989,     0,     0,
    5797,     0,     0,     0,     0,   990,   991,     0,   992,     0,
       0,     0,     0,     0,     0,   993,   994,     0,     0,   995,
     996,   997,   998,     0,   999,  1000,     0,  1001,  1002,     0,
       0,     0,     0,  1003,     0,     0,     0,  2188,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1011,  1012,  1013,     0,
    1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,
       0,     0,  1838,     0,     0,  1019,     0,  1020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1022,     0,     0,  5892,     0,  1023,
    1024,     0,  1025,     0,     0,     0,     0,     0,  1026,     0,
    1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,
    1032,  1033,  1034,     0,  1035,  2189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,
       0,     0,     0,     0,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,     0,     0,  1045,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2825,     0,     0,  1046,     0,     0,
       0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,
       0,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1057,  1058,  1059,     0,     0,     0,     0,
       0,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,  1062,    58,    59,
      60,    61,    62,    63,  1063,    65,    66,    67,    68,    69,
      70,    71,  1064,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,  1065,    88,
     590,    90,    91,    92,    93,    94,   591,  1066,    96,  1067,
    1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,  1074,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,  1080,   176,   177,   600,   179,
     180,  1081,   182,  1082,   601,   185,   186,   602,   188,   189,
     603,  2825,   191,   192,   193,  1083,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,  1084,  1085,   217,
     218,   219,  1086,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
    1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,
    1092,   269,   270,   271,   272,   273,   274,   275,   276,   277,
    1093,  1094,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,  1095,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,  1096,   308,   309,   310,   311,   312,  1097,  1098,   315,
     608,   316,   609,   318,   319,  1099,   321,   322,   323,   324,
     325,   326,  1100,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,  1101,   358,   612,   360,   361,   362,  1102,  1103,
     365,   366,   613,   368,   369,  1104,   371,   372,   373,   374,
     375,   376,  1105,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,  1106,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,  1113,   448,  1114,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  1115,  1116,   619,  1117,   463,
     464,   465,     0,   466,   620,   468,  1118,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1119,  1120,     0,     0,
       0,     0,  1121,     0,     0,     0,  2625,  1122,     0,     0,
       0,  1123,  1124,     0,     0,  1125,  1126,   985,   986,   987,
     988,   989,     0,     0,     0,     0,     0,     0,     0,   990,
     991,     0,   992,     0,     0,     0,     0,     0,     0,   993,
     994,     0,     0,   995,   996,   997,   998,     0,   999,  1000,
       0,  1001,  1002,     0,     0,     0,     0,  1003,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,
    1017,  1018,     0,     0,     0,     0,     0,     0,     0,  1019,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,     0,
       0,     0,     0,  1023,  1024,     0,  1025,     0,     0,     0,
       0,     0,  1026,     0,  1027,     0,     0,  1028,     0,     0,
    1029,     0,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,
       0,  1040,     0,     0,     0,     0,     0,     0,  1041,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1042,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,     0,
       0,  1045,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1046,     0,     0,     0,     0,     0,  1047,  1048,     0,
    1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1057,  1058,  1059,
       0,     0,     0,     0,     0,  1060,     0,  1061,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,  1062,    58,    59,    60,    61,    62,  2626,  1063,    65,
      66,    67,    68,    69,    70,    71,  1064,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,  1065,    88,   590,    90,    91,    92,    93,    94,
     591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,
    1073,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,  1074,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,  1075,  1076,  1077,
     594,  1078,  1079,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,  1080,
     176,   177,   600,   179,   180,  1081,   182,  1082,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,  1083,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,  1084,  1085,   217,   218,   219,  1086,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,  1087,   259,  1088,   261,   262,   263,
     264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,
     274,   275,   276,   277,  1093,  1094,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,  1095,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,  1096,   308,   309,   310,   311,
     312,  1097,  1098,   315,   608,   316,   609,   318,   319,  1099,
     321,   322,   323,   324,   325,   326,  1100,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,  1101,   358,   612,   360,
     361,   362,  1102,  1103,   365,   366,   613,   368,   369,  1104,
     371,   372,   373,   374,   375,   376,  1105,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,  1111,  1112,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,  1113,   448,  1114,
     450,   451,   452,   453,   454,   455,   456,   457,   458,  1115,
    1116,   619,  1117,   463,   464,   465,     0,   466,   620,   468,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1119,  1120,     1,     2,     0,     0,  1121,     0,     0,     0,
       0,  1122,     0,     0,     0,  1123,  1124,     0,     0,  1125,
    1126,     0,     3,     0,     4,     0,     5,     0,     6,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     8,     0,     0,     9,     0,
      10,    11,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    14,     0,     0,
       0,     0,     0,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,    18,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
      22,     0,     0,     0,     0,    23,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
      26,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      27,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,    30,    31,    32,     0,    33,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,    35,     0,
       0,     0,    36,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,    40,     0,
      41,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    43,    44,     0,     0,     0,
       0,     0,     0,    45,    46,    47,    48,     0,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,     0,    88,    89,
      90,    91,    92,    93,    94,     0,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,     0,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
       0,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     0,   466,   467,   468,   469,     0,     1,     2,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   470,     3,     0,     4,
       0,     5,     0,     6,     0,     0,     0,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       8,     0,     0,     9,     0,    10,    11,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    14,     0,     0,     0,     0,     0,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,    18,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,    22,     0,     0,     0,     0,
      23,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    25,    26,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,    30,    31,
      32,     0,    33,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,    35,     0,     0,     0,    36,     0,     0,
       0,    37,    38,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    39,     0,    40,     0,    41,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      43,    44,     0,     0,     0,     0,     0,     0,    45,    46,
      47,    48,     0,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,     0,    88,    89,    90,    91,    92,    93,    94,
       0,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,     0,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,     0,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     0,   466,   467,   468,
     469,     0,     1,     2,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   470,     3,     0,     0,     0,     5,     0,     6,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     9,     0,
      10,    11,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
      26,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      27,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,    30,     0,    32,     0,    33,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,    35,     0,
       0,     0,    36,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,    40,     0,
      41,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,     0,     0,     0,
       0,     0,     0,    45,    46,    47,    48,     0,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,     0,     0,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,     0,    88,    89,
      90,    91,    92,    93,    94,     0,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,     0,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
       0,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     0,   466,   467,   468,   469,   985,   986,   987,   988,
     989,     0,     0,     0,     0,     0,     0,     0,   990,   991,
       0,   992,     0,     0,     0,     0,   470,     0,   993,   994,
       0,     0,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    1020,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
    1030,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,    35,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,    42,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
      44,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,     0,   985,   986,   987,   988,   989,  1119,
    1120,     0,  2531,     0,     0,  1121,   990,   991,     0,   992,
    1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  1020,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2532,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,  2533,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  1113,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,     0,   466,   620,   468,  1118,     0,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,  1700,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  2822,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,  2823,     0,     0,     0,
       0,     0,  1019,     0,  1020,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,  1030,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,     0,   985,   986,
     987,   988,   989,  1119,  1120,     0,     0,     0,     0,  1121,
     990,   991,     0,   992,  1122,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,  3262,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  1020,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,  1029,  1030,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  1113,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,     0,   466,   620,
     468,  1118,     0,     0,     0,     0,   985,   986,   987,   988,
     989,  1119,  1120,     0,     0,     0,     0,  1121,   990,   991,
       0,   992,  1122,     0,     0,     0,  1123,  1124,   993,   994,
    1125,  1126,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,  3264,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    1020,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
    1030,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,     0,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,     0,   985,   986,   987,   988,   989,  1119,
    1120,     0,     0,     0,     0,  1121,   990,   991,     0,   992,
    1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,  3266,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  1020,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,     0,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  1113,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,     0,   466,   620,   468,  1118,     0,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,     0,     0,     0,     0,
       0,     0,  1019,     0,  1020,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,  1030,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,     0,   985,   986,
     987,   988,   989,  1119,  1120,     0,     0,     0,     0,  1121,
     990,   991,     0,   992,  1727,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  1020,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,  1029,  1030,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  2394,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,     0,   466,   620,
     468,  1118,     0,     0,     0,     0,   985,   986,   987,   988,
     989,  1119,  1120,     0,     0,     0,     0,  1121,   990,   991,
       0,   992,  1122,     0,     0,     0,  1123,  1124,   993,   994,
    1125,  1126,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    3877,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
    1030,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,     0,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,     0,   985,   986,   987,   988,   989,  1119,
    1120,     0,     0,     0,     0,  1121,   990,   991,     0,   992,
    1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  3899,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,     0,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  1113,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,     0,   466,   620,   468,  1118,     0,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
    5977,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,     0,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,     0,     0,     0,     0,
       0,     0,  1019,     0,  1693,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,     0,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,     0,   985,   986,
     987,   988,   989,  1694,  1695,     0,     0,     0,     0,  1121,
     990,   991,     0,   992,  1122,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  1831,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,  1029,     0,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  1113,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,     0,   466,   620,
     468,  1118,     0,     0,     0,     0,   985,   986,   987,   988,
     989,  1694,  1695,     0,     0,     0,     0,  1121,   990,   991,
       0,   992,  1122,     0,     0,     0,  1123,  1124,   993,   994,
    1125,  1126,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    1833,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
       0,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,     0,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,     0,   985,   986,   987,   988,   989,  1694,
    1695,     0,     0,     0,     0,  1121,   990,   991,     0,   992,
    1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  1020,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,  1029,     0,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,     0,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  1113,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,     0,   466,   620,   468,  1118,     0,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  2642,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,     0,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,     0,     0,     0,     0,
       0,     0,  1019,     0,  2644,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,     0,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,     0,     0,   986,
     987,   988,   989,  1119,  1120,     0,     0,     0,     0,  1121,
     990,   991,     0,   992,  1122,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  1693,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,     0,     0,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  1113,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,   986,   466,   620,
     468,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5761,  5762,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5763,     0,     0,     0,     0,  1124,     0,     0,
    1125,  1126,     0,     0,     0,     0,  1003,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1008,     0,     0,  1010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1014,  1015,     0,     0,     0,  1730,  1731,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1028,     0,     0,     0,
       0,     0,     0,     0,  1033,  1034,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,     0,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,  1732,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,  2679,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,  3149,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  2680,   426,   427,  2681,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,  1126,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,     0,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,  3405,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,     0,   466,   620,   468,   469,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
    3150,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   790,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,  1217,   466,   620,   468,   469,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3150,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1218,     0,     0,     0,   790,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1219,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,  1220,   179,   180,   181,   182,   183,   601,
    1221,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,  1222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,  1223,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1224,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,  1225,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,  1226,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
    1227,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,  1228,   462,   463,   464,   465,  1217,   466,   620,
     468,   469,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1218,     0,     0,     0,
       0,  1229,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1219,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,  1220,   179,   180,
     181,   182,   183,   601,  1221,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,  1222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,  1223,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1224,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,  1225,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,  1226,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,  1228,   462,   463,   464,
     465,  2059,   466,   620,   468,   469,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1229,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1730,  1731,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,   902,   903,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2060,     0,     0,     0,
       0,     0,   904,     0,     0,     0,     0,   905,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   906,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   907,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   908,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,   909,     0,     0,     0,     0,
     910,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   808,
       0,     0,     0,     0,     0,     0,   911,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   913,     0,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   710,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   916,   917,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   918,   157,   158,
     159,   160,   919,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   920,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   921,   323,   324,   325,   922,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   923,   344,   345,   610,   347,   924,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   925,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   926,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,  1194,   903,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   904,     0,     0,
       0,     0,   905,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   906,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   907,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   908,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
     909,     0,     0,     0,     0,   910,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   808,     0,     0,     0,     0,     0,
       0,   911,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   913,
       0,     0,     0,     0,     0,     0,     0,   914,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   710,     0,     0,     0,     0,     0,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   916,
     917,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,  1195,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   918,   157,   158,   159,   160,   919,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   920,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   921,   323,   324,
     325,  1196,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   923,   344,
     345,   610,   347,   924,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   925,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,  1966,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   926,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,  4948,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,  4968,   466,   620,   468,
     469,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   759,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,  3494,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3495,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   760,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,  4969,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,  4524,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,  4768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   710,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,  1919,   466,
     620,   468,   469,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1920,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   808,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1921,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,  1503,  1504,     0,     0,  1922,     0,  1505,  1506,
       0,     0,     0,     0,     0,     0,     0,     0,  1507,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1508,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1509,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1510,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1511,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1512,  1513,     0,  1514,     0,     0,     0,     0,
       0,     0,     0,  1515,  1516,  1517,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1518,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1519,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1520,     0,     0,     0,     0,     0,  1521,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1522,  1523,  1524,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1525,
    1526,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,     0,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,     0,   587,  1527,    78,  1528,
    1529,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,     0,  1530,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,  1531,   129,  1532,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,     0,   148,   149,   150,  1533,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
    1534,   598,   599,   174,     0,   175,   176,   177,     0,   179,
     180,  1535,  1536,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,  1537,   213,   605,   214,   215,   216,   217,
     218,   219,  1538,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,  1539,  1540,
    1541,   269,   270,   271,   272,   273,  1542,  1543,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,     0,  1544,  1545,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,  1546,  1547,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,  1548,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,  1549,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,     0,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,  1550,   423,
     424,  1551,   426,   427,  1552,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,     0,  1553,   452,   453,
     454,   455,   456,   457,   458,   459,   460,  1554,   462,   463,
     464,   465,     0,   466,   620,   468,  1555,  1503,  4316,     0,
       0,     0,     0,  1505,  1506,     0,     0,     0,     0,     0,
       0,     0,     0,  1507,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1508,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1509,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1510,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1511,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1512,  1513,     0,
    1514,     0,     0,     0,     0,     0,     0,     0,  1515,  1516,
    1517,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1519,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1520,     0,
       0,     0,     0,     0,  1521,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1522,
    1523,  1524,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4317,  1526,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,     0,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
       0,   587,  1527,    78,  1528,  1529,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,     0,
    1530,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,  1531,   129,  1532,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,     0,   148,
     149,   150,  1533,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,  1534,   598,   599,   174,     0,
     175,   176,   177,     0,   179,   180,  1535,  1536,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,  1537,   213,
     605,   214,   215,   216,   217,   218,   219,  1538,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,  1539,  1540,  1541,   269,   270,   271,   272,
     273,  1542,  1543,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,     0,  1544,  1545,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,  1546,  1547,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,  4318,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,  4319,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,     0,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,  1550,   423,   424,  1551,   426,   427,  1552,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,     0,  4320,   452,   453,   454,   455,   456,   457,   458,
     459,   460,  1554,   462,   463,   464,   465,     0,   466,   620,
     468,  1555,  1503,  1504,     0,     0,     0,     0,  1505,  1506,
       0,     0,     0,     0,     0,     0,     0,     0,  1507,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1508,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1509,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1510,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1511,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1512,  1513,     0,  1514,     0,     0,     0,     0,
       0,     0,     0,  1515,  1516,  1517,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1518,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1519,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1520,     0,     0,     0,     0,     0,  1521,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1522,  1523,  1524,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1525,
    1526,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,     0,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,     0,   587,  1527,    78,  1528,
    1529,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,     0,  1530,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,  1531,   129,  1532,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,     0,   148,   149,   150,  1533,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
    1534,   598,   599,   174,     0,   175,   176,   177,     0,   179,
     180,  1535,  1536,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,  1537,   213,   605,   214,   215,   216,   217,
     218,   219,  1538,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,  1539,  1540,
    1541,   269,   270,   271,   272,   273,  1542,  1543,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,     0,  1544,  1545,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,  1546,  1547,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,  1548,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,     0,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,  5358,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,  1550,   423,
     424,  1551,   426,   427,  1552,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,     0,  1553,   452,   453,
     454,   455,   456,   457,   458,   459,   460,  1554,   462,   463,
     464,   465,     0,   466,   620,   468,  1555,  1503,  4316,     0,
       0,     0,     0,  1505,  1506,     0,     0,     0,     0,     0,
       0,     0,     0,  1507,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1508,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1509,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1510,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1511,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1512,  1513,     0,
    1514,     0,     0,     0,     0,     0,     0,     0,  1515,  1516,
    1517,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1519,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1520,     0,
       0,     0,     0,     0,  1521,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1522,
    1523,  1524,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4317,  1526,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,     0,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
       0,   587,  1527,    78,  1528,  1529,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,     0,
    1530,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,  1531,   129,  1532,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,     0,   148,
     149,   150,  1533,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,  1534,   598,   599,   174,     0,
     175,   176,   177,     0,   179,   180,  1535,  1536,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,  1537,   213,
     605,   214,   215,   216,   217,   218,   219,  1538,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,  1539,  1540,  1541,   269,   270,   271,   272,
     273,  1542,  1543,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,     0,  1544,  1545,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,  1546,  1547,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,  4318,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,  5592,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,     0,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,  1550,   423,   424,  1551,   426,   427,  1552,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,  1935,  4320,   452,   453,   454,   455,   456,   457,   458,
     459,   460,  1554,   462,   463,   464,   465,     0,   466,   620,
     468,  1555,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   808,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     710,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    1919,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,  1919,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   808,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,  1347,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,  1348,  1349,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1350,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    1450,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,  2744,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1825,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,   851,   852,     0,     0,     0,     0,     0,     0,     0,
       0,   853,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,     0,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,     0,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,   854,   855,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   856,   462,   463,   464,   465,
    1384,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,  1450,   905,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1385,     0,     0,
       0,     0,  1386,     0,     0,   790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     808,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   710,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,  1450,   466,
     620,   468,   469,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,   905,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,   853,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,     0,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,     0,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   856,   462,   463,   464,   465,     0,   466,
     620,   468,   469,  2452,     0,     0,     0,  5134,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2453,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4140,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4141,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4142,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   710,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4143,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,  2452,     0,     0,
       0,  5882,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2453,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4140,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4141,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4142,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4143,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,  2452,     0,     0,     0,  5995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2453,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4140,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4141,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4142,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     710,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4143,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    3093,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   808,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  1912,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    1912,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  2736,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  3487,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    5065,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  5083,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    3432,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,  3433,   179,   180,   181,   182,   183,   601,     0,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
    3434,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,  2598,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  6092,     0,     0,     0,     0,     0,     0,
    2599,  6093,   808,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     710,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
       0,   466,   620,   468,   469,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1933,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   710,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2150,   808,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2613,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,  2598,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,     0,   466,
     620,   468,   469,  1730,  1731,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2599,  6093,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
       0,   466,   620,   468,   469,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2060,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    42,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,  1730,  1731,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1385,     0,     0,
       0,     0,     0,     0,     0,   790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,  1732,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,     0,   466,   620,   468,   469,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1733,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,  1730,  1731,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1385,     0,     0,     0,     0,  1386,     0,     0,   790,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,  1732,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,     0,   466,
     620,   468,   469,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,  2598,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
       0,   466,   620,   468,   469,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2599,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1385,     0,     0,
       0,     0,     0,     0,     0,   790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,     0,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,     0,   466,   620,   468,   469,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3150,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   790,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,    16,    17,  5031,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4767,     0,     0,     0,     0,     0,     0,     0,  4768,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,     0,   466,
     620,   468,   469,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4768,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   787,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   788,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   789,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
       0,   466,   620,   468,   469,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   790,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,     0,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,     0,   466,   620,   468,   469,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4768,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,  3108,   466,   620,   468,
     469,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2657,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   706,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3751,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3752,   676,
    3753,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   600,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   619,   462,   463,   464,   465,     0,   466,
     620,   468,   469,  1663,     0,     0,     0,     0,  1664,     0,
       0,     0,     0,  3109,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1665,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  1585,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,  1730,  1731,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4366,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4528,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1730,  1731,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4924,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5423,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1921,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,  1730,  1731,     0,     0,
    1922,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2162,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2164,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,  2165,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1730,  1731,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2161,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4348,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2164,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,  2165,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1730,  1731,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2162,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2164,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,  2165,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     675,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     676,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   676,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1730,  1731,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1776,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4564,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5678,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   719,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1730,  1731,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,  2079,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,  3515,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  3516,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,  3166,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,     0,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,  3433,   179,   180,   181,   182,   183,   601,     0,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
    3434,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,     0,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
       0,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,     0,    88,   590,    90,    91,    92,    93,
      94,     0,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,   114,   115,   116,   117,     0,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,     0,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,     0,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   601,
     185,   186,     0,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,     0,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,     0,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1653,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,     0,    49,     0,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,     0,    65,    66,    67,    68,    69,    70,    71,    72,
       0,     0,     0,     0,    77,    78,    79,    80,    81,     0,
       0,    84,    85,    86,    87,     0,     0,     0,    90,    91,
      92,    93,    94,     0,    95,    96,    97,     0,    99,     0,
       0,     0,     0,     0,     0,   105,     0,   107,     0,   109,
     110,  1654,   112,   113,   114,   115,   116,   117,     0,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,     0,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,     0,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,     0,     0,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,     0,     0,
       0,     0,     0,   176,   177,  1655,   179,   180,   181,   182,
     183,     0,   185,   186,     0,   188,   189,     0,     0,   191,
       0,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,     0,   205,   206,   207,   208,   209,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    16,    17,
       0,     0,   301,   302,     0,   304,   305,   306,   307,     0,
     309,   310,   311,   312,   313,   314,     0,     0,     0,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,     0,   345,     0,   347,
     348,     0,   350,   351,     0,   353,   354,   355,   356,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,     0,
     368,   369,   370,     0,   372,   373,   374,   375,     0,   377,
     378,     0,     0,   381,     0,     0,   384,   385,   386,     0,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,     0,   399,   400,     0,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,   434,   435,   436,
       0,   438,   439,   440,   441,     0,     0,   444,   445,     0,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,     0,     0,   463,   464,     0,     0,
     466,     0,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1672,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,     0,    49,     0,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,     0,    65,    66,
      67,    68,    69,    70,    71,    72,     0,     0,     0,     0,
      77,    78,    79,    80,    81,     0,     0,    84,    85,    86,
      87,     0,     0,     0,    90,    91,    92,    93,    94,     0,
      95,    96,    97,     0,    99,     0,     0,     0,     0,     0,
       0,   105,     0,   107,     0,   109,   110,  1654,   112,   113,
     114,   115,   116,   117,     0,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,     0,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,     0,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,     0,
       0,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,     0,     0,     0,     0,     0,   176,
     177,  1655,   179,   180,   181,   182,   183,     0,   185,   186,
       0,   188,   189,     0,     0,   191,     0,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,     0,   205,
     206,   207,   208,   209,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    16,    17,     0,     0,   301,   302,
       0,   304,   305,   306,   307,     0,   309,   310,   311,   312,
     313,   314,     0,     0,     0,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,     0,   345,     0,   347,   348,     0,   350,   351,
       0,   353,   354,   355,   356,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,     0,   368,   369,   370,     0,
     372,   373,   374,   375,     0,   377,   378,     0,     0,   381,
       0,     0,   384,   385,   386,     0,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,     0,   399,   400,
       0,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,   434,   435,   436,     0,   438,   439,   440,
     441,     0,     0,   444,   445,     0,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
       0,     0,   463,   464,     0,     0,   466,     0,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,     0,    49,     0,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,     0,    65,    66,    67,    68,    69,    70,
      71,    72,     0,     0,     0,     0,    77,    78,    79,    80,
      81,     0,     0,    84,    85,    86,    87,     0,     0,     0,
      90,    91,    92,    93,    94,     0,    95,    96,    97,     0,
      99,     0,     0,     0,     0,     0,     0,   105,     0,   107,
       0,   109,   110,  1654,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,     0,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,     0,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,     0,     0,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
       0,     0,     0,     0,     0,   176,   177,  1655,   179,   180,
     181,   182,   183,     0,   185,   186,     0,   188,   189,     0,
       0,   191,     0,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   205,   206,   207,   208,   209,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
       0,     0,     0,     0,   301,   302,     0,   304,   305,   306,
     307,     0,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,     0,   345,
       0,   347,   348,     0,   350,   351,     0,   353,   354,   355,
     356,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,     0,   368,   369,   370,     0,   372,   373,   374,   375,
       0,   377,   378,    16,    17,   381,     0,     0,   384,   385,
     386,     0,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,     0,   399,   400,     0,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,   434,
     435,   436,     0,   438,   439,   440,   441,     0,     0,   444,
     445,     0,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,     0,     0,   463,   464,
       0,     0,   466,     0,   468,   469,     0,     0,  5442,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,     0,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,     0,   587,     0,    78,     0,     0,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,     0,     0,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
       0,   129,     0,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,     0,   148,   149,   150,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,     0,   598,
     599,   174,     0,   175,   176,   177,  5443,   179,   180,     0,
       0,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,     0,   213,   605,   214,   215,   216,   217,   218,   219,
       0,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
       0,     0,     0,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,     0,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,     0,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,     0,   423,   424,     0,
     426,   427,     0,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,  1554,   462,   463,   464,   465,
       0,   466,   620,   468
};

static const yytype_int16 yycheck[] =
{
       0,     0,   692,   575,   861,   470,  1712,  1514,    24,   958,
       0,   691,   692,   773,     0,    75,   573,  1514,  1411,  1899,
       0,  1411,  1826,  2037,  1879,     3,  2251,   691,     0,  1892,
    1924,     0,  1438,   583,  1278,  1591,  1223,  1224,  1225,     0,
       0,     0,     0,  2427,  1728,  1232,   639,     0,  2332,  1510,
    1719,  1636,   895,  3412,   639,  3069,  1942,  1518,  2319,  2318,
    2342,  1409,  3667,   657,  1930,   758,  1185,  1444,  1444,   762,
     763,   803,  1570,  1534,  1940,  1023,  3667,     0,  3200,  3201,
     657,   718,  3157,  1544,   641,  1385,   643,   644,   645,   646,
     647,  2935,   649,   650,   688,  4069,   653,   654,   691,   735,
       0,   985,   738,  1564,  1850,  1750,   691,  1531,  2813,  2066,
    3726,   688,  1858,  3701,  2871,  1403,  3475,  3726,  3726,  3781,
    3726,  2011,    34,  3726,  1344,  1892,  1550,  1551,  1552,  3461,
    4076,  1555,  2424,  3602,   803,  4108,  1605,  2811,  4622,     0,
     684,    76,  3582,  1956,  1957,  1569,  1504,  2059,  1506,  3726,
    1508,  3617,  1510,   860,  3813,  2194,  1963,   173,  4319,  2419,
    1518,  4634,  2901,  3045,  2839,  3216,  3606,  1525,  4773,  1527,
    3667,  2900,  2901,  1980,  4195,   846,  1534,  3643,  3644,  3045,
    4633,  3673,  3533,   740,   741,   583,  1544,  4195,  2910,  2278,
    1548,  4195,    28,   583,  2977,  1553,  2059,  4074,  2005,  2006,
       6,   583,  2306,  2428,   583,  2977,  1564,  1565,  1566,  1567,
    1568,   583,  2092,    11,  1859,  1860,  1672,  1862,  1863,  1864,
    1865,  1866,  1867,     6,  1869,  1870,  1871,  1872,  1873,  1874,
    1875,  1876,  2139,    80,  4207,  1119,  1120,  1121,  1187,  1587,
      61,  4778,  3708,  3709,  2057,    11,  2205,     9,    10,  1133,
    2377,    11,  2379,  2380,    80,  4196,  1280,  4198,    61,  3035,
    4201,  1481,  3045,    92,    12,    11,   859,    11,   861,    11,
     104,     6,    61,  3045,   859,    26,   861,    80,   155,   769,
      94,   179,    80,   104,    17,    26,    50,  1512,   238,  2248,
    1515,  2958,  2059,  4234,   148,     9,    10,  1522,  1514,     9,
      10,  1517,  3715,    30,   221,  3378,   196,   238,  1524,  1513,
    1514,    61,  1537,  1517,  1530,   104,   196,    65,  1698,  1699,
    1524,     9,    10,   226,    32,    61,  1530,  1707,    63,   886,
     346,    80,     9,    10,   824,  1513,  1514,   230,  2218,  1517,
    2969,   898,   899,  3647,    80,  2406,  1524,   226,   266,    61,
       9,    10,  1530,   113,   104,   251,  3688,   184,   230,  1739,
     266,  1741,    89,    83,    11,   264,   145,   286,    80,   238,
     267,   296,  5057,     9,    10,    57,  3115,  1757,  1758,   125,
    1760,   125,     9,    10,   119,  3552,  3115,   223,  1768,  1769,
       6,   140,  1772,    17,   155,    24,  5132,  3665,   785,  4612,
     120,   365,   377,  4985,     9,    10,   264,    89,    32,    61,
    2694,   374,     9,    10,    11,     6,   362,    94,   380,   113,
     266,   183,   104,   185,   114,  4259,   104,    14,   784,     9,
      10,  3632,   301,     9,    10,   151,  1023,    86,  4984,     9,
      10,    80,    63,    42,   411,     9,    10,    92,     9,    10,
    1257,   324,   104,   196,   583,   104,  5102,   151,   173,   621,
     286,     9,    10,    61,   637,   129,   148,     9,    10,   183,
      32,   185,  1279,   183,   113,   185,   357,   237,     9,    10,
     122,  1068,  5266,    24,   470,   220,   575,   238,  1607,    61,
    3164,     9,    10,   519,   176,   183,    86,   185,   233,  4645,
      94,    12,   281,  5631,   151,   271,   183,   771,   185,   196,
     646,  2795,    94,   675,  1633,   779,   679,   116,   642,   179,
       9,    10,   778,  2108,   183,   285,   185,   783,   127,   785,
     124,  5659,   104,     9,    10,   134,     9,    10,  1125,  4741,
     122,     9,    10,   305,   614,     9,    10,   183,   283,   185,
     299,   537,   196,  2433,    65,   290,   183,   104,   185,   279,
     301,   179,   204,   210,   531,   537,   301,   166,    10,   247,
     111,   179,   286,  2700,  2701,  2702,  2703,   537,   183,   452,
     185,   220,    80,  3942,   583,   175,   183,   565,   185,    73,
     568,   305,    63,   238,   276,   305,  4088,   583,   179,     9,
      10,  4189,  3677,   183,    57,   185,   779,   183,   196,   185,
     179,   583,   179,   183,   151,   185,    92,   305,  3950,   183,
     328,   185,   183,   583,   185,  1385,   275,   238,   305,   228,
       9,    10,   238,  1304,   104,   183,    89,   185,  1274,   639,
     238,   183,   771,   185,   352,   607,   305,   771,   119,   639,
     720,   104,   183,    80,   185,    80,   656,  1122,    63,   639,
     259,  5445,   283,   379,   104,   183,   656,   185,  5353,   305,
     670,  4997,   647,   210,   233,  1368,   656,  1370,   305,   585,
    1373,  1374,  1375,  1376,   271,   275,  5332,   113,   448,  2095,
     779,   691,   692,   136,   183,   148,   185,   286,   698,   634,
     305,   691,   230,   656,   328,   395,   301,   183,   305,   185,
     183,   691,   185,   140,   119,   183,   639,   185,   718,   183,
     113,   185,   346,   176,  5270,   305,  1913,  1314,   352,   305,
     266,   290,   294,   656,   680,   305,  2205,  1469,   238,   639,
     238,   305,     9,    10,   305,     9,    10,  1934,   173,   220,
     302,   303,   266,  4250,   378,   718,   656,   305,   151,  1602,
     127,    61,   233,   305,  4993,     9,    10,  4980,   691,  1717,
     682,  4605,   466,   183,   305,   185,   537,   238,   639,  2248,
     661,   266,  2796,   498,  5520,  1733,   519,   305,  1907,  2850,
     233,   691,   727,   651,   301,   656,   715,   696,   784,   463,
     735,  3643,  3644,   738,   183,   755,   185,   771,  1927,   238,
    1694,  1695,   283,   238,   195,   220,   305,  2194,  2194,   290,
    1491,   121,   715,   276,  1411,  2711,  3565,  4436,   233,   305,
     301,  2131,   305,  3715,   286,  1954,  3565,   305,   838,   735,
    3101,   305,  2142,   715,  2710,  4311,   771,   290,   779,  3715,
    3572,   238,    58,   853,  3576,   582,   286,   774,   301,   859,
     185,   861,   780,   853,  3647,  2926,  3708,  3709,   771,   859,
    4174,   861,   299,   853,  4075,  3647,   774,   774,   283,   859,
    5462,   861,  2351,  2289,  3957,   290,   755,  1437,   636,   779,
    2296,   771,   771,  1383,   771,   305,   301,   676,   495,  4312,
     853,     9,    10,   238,  1636,   817,   760,   761,   635,   887,
     888,   889,   890,   355,   608,  4082,   183,   123,   185,   183,
    1385,   185,  2606,  2607,  4192,   771,   305,   761,   655,  5466,
     853,   778,  3715,  4767,  3710,   935,   859,  1608,   774,   183,
     761,   185,   669,  3715,  1892,   774,   946,   774,   948,   949,
     950,  3618,   778,   853,   954,  2411,   956,   755,  2915,   859,
     774,   861,  2418,   963,   963,   771,   946,   694,   948,   949,
     950,   735,   761,   963,   954,   778,   956,   963,  2785,  2003,
     778,   893,    17,   963,   896,   985,  3090,  3091,   771,   755,
     990,   963,   853,   734,  2639,   755,  1880,    32,   859,  2958,
     861,  2908,  2909,   963,   755,  2650,   212,  2652,  2653,  1603,
     963,   761,   760,   755,   722,   777,  3645,  5470,  2977,  5472,
    1020,  1692,  3149,   946,  2244,   948,   949,   950,   771,   778,
    1030,   954,   778,   956,   778,  2260,   771,  2262,   305,  1437,
     963,   305,   778,   485,  5246,   661,   946,  1437,   948,   949,
     950,   680,   772,  1440,   954,  1437,   956,  2282,  1437,   749,
     774,   305,   772,   963,   774,  1437,   778,  2292,  1705,  2285,
     661,  2937,  1132,   498,  2261,   183,  3035,   185,  1434,  2304,
    3318,  2285,   301,   761,   772,   946,  3045,   948,   949,   950,
     772,  2307,   779,   954,  2310,   956,  2321,   774,   722,   746,
    5121,  1861,   963,  2307,  2320,  4982,  2310,  2285,   755,   761,
     755,  2059,   761,  5121,   774,   774,  2320,  5121,   709,  1119,
    1120,  1121,  1122,  1122,  3213,   636,  3215,  3801,  2508,  2307,
    1717,  2511,  2310,  1133,   724,   779,  1122,  1774,   774,   778,
       9,    10,  2320,  4635,   755,  1732,  1733,   774,   574,  2529,
    5296,   635,  5298,  1960,  1791,  1962,   774,  1794,  4763,  1796,
    2540,     9,    10,  1800,  1801,  1802,   774,  1974,   779,   774,
    1977,  1808,  4763,   779,  1981,   500,  1908,   774,   777,   774,
     378,  5122,  5787,  4652,  1440,   774,  4655,   715,   264,   761,
     779,   779,   772,   774,   774,  4554,   772,   305,   774,     9,
      10,  2008,  2009,  2010,   774,   774,   264,   774,   772,   746,
     774,   772,   771,   774,   761,   608,  5050,   129,  5052,  5824,
    5825,  5055,   774,  3461,   772,   772,   774,   774,  5062,  5063,
     772,  5460,   774,   266,  3124,   771,     9,    10,    33,  1908,
    4591,   772,   623,   774,   217,   687,  1978,     9,    10,   141,
       6,  2011,   552,  1946,   772,   755,   774,   771,  3138,  4698,
    1320,   264,  1727,     9,    10,   632,  4763,   774,  5102,     9,
      10,    32,  4116,   771,  3335,  2394,  5602,  5603,  3405,   779,
     778,   779,   438,   772,  4128,   774,   771,     9,    10,   359,
     113,   761,   423,   328,   755,  5601,   772,  4656,  1885,    99,
     771,   774,   772,  2187,   774,  1892,   774,  4773,   772,  1978,
    1310,   346,  4787,  1313,   183,   207,   185,   352,   779,   772,
     772,   761,   774,  1917,  5292,   365,   755,  5932,   771,   355,
       9,    10,   772,  5279,   774,   183,   282,   185,    35,  1274,
    1917,  1276,   362,    10,   774,    32,   771,    34,   345,   779,
     779,   778,   462,   778,   779,    92,    14,     9,    10,  4098,
    4099,   307,  2205,   571,   774,  4040,   771,   188,   755,  4098,
    4099,  2131,   697,   183,    11,   185,  2108,  4993,  5667,   210,
    4102,  4103,  2142,  2143,  4993,  4993,  1385,  4993,  4439,   139,
    4993,  4174,   779,   774,   210,   774,   233,  4729,   145,  1385,
     266,   438,  4174,  2074,   362,  2248,     9,    10,  5351,   166,
     183,  1346,   185,  4745,  4746,  2051,  4993,   210,  2111,  2112,
     755,   183,  2115,   185,     9,    10,  5260,  2120,  2121,  2122,
    4312,  5592,    28,  5268,   210,   468,   305,   183,  1437,   185,
    2012,  2077,  1442,   183,   779,   185,  4312,    83,  1434,   657,
    3688,  1437,   608,   290,  1366,  1367,  5940,   305,   264,   485,
    5446,   183,   285,   185,   301,  1437,   463,   443,  5941,  4311,
       9,    10,  2059,    92,  3386,  3536,    60,  1437,   684,   403,
     688,  3740,  1482,  3742,   120,  1485,  3500,    76,   492,  2958,
     151,   634,  2869,  2869,    93,   305,  4201,   417,  5332,  1477,
     113,  3540,  5336,   711,   183,  5618,   185,   774,    35,   213,
     774,   705,   111,  2107,   490,   709,  4991,   725,  2198,  3811,
    5179,  5467,  5496,  3386,  5498,   596,   145,  2714,   772,  4312,
    2717,   183,   305,   185,   281,  2928,   459,  2781,  2931,  2932,
    4312,  2931,  2932,   305,   360,  2252,  2118,  2119,  2735,   299,
    3810,   463,  6005,   348,  3420,   774,   480,   667,  2506,   305,
    5503,  3146,   602,  6047,   301,   305,  3035,  2686,  2687,    49,
    3126,   608,   728,   771,   578,   498,  3045,  3638,  2165,   151,
     183,  3447,   185,   305,    35,   561,  1313,   344,   561,  2889,
     390,   352,   413,   651,  3239,  2895,  5582,  1324,   183,  5360,
     185,  5070,  5891,  5042,   271,   497,  3352,   738,  5443,   365,
    4367,  4368,  4369,  4370,  5054,   312,    35,   825,  1596,  3386,
     696,  3682,  5590,  3684,  3685,   448,   305,   223,  5596,  3690,
    5936,  5937,  3498,  5579,  5580,   705,   779,  3698,   696,     9,
      10,   237,  3703,   279,   183,  1645,   185,   680,   645,   286,
    5624,   727,   204,   305,  5488,    17,   696,    37,    38,  3618,
     680,   687,  5635,  3470,   322,   352,   774,     9,    10,  3473,
      32,   711,   285,  3357,  3358,  3381,    35,    69,  4703,  5341,
     114,  1681,  3351,   996,   997,   998,   894,   722,  3647,  2233,
     483,  2362,  2363,   696,  1694,  1695,  3975,  3976,  3977,  3978,
    1700,  4375,   305,   498,  1704,  1705,  1706,   483,   266,   298,
       9,    10,  3950,   659,    35,  1715,  1716,    92,  5187,   585,
     305,  1721,   680,  1723,  1724,  1725,  1726,  1727,  1727,  1729,
    3375,   654,   735,  1719,     9,    10,  4761,   774,  2402,   438,
    1740,  1727,  1742,   404,  1057,  1745,  1746,   173,  1748,  1749,
    1750,  3710,  1752,  1753,  1754,   339,  3715,  5226,   678,  1759,
    4835,   561,  1762,     9,    10,  5878,   305,  2987,   772,   145,
    1770,  1771,   164,  1773,  1774,  1775,  5744,  5745,  1778,  1779,
    1780,  1781,  1782,  1783,  1784,   312,  1786,  1787,  1788,  1789,
    1790,  1791,  1852,  1793,  1794,   626,  1796,  1797,  1798,  1799,
    1800,  1801,  1802,   695,   465,  1805,  1806,  1807,  1808,  2402,
    1810,  1811,  1812,   183,  1814,   185,  1816,  2402,  1818,  5294,
    2364,   652,  1822,  1823,  1824,   109,   110,  1827,  1828,  1829,
    1830,  1831,   404,  1833,  2427,   448,   350,   332,   264,    61,
    1840,   183,  2427,   185,  5460,   570,   565,  1847,  1848,  1849,
    1850,  5460,  5460,  1839,  5460,  5616,  2805,  5460,  1858,  1859,
    1860,   312,  1862,  1863,  1864,  1865,  1866,  1867,   519,  1869,
    1870,  1871,  1872,  1873,  1874,  1875,  1876,  3165,  3768,  1839,
    1880,  5213,  3069,  5460,   183,   148,   185,  2431,     9,    10,
     696,  2651,  5727,   312,  5729,    35,  3776,  4832,  4833,  4834,
     452,    24,     9,    10,   704,   774,  5519,     0,   183,   608,
     185,  4149,  4150,   176,   204,  4153,  4154,   532,   403,  2506,
    2507,  4159,  4160,  3568,   570,  1925,   774,     9,    10,   735,
    1930,   293,   294,    63,   771,   305,   396,   183,   398,   185,
    1940,   135,   136,    11,  5918,  5919,     9,    10,    28,   325,
    2757,   451,  4190,   312,  2761,  1890,   607,  3770,  2545,    93,
       9,    10,   772,   305,  5433,   561,   328,  2774,   680,  1947,
    1948,  5939,  1950,  1951,  1952,   238,   351,   111,     9,    10,
    2787,  2788,   477,  1961,   346,     9,    10,   467,   111,   119,
     352,   312,  4697,  4698,   573,   480,   564,   715,  1976,   772,
      61,  3707,     9,    10,   848,  4019,   305,  2007,  5256,  4853,
     661,  2598,   774,   571,  3133,  1223,   378,  1225,   737,  6034,
     732,  1229,  1230,   449,    15,  2612,  5051,   585,   774,   728,
     305,   526,     9,    10,   774,  2035,  5649,  2037,   301,   233,
       9,    10,  5067,   237,  2993,  6060,  1981,   561,   892,   774,
     565,  1259,   774,   433,   434,   774,  5881,   125,   744,   305,
    4017,   779,   183,   438,   185,   440,   565,  4911,  2732,   291,
     292,  2071,   498,  4830,  5543,   774,   183,  5152,   185,     9,
      10,  5106,   582,  5108,     9,    10,   701,     9,    10,   373,
       9,    10,  2664,     9,    10,   774,   290,   191,   578,   109,
     110,   183,  2696,   185,   719,   585,    80,   301,   565,    92,
     204,     9,    10,   593,   175,  2958,  2051,  3983,  3984,  2696,
    2707,  3469,   774,     9,    10,  4186,  4187,  4188,   774,  2889,
       9,    10,  3998,   124,   183,  2895,   185,  1450,  2116,  2732,
       9,    10,  2077,   223,     9,    10,   447,  2732,   139,  3618,
    2910,   596,   183,   283,   185,   530,  2156,   251,  4383,   183,
     660,   185,   452,  3540,  3540,  3969,  2631,   746,   390,   737,
    3518,   774,   312,  5761,  5762,   447,   183,  2848,   185,   273,
     139,     9,    10,  5431,   305,  3931,   666,  2187,  2881,   774,
    3139,  2884,  3035,     9,    10,  2888,  2832,  1405,   305,   210,
       9,    10,  3045,  3596,   488,   420,   183,   755,   185,  3794,
    3795,  3796,  3797,  3769,   183,  4174,   185,  4278,  4279,  3726,
    4281,   391,   737,   305,   501,   216,    73,  3414,  3415,  3726,
    6055,  6056,   329,   608,  5169,   774,  2916,    99,   737,  4518,
    4519,  3710,   305,   573,   466,   705,  3715,   727,   708,  2981,
    3437,  5720,  2839,   183,  2841,   185,   305,  2801,   183,   774,
     185,   183,   477,   185,   183,   127,   185,   183,   545,   185,
     696,    98,  3572,  2208,   305,    99,  3576,     9,    10,   774,
     737,   305,     9,    10,  3403,   183,   251,   185,     9,    10,
     301,   301,   111,    33,   595,   280,    57,   183,   305,   185,
    3419,  5006,   446,  5008,   183,  2305,   185,   266,  2200,     9,
      10,  2203,     9,    10,   183,  2305,   185,     6,   183,   477,
     185,  5787,   184,   595,  5929,  2305,  2326,  2327,   305,  3827,
     427,  4569,   426,    10,   207,  3741,   305,  5042,   322,  5930,
     299,  2928,     9,    10,  2931,  2932,  2933,     9,    10,   564,
    5425,    91,  2305,  4312,   186,   183,   229,   185,  5824,  5825,
     722,     9,    10,   373,  3124,  3826,   113,   183,   351,   185,
     762,   763,   764,   765,   183,   305,   185,  5221,  3771,    68,
     305,  3771,  2305,   305,   203,    18,   305,   148,   373,   305,
     237,   561,    69,     9,    10,  1603,  4457,   109,   110,   774,
    3824,  3825,  2402,   680,   774,  2305,   564,   305,   373,  3833,
    2410,  3835,  2402,  3837,  3146,   176,   746,  5122,  4479,   305,
    5542,   587,  2402,     9,    10,  3773,   305,  2427,  4322,  2429,
     772,   755,  2432,   114,  2434,     5,   305,  2427,  3386,  2429,
     305,   252,  2442,  2443,  2305,    17,   519,  2427,   129,  2429,
     594,   183,   191,   185,   111,   438,   183,   440,   185,   443,
      32,    31,   183,   203,   185,   204,  5932,   682,  3826,   403,
    3354,   104,   105,   220,  3832,   774,  2429,   305,   488,  2402,
    3838,   638,   314,   183,  2470,   185,   183,   164,   185,   305,
     332,  4729,   755,   663,   651,   142,   305,   760,   761,   774,
      69,   486,  2402,    73,  2427,   182,  2429,  4745,  4746,  5757,
    2470,  5759,  5760,  5954,   590,   276,   183,   683,   185,   715,
      18,   183,   737,   185,   682,   264,   450,  2427,   774,  2429,
    3479,  2531,  2532,  2533,   607,   183,  3130,   185,  4552,   409,
     280,  2402,  4556,  5844,   355,   590,   416,   530,  5392,   339,
       9,    10,  4811,  3130,   117,  4816,  4815,  4818,  4817,   774,
     484,   124,   239,   240,     9,    10,  2427,   183,  2429,   185,
     736,  5045,  6013,   305,   286,  6016,   755,   771,   305,   737,
    3217,   191,   229,   779,   305,     9,    10,  4846,   661,  4848,
    4849,  3228,   668,  5816,   204,   164,  5819,   183,     6,   185,
     294,   171,   296,    42,     6,   305,   104,   105,   305,  2609,
       9,    10,  6053,   182,     9,    10,     6,     9,    10,  5920,
    5868,  5869,   298,   668,  5872,   608,   189,   417,     9,    10,
      61,  2631,  2631,   266,  1842,   477,   560,   148,   305,  2639,
      12,   211,  2642,   305,  2644,  2631,   566,   567,  3285,   266,
    2650,   772,  2652,  2653,   264,  4541,  4717,   305,  4940,   779,
      68,   373,  4723,  4724,  4725,   176,    68,   774,     6,  4730,
    4731,  1879,  3404,   220,   485,  4736,  2676,   116,    68,  3316,
    1154,  3345,  4474,  4744,   526,     6,  4478,  4748,   127,   305,
    2690,    92,   774,    65,  4755,   134,   523,   524,  4759,  4760,
     527,   528,   529,     9,    10,  5953,  2692,  2707,  1182,  1917,
    2710,     9,    10,   452,    99,    33,  4318,   641,  4320,   305,
      38,  4405,  4406,   643,   183,   774,   185,   166,  4330,  4331,
      68,  3368,  2732,  2733,    79,  3404,   122,    82,   183,   140,
     185,   390,  2732,   774,   145,   121,  4550,    68,   559,  4433,
     774,   253,  3345,  5976,  6113,  2755,     9,    10,   407,   183,
    3345,   185,  4468,   265,   140,  4009,  2744,   774,   266,   771,
      99,  3451,   170,   171,  4458,  3618,   488,   779,  2756,  4364,
    5794,   761,  3369,   184,   183,    26,   185,  3451,   183,   228,
     185,   183,   772,   185,   774,   772,  2796,  2732,  1031,  3386,
    4506,   729,   183,   772,   185,  3754,     9,    10,  4052,  2732,
     761,    49,  3572,     9,    10,   501,  3576,  4501,  1051,  2754,
     259,   772,     9,    10,    57,  1058,  1059,  2762,  4755,  4016,
       9,    10,  2732,  4760,   761,  2835,   181,   237,     9,    10,
    3959,   151,   452,  4312,   774,   772,   305,     9,    10,   774,
     772,  5325,  2060,   772,  5328,  5329,   772,   771,  3451,    57,
     305,  2773,   116,     9,    10,    28,  3451,  3710,   330,  3726,
      33,  2732,  3715,   127,   772,    38,   687,   183,   779,   185,
     134,   305,     9,    10,    10,   183,   772,   185,   407,    81,
    4559,    89,  2100,   772,   772,  3360,   774,  2832,   286,  2107,
    2878,  2109,  2880,   772,    96,  3477,   305,   772,  2886,  2887,
     305,  2846,  4716,   305,  4928,   148,     9,    10,  1463,  1464,
     265,  2921,     9,    10,   305,    57,   111,     9,    10,  4436,
     183,    83,   185,   125,    94,  2935,   747,  2937,   737,   131,
      92,   264,  2150,   176,   772,   376,   772,   378,   774,  5208,
     148,   662,  1497,   191,     9,    10,   772,    89,  4316,  4317,
    4318,   662,  4320,   772,     9,    10,   204,   772,   120,   774,
    4328,  4329,  4330,  4331,   228,  5213,   168,   772,   176,   774,
     183,    69,   185,   772,   415,   774,  1527,   183,   140,   185,
     772,  2991,   774,   145,  2202,   449,   183,  4345,   185,   305,
       9,    10,    94,   715,   183,   259,   185,   305,  3768,  3596,
    2945,  5249,   183,   444,   185,   772,   148,  2952,  2953,  5493,
     772,   183,   774,   185,  1565,  1566,   264,    86,     9,    10,
     778,  3603,   184,     6,  4392,   273,   124,   183,    11,   185,
     772,   611,    15,   276,   176,   772,   772,  3107,   774,     6,
     655,   772,   305,     9,    10,    11,   183,   114,   185,  5968,
    5969,   114,  3794,  3795,  3796,  3797,   114,  1335,  4934,  4935,
    2278,   299,   772,  1341,  1342,   772,   164,  4264,   276,    96,
     332,   758,   759,   760,   761,   762,   763,   764,   765,   772,
     183,   774,   185,  5154,   182,  5156,   183,  5158,   185,   779,
     114,   183,   305,   185,   726,   772,  2314,     9,    10,   305,
     772,   170,   171,   772,   131,   774,   175,  4786,   305,  6028,
     640,    94,   678,  4927,   772,    84,   305,   279,   183,   650,
     185,   687,  1419,  3726,   305,  1422,  1423,   693,   183,   264,
     185,  3726,   426,   305,   276,   772,   772,   774,   774,   580,
      57,   239,   240,  1628,  1629,   735,   772,  1632,  5219,   305,
    4149,  4150,     9,    10,  4153,  4154,   251,  5228,   420,   150,
    4159,  4160,  3158,   772,   183,   774,   185,   697,   305,   772,
     700,   774,    89,   771,  3771,   616,   772,   271,   426,   332,
      76,   760,   761,   762,   763,   764,   765,   104,     5,  3199,
    3200,  3201,   183,  4551,   185,  3205,  4013,   727,  3208,   774,
       9,    10,   305,  5597,   452,   735,   275,  3217,   305,  3199,
    3200,  3201,   772,   305,   774,   477,  3226,   183,  3228,   185,
    3230,   461,  3232,  3233,  3234,  3235,  3236,  3237,   772,  3239,
     774,   148,   778,  3975,  3976,  3977,  3978,  3247,   778,  3249,
     305,    94,  3252,  3253,  3254,  3255,   111,  5541,  3258,  3259,
     305,    76,  3262,    78,  3264,  4821,  3266,   682,  3268,   176,
      92,    93,  3272,   129,   526,   124,  3199,  3200,  3201,   640,
    3280,   183,  3282,   185,  3284,  3285,  3286,  3287,  3288,   771,
    3927,  3291,  3292,  3293,   466,  3295,   305,   600,  3298,  3199,
    3200,  3201,   577,   772,  4548,   774,  3975,  3976,  3977,  3978,
     271,  3311,   564,   772,   170,   171,  3316,   696,  3905,  3319,
     179,  3321,  3322,  3323,   305,   179,  3326,   772,   774,   772,
    4517,   774,  3332,  4065,   477,   774,   417,  3337,  3199,  3200,
    3201,   113,  4102,  4103,   347,  3345,  3346,   203,   772,   305,
    4537,  4538,  3352,  5719,  3354,  3345,  5722,   760,   761,   373,
    3360,  3360,  5225,   338,   339,  3351,   380,   778,  3368,   276,
    3370,   196,  3944,   772,  3360,  3375,   504,   772,   506,   507,
     772,   395,  5088,   526,   183,   342,   185,   771,    69,   506,
     507,   772,   729,   521,  3393,  3982,  4065,   772,   771,   774,
     375,   771,    42,   305,   521,   771,   420,  4868,   417,   772,
    3345,   774,  3398,   651,   729,   772,    49,   774,  3418,  3418,
    3420,   564,  3345,    10,   280,   772,   443,   774,  3418,   386,
     682,   388,  3418,    34,   745,   746,   771,   748,  3418,   750,
    5334,   771,   417,    57,   771,  3345,  3418,  3447,  4854,  3418,
    4874,  3451,   527,  4040,  4878,   771,  5140,  3418,  3418,  3418,
    3418,  3451,    95,    92,    93,  3418,   772,   771,   267,  4312,
     771,  3451,  5838,   490,   772,    89,   116,    34,  3478,  5845,
     771,   114,    69,   164,  3345,   737,  4993,   127,  2696,   727,
     104,   619,   620,   771,   134,  3418,  4993,   735,  3498,   771,
    3500,   182,   619,   620,    61,  5730,   305,  4079,   163,    57,
    4868,   525,   772,   771,   774,  2270,   771,   373,  3418,   772,
     771,  5166,   774,   771,   538,   482,   166,   772,  3451,   774,
     772,   771,   774,  2288,   148,   165,   772,   554,   774,   682,
    5344,    89,  2297,  5406,   558,   772,   771,   774,  2303,   771,
      57,  3451,   109,   110,   209,   771,  2311,  3418,   239,   240,
     771,    49,   176,   755,   756,   757,   771,  2322,  3568,   772,
    2325,    69,   129,   772,   531,   774,   772,   164,  3556,   109,
     110,   598,    89,   190,   772,   772,   774,   771,   228,  3589,
    5956,  5957,   190,   772,   737,   182,   251,   104,   771,  2807,
     148,   772,   109,   110,    53,    54,    55,    56,  4328,  4329,
     772,   244,   771,   170,   171,  1819,  1820,  3617,   175,   259,
     772,   596,   179,   580,    69,   772,   772,   774,   176,   771,
     486,   264,  4364,   772,   772,   774,   774,   772,   613,   774,
     771,   148,   771,  3643,  3644,   772,   203,   280,   772,   724,
     774,    36,   239,   240,   772,   771,   774,   106,   107,   108,
     771,   771,   276,   638,   771,   724,   164,  3667,   682,   176,
     758,   759,   760,   761,   762,   763,   764,   765,  3678,   772,
       9,    10,   771,   697,   182,   772,   190,   109,   110,   190,
     772,  5571,   325,   742,   772,  5575,   774,   771,   773,  3634,
    3635,  3636,  3637,   678,  3639,  3640,    91,   129,  3708,  3709,
    2918,   160,   161,   670,   266,   771,   204,   772,   373,   164,
     771,  5946,     6,   280,   771,   771,  3726,   772,   276,   114,
     385,   771,   771,     9,    10,   692,  3726,   182,   755,   756,
     757,   239,   240,   771,   129,  3745,  3726,   304,   170,   171,
     771,  3686,  3687,   771,  3689,  3745,  3691,  3692,  3693,  3694,
    3695,  3696,  3697,   251,  3699,  3745,   772,  3702,   774,   276,
     403,  3706,   771,  5418,    36,   771,   333,    15,  4415,     3,
     772,   203,   774,   232,    68,  3785,  4518,  4519,  4700,   772,
    4702,   774,  3745,  4705,   239,   240,  4708,   771,  5191,  4711,
    4712,  5191,   771,  5658,    28,   772,  4356,   774,  3808,    33,
     195,     9,    10,  3813,    38,   779,   373,    41,   203,   771,
    3820,   378,  3745,  3823,   196,   772,  3726,   774,  5691,    91,
     772,    69,   774,  3813,   489,  4747,   771,   325,  5718,   196,
     772,  4385,   774,   774,   772,  3745,   774,  3847,  3848,  4518,
    4519,  4488,   114,   771,   183,   399,   185,   306,   280,   772,
    4540,   774,   772,   771,   774,  3726,  5927,   129,   771,   122,
     945,  3871,   771,  3873,    98,  3875,  4540,  3877,   771,   771,
    5684,  5895,   304,   772,  3745,   774,   124,     9,    10,   772,
    3813,   774,  5537,   772,   771,   774,  4845,  5303,  5304,  3899,
    5306,   139,   772,   772,   774,   774,   561,   183,   772,   185,
     774,  5617,   772,  3813,   774,   403,   755,   577,   771,    32,
    3920,  3921,  3130,   771,  3132,   469,   164,  3927,   772,   486,
     774,  3931,   170,   171,   771,   771,  3936,   161,   426,   771,
     771,   203,    11,    69,   182,    58,   772,  4540,   774,  3949,
     399,   373,  3813,  5460,   772,  4540,   774,    70,     9,    10,
      11,   771,   771,  5460,   452,   249,   250,   179,   772,   298,
     774,   771,    94,    42,   771,   259,   305,    90,   216,   424,
     771,   771,  3968,  3983,  3984,   183,   371,   185,   771,   771,
     534,   267,   536,   771,  4687,  5701,   280,   541,  3998,    94,
     771,   239,   240,  4696,   637,  3213,   771,  3215,  3968,   771,
     123,    80,   500,   772,    83,   774,   771,   771,   651,  4019,
     469,   771,   655,    92,  4704,   771,   771,   523,   524,   305,
      99,   527,   528,   529,   103,   772,   373,   774,   164,   772,
     772,   774,   774,  4615,   113,  3980,   771,   116,   771,   771,
     771,   120,   771,   122,   771,   771,   182,   771,   127,   771,
     771,   183,   606,   185,   486,   134,    69,   700,   771,   267,
     771,   140,   771,  4073,  4074,  5481,   145,  5483,  5484,   760,
     761,   762,   763,   764,   765,   534,  4658,   536,   771,   771,
    5894,   771,   541,   317,   727,   373,   653,   166,  6112,   212,
     771,   179,   237,   779,   779,   649,  4106,   305,  4086,   371,
     179,  1186,   779,   239,   240,   184,  4116,   779,   779,   662,
    5826,   124,    33,   779,   771,    36,     9,    10,  4128,   779,
    4130,   779,   183,   779,   185,   204,   779,   779,   680,   425,
     477,   140,   420,   367,  5056,  4080,    92,   680,   668,   696,
    4707,  5544,  5545,   501,  5544,  5545,   419,   606,    92,   228,
     575,   164,   774,   651,   774,   774,   347,   655,   237,   282,
      11,   758,   759,   760,   761,   762,   763,   764,   765,   182,
      91,   465,   774,   305,    95,    92,   743,   381,   774,   774,
     259,   572,   691,    34,   755,   739,    80,     9,    10,   477,
     649,   586,   452,   114,   735,  4265,   750,   452,   349,   697,
     279,    94,    93,   195,   774,   356,   285,   286,   129,   266,
      61,   558,  1297,    99,   283,   124,    26,   564,  1303,   238,
     299,   372,   301,    61,   395,   304,   239,   240,     5,   727,
     780,   382,   383,   384,   576,   394,     4,   735,    69,   735,
    4250,   392,   417,   339,   305,   778,   778,  5902,   771,   771,
    5966,   759,   760,   761,   762,   763,   764,   765,   109,   110,
     202,   378,   196,   779,   771,  5132,   771,   771,   615,  6083,
     558,  4341,    94,   396,   195,   398,   564,    34,   129,   771,
     739,    92,   203,  6097,     9,    10,    11,     9,    10,  6103,
     183,   750,   185,   527,    92,  6109,    14,    92,   774,   694,
    1385,  4311,   779,   758,   759,   760,   761,   762,   763,   764,
     765,   743,    84,   779,   586,   150,   420,   636,   696,   170,
     171,   772,   771,   244,   175,   111,   470,   615,   179,   498,
     564,   565,   298,   164,   568,   682,  4933,   571,   572,   554,
      94,  5044,   122,   240,  5047,  5048,   298,  4356,   771,   150,
      42,   182,   203,   774,   778,   771,     6,   417,   772,   280,
    4356,   183,   772,   185,  3582,   772,    32,    68,    34,   448,
     323,   774,    94,   779,   721,  1460,   772,   671,   672,   673,
     674,   779,   533,  6038,   772,  1470,  4356,  3605,  3606,   772,
     737,   641,    92,  1478,   682,    61,   547,    92,   772,   772,
     772,   771,  4412,  4413,   638,  4415,   139,   771,   239,   240,
     779,    99,   305,   774,  4424,   271,  4426,   651,   774,  4429,
     774,   669,   694,   657,   116,    92,   762,   550,   551,   280,
     779,   774,  4442,   721,  4444,   127,  4446,  3655,  4448,   774,
     271,   680,   134,   109,   110,   762,   124,   681,   114,   737,
     371,  4461,  4462,   304,   688,   481,   693,   691,   183,  5656,
     185,   183,    33,   185,   441,    36,    92,   774,   425,   703,
     680,   772,   771,   124,   166,   780,   774,   711,  4488,   771,
     417,   774,   333,   305,   195,   238,   774,   179,   350,   217,
     724,   725,    17,   501,   501,   501,   501,   648,  1583,   347,
    1585,   501,   501,   774,   774,    84,   755,    32,   668,    49,
     758,   759,   760,   761,   762,   763,   764,   765,     6,   271,
      91,   588,   373,   757,    95,   665,   192,   772,   735,  5132,
    4540,   772,   772,    58,   685,   127,   228,  5132,    83,   773,
    4540,   772,  4552,   114,   772,    70,  4556,    92,   699,  4494,
    4540,   127,   187,   771,   774,  2358,   790,    26,   129,   103,
     779,   429,   779,  4559,   798,    90,   229,   259,  5527,   803,
     657,   805,   408,   771,   114,   120,   471,   774,    67,  4524,
     305,   471,   772,   305,   587,   708,   774,    29,   254,   255,
     256,   825,   298,  5460,  5191,   140,   121,  5794,   123,   726,
     145,   835,  4612,   454,   285,   771,    17,  4540,   378,   296,
    5807,   296,   846,   279,   848,   214,   176,   695,   774,  5322,
     200,   184,   758,   759,   760,   761,   762,   763,   764,   765,
    4540,    94,   203,   179,   271,   486,   774,   774,   304,   184,
     771,    34,   115,   122,  5841,  4590,   642,   772,   882,   762,
     884,   191,   772,   887,   888,   889,   890,   891,   892,  6075,
     894,   772,   741,  5266,   204,   586,   417,   333,    61,   335,
     772,  5266,   772,   244,   163,  4701,   755,   772,   772,    94,
     761,   170,   171,   772,   774,   771,   352,   772,   354,  4715,
     772,   774,   772,   772,   771,   774,   772,   772,   777,   778,
     772,   772,   772,   238,   772,   779,  4732,   373,   772,   280,
    1795,   945,   774,   947,   380,   774,   109,   110,   774,  1804,
     209,   955,   772,   957,  4750,  4670,  4752,  4753,   772,   395,
    1815,   772,   771,   273,   279,   765,   129,   771,   972,   405,
     195,   772,   771,   365,   583,   758,   759,   760,   761,   762,
     763,   764,   765,  4763,   420,   266,    42,   282,   755,   266,
     266,   271,   251,    98,    94,    92,  4776,  4777,    92,   294,
     774,   495,   774,   694,   772,   332,   771,   170,   171,    94,
     771,   774,   175,   607,   774,   779,   179,   237,  4733,  4734,
    4786,  4779,   779,   946,   779,   948,   949,   950,   772,   774,
     371,   954,   653,   956,  4749,   774,    62,     9,    10,     6,
     203,   774,   478,   662,   725,   774,   373,    92,   127,  1904,
     569,   127,   488,   741,   429,   539,   771,   251,  4773,   549,
     116,   251,  4828,   650,   251,   251,   301,   251,   179,   771,
      92,   127,  5445,  4853,   267,   755,   774,   755,   134,   755,
    5445,    53,    54,    55,    56,   755,   755,  5460,  4828,   525,
     726,  5631,   500,   420,  1949,  5460,  5566,   755,  1953,   417,
    1955,   396,   538,   398,   755,   755,  4946,   755,   755,   755,
     166,   755,   439,  5465,   373,   755,   426,   280,   755,  5659,
    1124,   755,   743,   179,    17,   755,   385,   755,   332,   125,
     755,  4911,   755,   755,   106,   107,   108,   772,   755,  6106,
     755,   304,   452,   579,   755,  2000,  4986,   307,  4928,   585,
     477,   755,   772,   282,  4934,  4935,  2011,   758,   759,   760,
     761,   762,   763,   764,   765,   772,   779,   755,   286,   373,
     333,   774,   228,   772,   569,   140,   774,  5544,  5545,   779,
    4960,  1185,  1186,    72,   320,   271,   779,   271,   160,   161,
     500,  5031,   774,   779,   271,   746,  5036,   271,   498,   526,
    4980,   379,  4982,   259,   122,    42,   417,   121,   644,   772,
     373,   183,  1216,   185,   121,   651,   109,   110,   779,  1223,
    5000,  1225,  5002,   772,  5597,  1229,  1230,   772,   772,   772,
     489,   558,  5597,   190,    26,   439,   772,   564,  5034,   772,
     779,   761,   779,   761,  5714,   586,   682,   772,   774,   689,
     325,   271,   301,  5793,   771,  1259,   551,   771,   577,  2114,
     232,   697,   698,    94,    94,    94,    94,   779,   266,   266,
     483,   210,   779,   477,   710,   774,  2131,   176,   761,   116,
      11,  4996,   778,   312,   771,   774,   596,  2142,  2143,   755,
     127,   755,  1296,  1297,   535,   320,    91,   134,   179,  1303,
    1304,  1305,   561,   179,    10,   271,   127,   127,   395,   318,
     266,   774,   772,   395,   266,   266,   218,  1321,    11,   771,
      99,   771,   526,   486,   771,   176,  1330,   637,   176,   166,
     450,   762,   224,   305,   306,   779,   150,   772,   774,   577,
    1344,  1345,   179,   271,   762,   655,   179,   113,  5808,  5064,
     339,   150,  5132,   694,   558,   682,    56,   772,   123,   252,
     564,  1365,  5132,   123,   659,   176,  2939,  2940,   772,  2224,
     772,  6100,  5132,   772,   771,   184,  5091,    26,   779,   779,
     774,  1385,  1386,  2956,   774,   772,  5166,   697,   772,   772,
     700,   228,   771,  2966,  2967,   755,   219,   771,   774,  5179,
     772,  1405,   779,    94,    94,   772,   772,   210,   772,   774,
     737,   774,   150,   708,  5194,   771,  1420,   727,   298,  5179,
     771,   210,   259,   771,   546,   735,   755,   399,   682,   774,
    5145,   682,   395,   179,  1438,  1439,   731,   771,   365,   286,
     286,  5221,    11,   771,    18,   185,  5286,   774,   774,   286,
     772,   774,  5132,   266,   585,   371,  1460,  3030,  3031,  3032,
    3033,   195,   195,   271,   408,  1469,  1470,   195,    26,   733,
     195,   408,   128,  1477,  1478,   697,  5179,  1481,   682,   195,
     128,   697,   195,    57,   195,   584,  5266,  1491,   195,   271,
     653,  5132,   195,    11,   772,   429,  5266,   469,    98,  5179,
     229,   414,   493,   772,    26,   235,  5266,   772,   301,   772,
     495,   636,    86,   406,   184,    89,    26,   774,  5763,   772,
     772,  2376,  2377,   141,  2379,  2380,   774,   420,   195,   422,
     104,   105,   772,   737,   437,   145,   772,   774,  5179,   771,
     774,  5321,  2397,   745,   139,   195,   179,    11,   772,   668,
     286,   286,  2407,   142,   771,   176,   176,   436,   733,   111,
     453,   129,   534,   733,   536,   203,   597,   179,   215,   541,
    6040,   779,   179,   373,   148,   468,  1580,   230,   476,  1583,
     743,  1585,   267,    94,   429,   155,  5266,     7,   122,    29,
     577,  1595,  1596,   167,   140,  5947,   301,   539,    38,  1603,
     417,   175,   176,  1607,  1608,   772,   772,   489,   501,   123,
      32,   772,  5392,   607,   772,   774,    26,   677,   772,   772,
      60,    41,   779,   772,   774,  5266,   519,    10,   771,  1633,
     771,   647,  1636,   772,   606,   772,    11,   771,  5418,   771,
      26,    26,    79,    63,    26,   771,    92,    87,   771,   129,
     771,   129,    92,    73,    92,   129,   771,    97,   774,  1663,
     301,   774,   772,   377,   412,  5445,   661,   301,   129,   150,
     264,   111,   774,   539,  5440,  5445,   772,   649,    98,   435,
    5460,   772,   772,   771,  4672,  5445,   126,   409,  1692,   576,
    5460,   771,   266,   133,   114,    11,   417,    67,   226,   119,
    5460,   275,   276,   277,   772,   772,   179,   600,   774,   774,
     150,   226,    92,  5509,   607,    26,    26,    26,   266,   176,
      84,    84,  2577,   286,   617,   145,   264,   771,  2583,   779,
      33,   779,   283,   577,   772,   175,   772,   630,   642,  5519,
     595,   430,   595,  5523,   771,   353,   778,   771,   771,    61,
     771,   153,  4740,   189,   399,   772,    61,  5537,  6110,   778,
     778,   774,  5542,    33,   772,  5445,   677,   739,   661,    33,
     577,   664,   196,    10,   703,   176,   688,   347,   750,   219,
    5460,   304,  5542,    26,   772,   225,   226,   680,    26,   771,
     771,  1795,   771,   771,   771,   215,   122,   129,   179,   239,
    1804,   733,   129,   694,  5445,   326,   175,   283,    61,    11,
     577,  1815,   418,   233,   577,   715,   390,  5597,   642,  5460,
     408,   241,  1826,   393,   398,   771,   408,  5597,   771,   420,
     778,   772,   230,  2688,   774,   172,   772,  5597,  1842,  5542,
     778,   771,   581,   729,   417,  2700,  2701,  2702,  2703,   771,
     771,  5631,   771,   273,   774,   689,   771,   339,    92,   412,
     300,   771,  5542,   283,   284,   145,   772,   772,   226,  5649,
     771,   325,   319,   179,   771,  1879,   772,  1881,   179,  5659,
     229,   196,    63,   283,   774,   471,   417,  5667,   772,   772,
     715,  5671,    75,    26,  5597,   772,   113,   642,   176,   339,
    1904,  5542,   771,  1907,  1908,   475,   237,   774,  3418,   963,
    3704,  2821,  5158,  1917,  1918,  5154,  5156,  5597,  1276,  5454,
     360,  3549,  5569,  1927,    15,  5445,  5443,    18,  5442,  4170,
    5645,  2786,  5599,  5445,  5742,  5948,  5284,  1941,  1942,  5719,
    1455,  4082,  5722,  1947,  1948,  1949,  1950,  1951,  1952,  1953,
    1954,  1955,   771,  3550,  2809,  4995,  5597,  1961,  4315,  5462,
    5856,  5855,  3745,  3729,   859,  1500,    57,   537,  4341,  4946,
    2331,  1975,  1976,  1891,  1978,  2841,  4964,  4040,   982,  3810,
    3786,  4836,  2996,  5763,  5763,   839,   556,   557,  2432,  4561,
    2429,   561,   562,   563,   434,    86,  2000,  5763,    89,  2430,
    2211,  2351,  2431,  1496,  5441,  5440,   426,  2011,  5265,  4258,
    3667,   431,  5074,   104,   105,  4503,  5796,  5230,  5798,  4915,
    4507,  2876,   442,  5814,  2672,  5418,    16,    17,  6038,  5897,
    2885,  5234,    22,    23,  2889,  5985,  6040,  2869,  4699,  5714,
    2895,  4250,    32,  5577,  5917,  4767,  5260,  3620,  3621,  4259,
    3623,  3624,  5037,  5833,  5969,  2910,  2060,   148,  5838,   629,
    5659,  5763,  5793,  3082,  5796,  5845,  5054,  3605,    58,  3827,
    2074,  5808,  5787,  2272,  3910,  2079,   167,  4475,  4478,  4470,
      70,  6012,  5956,    71,   175,   176,   492,   492,  5494,  5921,
    5957,  5845,  5838,  5572,  4066,  2296,  2100,  4258,  4595,  4763,
      90,  1290,  3532,  2107,  2108,  2109,  5821,  5822,   678,  3527,
    2114,  5891,  2116,  1474,  2089,  5895,  5516,  2987,  5803,  2688,
    5835,  5333,  5902,  2809,   112,  2247,  3800,  2131,  3164,  4376,
     537,   705,  1434,   123,   708,   575,  3351,   349,  2142,  2143,
    3713,  5921,   777,   717,   356,  5925,  2150,  3600,  3474,  1213,
    1423,  3410,  4350,  5854,  4494,  3284,   146,   147,  1387,   149,
     372,  3280,  1881,  6003,   152,  3944,  1823,   157,   158,   159,
     382,   383,   384,  1733,  5954,   266,  5956,  5957,  2143,  1385,
     392,   601,  2138,  5301,   275,   276,   277,   177,  1701,  1385,
    1385,  5906,  5010,  1385,  5909,  4553,  5748,  1385,  2202,  4954,
    5749,  2133,   622,  1707,  2924,  3362,  2159,   627,  3936,  3592,
    4654,  4653,  3934,  5225,  5691,  5344,  4940,  5932,  5221,  3596,
    2224,  5242,   212,   783,  1415,  4658,  1441,  6067,   510,  2918,
    3116,   492,  1642,  6013,  3158,  1901,  6016,  4927,   658,  3631,
    2244,  4960,  4550,  5894,  3398,   695,   882,   237,  2343,  2782,
    1967,   883,  2783,   243,  3468,  1437,   527,   692,  6038,   692,
    2835,  5347,  5249,  2078,  4379,  6036,  5015,  5310,  6063,  3124,
     690,  6109,  3127,  6053,  2278,  6103,  1056,  4512,   268,   269,
     270,  2802,  3345,   982,    29,  3427,  3449,  4540,   691,  3428,
    2736,  2407,  2613,    38,  3149,   691,   688,  2107,  1638,   390,
    1194,  4185,  4672,   293,   294,  2981,  3403,   398,  3543,  2313,
    2314,  5386,  1909,  3788,  4265,    60,   731,  1331,   516,   492,
     492,   533,    17,   492,    -1,    -1,    -1,  6001,    -1,    -1,
      -1,    -1,  6112,    -1,   774,   547,    -1,    -1,    -1,  2343,
      -1,  2345,    87,    -1,    -1,    -1,  2350,    92,    -1,    -1,
      -1,   341,    97,   343,   344,    -1,    -1,    -1,  2362,  2363,
      -1,    -1,    -1,    -1,    -1,  2369,   111,    -1,    -1,   359,
      -1,    -1,  2376,  2377,    -1,  2379,  2380,    -1,    -1,    -1,
      -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,
    2394,    -1,    -1,  2397,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2407,    -1,   150,   396,    -1,   398,    -1,
    2414,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,  2423,
      -1,   633,  2426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,   421,    -1,    -1,    -1,    -1,   648,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   455,   456,    -1,    -1,    -1,
      -1,    -1,    -1,   685,   219,    -1,    -1,    -1,    -1,    -1,
     225,   226,    -1,    -1,   472,    -1,    -1,   699,    -1,    -1,
      -1,    -1,    -1,    -1,   239,    -1,    -1,   487,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   502,   503,    -1,   505,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,   517,
     518,    -1,   520,   521,   522,  3390,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3405,    -1,   542,   543,   544,   300,    -1,   252,    -1,    -1,
     550,   551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,    -1,  2577,    -1,    -1,    -1,   567,   568,  2583,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   339,  2599,    -1,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   705,   360,    -1,   708,    -1,    -1,
     610,    -1,    -1,    -1,    -1,    -1,   717,    -1,    -1,    -1,
    4203,   619,   620,  4206,    -1,    -1,  4209,  4210,  4211,  4212,
      -1,  4214,  4215,  4216,  4217,    -1,  4219,  4220,    -1,  4222,
      -1,    -1,    -1,  4226,    -1,    -1,    -1,  4230,  4231,  4232,
    4233,    -1,  4235,  4236,    -1,    -1,    -1,    -1,  4241,  4242,
    5658,    -1,  4245,  4246,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2686,  2687,  2688,    -1,    -1,    -1,    -1,   434,
      -1,    -1,  2696,    -1,    -1,    -1,  2700,  2701,  2702,  2703,
      -1,    -1,    -1,    -1,  2708,  2709,  3561,  2711,    -1,    -1,
      -1,   406,   702,    -1,    -1,   705,    -1,  3572,   708,    -1,
      -1,  3576,    -1,    -1,    -1,   420,    -1,   422,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,  2743,
    2744,   731,    -1,    38,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2756,    -1,    -1,    -1,    -1,    -1,   453,     5,
     750,     7,     8,    -1,    -1,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    76,  2786,    78,    -1,    31,    -1,    33,    -1,    -1,
      -1,    -1,    87,    39,    -1,    -1,    -1,    92,  2802,  2803,
      -1,    -1,    97,  2807,  2808,  2809,   501,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   519,    -1,    -1,    73,    -1,    -1,
     575,   126,    -1,  2837,    80,    -1,    -1,    -1,   133,  5827,
    2844,    -1,    -1,    -1,  2848,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,  2873,
    2874,  2875,  2876,    -1,  2878,    -1,  2880,    -1,    -1,    -1,
     175,  2885,  2886,  2887,    -1,  2889,    -1,    -1,    -1,    -1,
      -1,  2895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,    -1,   600,  2910,    -1,    -1,    -1,
    2914,    -1,   607,  3768,  2918,  2919,    -1,    -1,    -1,    -1,
      -1,    -1,   617,    -1,   219,    -1,    -1,    -1,    -1,  5917,
     225,   226,    -1,    -1,   180,   630,    -1,    -1,   184,    -1,
      -1,    -1,    -1,    -1,   239,  3800,   192,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   661,    -1,    -1,   664,
      -1,    -1,   218,    -1,    -1,    -1,    -1,  2981,    -1,    -1,
     725,    -1,    -1,  2987,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5983,    -1,    -1,    -1,    -1,
      -1,   696,    -1,   298,    -1,   300,    -1,    -1,   254,   255,
     256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3046,    -1,   339,    -1,    -1,    -1,    -1,    -1,
      -1,  3055,    -1,    -1,    -1,    -1,    -1,    -1,   304,    -1,
      -1,    -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   325,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,    -1,   335,
      -1,    -1,    -1,    -1,    16,    17,    -1,    -1,    -1,  6087,
      22,    23,    -1,  3107,    -1,  6093,    -1,    -1,   354,    -1,
      32,    -1,  3116,    -1,  3118,   361,    -1,    -1,    -1,    -1,
    3124,    -1,   417,  3127,    -1,    -1,  3130,   373,  3132,  3133,
      -1,    -1,    -1,    -1,   380,    -1,    58,    -1,    -1,   434,
    4713,    -1,  3146,    -1,    -1,  3149,    -1,    -1,    70,   395,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   405,
      -1,    -1,  4735,   409,   410,    -1,    -1,    -1,    90,    -1,
     416,    -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   428,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,   448,    -1,    -1,    -1,    -1,    -1,    -1,  3213,
      -1,  3215,    -1,    -1,    -1,    -1,  4071,  4072,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,    -1,   149,   474,    -1,
      -1,    -1,   478,    -1,    -1,   157,   158,   159,    -1,    -1,
      -1,    -1,   488,    -1,    -1,    -1,    -1,  4102,  4103,    -1,
      -1,    -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,
     575,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   538,    -1,   540,    -1,    -1,    -1,    -1,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,     6,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,
      17,   243,    -1,    -1,    -1,    -1,  3330,    -1,    -1,    -1,
      60,    -1,    -1,   579,    -1,    32,    -1,    -1,    -1,   585,
      -1,    -1,    61,    40,    41,    -1,   268,   269,   270,    -1,
      -1,    -1,    -1,    50,    -1,    -1,    -1,    87,    -1,    -1,
    3364,    80,    92,    -1,    -1,    -1,   612,    97,    65,    66,
      -1,   293,   294,    -1,    -1,    -1,    -1,   623,   624,   625,
      -1,   111,    -1,    -1,    -1,    -1,  3390,    -1,  3392,    -1,
     109,   110,    -1,    -1,    -1,   114,   126,    -1,   644,  3403,
    3404,  3405,    -1,   133,    -1,   651,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,  3419,    -1,   114,    -1,   341,
     150,   343,   344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   128,    -1,    -1,    -1,    -1,   682,   359,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,  3451,    -1,    -1,
      -1,   697,   698,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   710,    -1,    -1,   713,    -1,  3473,
      -1,    -1,    -1,   192,   396,    -1,   398,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   191,   225,   226,    -1,    -1,   421,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,   239,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   778,   455,   456,   254,   255,   256,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3556,    -1,    -1,    -1,    -1,  3561,    -1,    -1,
     279,    -1,    -1,    -1,    -1,   487,    -1,   264,  3572,    -1,
     300,    -1,  3576,    -1,   496,    -1,    -1,    -1,  3582,    -1,
      -1,    -1,   312,    -1,    -1,   304,  3590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3605,  3606,    -1,    -1,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   333,    -1,   335,    -1,    -1,    -1,
     542,   543,   544,    -1,    -1,    -1,    -1,    -1,   550,   551,
     360,    -1,    -1,    -1,   331,   354,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   340,    -1,   567,   568,    -1,    -1,    -1,
      -1,  3655,    -1,    -1,   373,   352,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,   363,  3671,    -1,   591,
     592,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   405,   417,   610,    -1,
     387,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   420,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   419,   420,    -1,    -1,   423,    -1,   425,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3748,    -1,    -1,  4602,    -1,    -1,
      -1,    -1,  4607,    -1,   451,   452,    -1,    -1,    -1,   478,
      -1,    -1,   459,   460,  3768,    -1,    -1,    -1,    -1,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
     702,    -1,    -1,   705,  3788,    -1,   708,    -1,    -1,  3793,
    3794,  3795,  3796,  3797,    -1,    -1,  3800,    -1,    -1,    -1,
      -1,   498,    -1,    -1,    -1,    -1,   525,    -1,    -1,   731,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,
      -1,    -1,   519,    -1,    -1,    -1,    -1,    -1,   750,    -1,
       5,    -1,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   575,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
     579,    -1,    -1,    -1,    39,    -1,   585,  4722,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   575,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,  3906,   600,    -1,    -1,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   618,    -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,
      -1,    -1,   651,    -1,   109,   110,    -1,    -1,    -1,   114,
      -1,  3945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3959,    -1,   654,    -1,    -1,
      -1,    -1,    -1,   682,   661,  3969,    29,    -1,    -1,    -1,
     145,  3975,  3976,  3977,  3978,    38,  3980,    -1,   697,   698,
      -1,    -1,    -1,   680,    -1,   682,    -1,    -1,    -1,    -1,
      -1,   710,  3996,  3997,    -1,    -1,    -1,    60,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,  4025,    -1,    -1,    87,    -1,    -1,  4031,    -1,    92,
      -1,    -1,    -1,    -1,    97,   732,    -1,    -1,    -1,    -1,
      -1,   738,    -1,   218,    -1,    -1,    -1,    -1,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,
      -1,  4065,    -1,   126,    -1,    -1,    -1,  4071,  4072,    -1,
     133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   254,
     255,   256,  4086,    -1,    -1,    -1,    -1,   150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4102,  4103,
      -1,    -1,    -1,    -1,   279,  4109,    -1,    -1,    -1,    -1,
      -1,    32,   175,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4976,    32,    -1,    34,    -1,    -1,    -1,    -1,   304,
      -1,    -1,    -1,  5706,  5707,    -1,  5709,  5710,  5711,  5712,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     325,    61,    -1,    -1,    -1,    -1,   219,    -1,   333,    -1,
     335,    -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   239,    -1,    -1,   354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,   373,   109,
     110,    -1,    -1,    -1,   114,   380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,   137,    -1,   139,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     405,    -1,    -1,    -1,   409,    -1,    -1,   300,    -1,    -1,
    4244,   416,    -1,    -1,    -1,   420,    -1,  5820,    -1,    -1,
    5823,    -1,    -1,    -1,    -1,  4259,    -1,    -1,  5831,    -1,
      -1,    -1,    -1,  5836,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,   448,    -1,  5130,   339,    -1,    61,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   360,    -1,    -1,
      -1,    -1,    -1,   478,    -1,    -1,  4310,    -1,    -1,    -1,
      -1,  4315,    -1,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,   114,    -1,   254,   255,   256,    -1,  4341,    -1,    -1,
    4344,    -1,    -1,  4347,   254,   255,   256,    -1,    -1,    -1,
     525,    -1,    -1,    -1,   417,    -1,    -1,    -1,   279,    -1,
    4364,    -1,    -1,   538,    -1,   540,    -1,    -1,    -1,   279,
      -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   304,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   304,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   579,    -1,    -1,    -1,    -1,   192,
     585,    -1,   333,    -1,   335,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   333,    -1,   335,    -1,    -1,    -1,    -1,
      -1,   352,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   352,    -1,   354,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,  4466,   373,    -1,    -1,    -1,    -1,    -1,   644,
     380,   254,   255,   256,   395,    -1,   651,    -1,    -1,  4483,
      -1,    -1,    -1,    -1,   405,   395,    -1,    -1,    -1,    -1,
    4494,    -1,    -1,    -1,    -1,   405,   279,    -1,    -1,   420,
      -1,    -1,    -1,  4507,    -1,    -1,    -1,   682,  4512,  4513,
     420,    -1,   575,    -1,  4518,  4519,    -1,    -1,    -1,    -1,
    4524,   304,   697,   698,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5389,   710,  4540,  4541,    -1,    -1,
      -1,    -1,    29,    -1,    -1,    -1,  4550,    -1,    -1,    -1,
     333,    38,   335,    -1,    -1,    -1,    -1,   478,    -1,  4563,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,   478,    -1,
      -1,   354,    -1,    60,    -1,    -1,    -1,    -1,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,   380,  4602,    -1,
      87,  4605,    -1,  4607,   525,    92,    -1,    -1,    -1,    -1,
      97,    -1,   395,    -1,    -1,   525,    -1,   538,    -1,    -1,
      -1,    -1,   405,    -1,   111,    -1,    -1,    -1,   538,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,    -1,   126,
      -1,  4645,    -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,
    4654,    -1,    -1,    -1,    -1,    -1,    -1,  5512,   579,    -1,
      -1,    -1,    -1,   150,   585,    -1,    -1,    -1,  4672,   579,
      -1,    -1,    -1,    -1,    -1,   585,    -1,    -1,    -1,    -1,
      -1,    -1,  4686,    -1,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,  4703,
      -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,    -1,
    4714,    -1,  4716,    -1,    -1,    -1,    -1,    -1,  4722,    -1,
      -1,    -1,    -1,   644,  4728,    -1,    -1,    -1,    -1,    -1,
     651,    -1,   219,    -1,   644,    -1,  4740,  4741,   225,   226,
      -1,   651,   525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   239,    -1,    -1,   538,    -1,  4761,    -1,    29,
      -1,   682,    -1,  4767,  4768,    -1,    -1,    -1,    38,  4773,
      -1,    -1,   682,    -1,    -1,  4779,   697,   698,    -1,    -1,
    4784,    -1,    -1,    -1,    -1,    -1,    -1,   697,   698,   710,
      60,    -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,    29,
     710,    -1,   585,    -1,    -1,    -1,    -1,    -1,    38,  4813,
      -1,    -1,    -1,   300,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,    -1,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,   126,    87,    -1,    -1,
      -1,   644,    92,   133,    -1,    -1,    -1,    97,   651,    -1,
      -1,    -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,
     150,   111,    -1,    -1,    -1,    -1,  5741,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,   682,
      -1,    -1,    -1,   133,    -1,   175,    -1,    -1,    -1,    -1,
      29,  4915,    -1,    -1,   697,   698,    -1,    -1,    -1,    38,
     150,    -1,    -1,  4927,    -1,    -1,    -1,   710,    -1,    -1,
     417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    60,  4946,    -1,    -1,   175,    -1,   434,    -1,   219,
    4954,    -1,    -1,    -1,    -1,   225,   226,    -1,    -1,    -1,
    4964,    -1,    -1,    -1,  4968,    -1,    -1,    -1,    87,   239,
      -1,    -1,  4976,    92,    -1,    29,    -1,    -1,    97,    -1,
      -1,  4985,    -1,    -1,    38,    -1,    -1,    -1,    -1,   219,
      -1,  4995,   111,    -1,    -1,   225,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    60,   126,    -1,   239,
      -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   150,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,
      -1,  5045,    -1,    97,    -1,    -1,  5050,  5051,  5052,    -1,
    5054,  5055,    -1,  5057,    -1,    -1,   175,   111,  5062,  5063,
      -1,    -1,    -1,  5067,    -1,    -1,    -1,    -1,    -1,   339,
     300,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   670,   575,    -1,
     360,    -1,    -1,    -1,    -1,    -1,   150,    -1,  5102,    -1,
     219,    -1,  5106,    -1,  5108,    -1,   225,   226,    -1,   339,
      -1,    -1,    -1,    -1,    -1,   698,    -1,    -1,    -1,    -1,
     239,   175,    -1,  5127,    -1,    -1,  5130,    -1,    -1,  5133,
     360,    -1,    -1,    -1,    -1,   718,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5150,   417,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   434,   219,    -1,    -1,    -1,    -1,
      -1,   225,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,   239,    -1,   417,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5232,    -1,
      -1,    -1,  5236,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   360,  5246,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,  5255,  5256,  5257,    -1,   838,  5260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5287,    -1,   339,    -1,    -1,  5292,    -1,
      -1,    -1,  5296,    -1,  5298,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   575,   360,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5318,   434,    -1,    -1,    -1,    -1,
      -1,  5325,    -1,    -1,  5328,  5329,    -1,    -1,  5332,    -1,
      -1,    -1,  5336,    -1,  5338,    -1,    -1,    -1,    -1,    -1,
    5344,    -1,    -1,  5347,    -1,   575,    -1,    -1,    -1,  5353,
      -1,    -1,   935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5381,    -1,    -1,
     434,    -1,    -1,    -1,    -1,  5389,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   985,    -1,    -1,    -1,    -1,   990,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5431,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1020,    -1,    -1,
    1023,    -1,    -1,    -1,    -1,    -1,    -1,  1030,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   575,    -1,  5462,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5488,  1068,    -1,    -1,    -1,  5493,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5512,    -1,
      -1,    -1,    -1,  5517,    -1,    -1,    -1,    -1,    -1,    -1,
    5524,   575,    -1,    -1,    -1,    -1,    -1,    -1,  5532,  5533,
      -1,    -1,    -1,    -1,    -1,    -1,  1119,  1120,  1121,  1122,
      -1,    -1,  1125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1133,    -1,    -1,    -1,  5558,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5572,    -1,
      -1,    -1,  5576,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5587,    -1,  5589,  5590,    -1,    -1,    -1,
      -1,    -1,  5596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5620,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5684,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1310,    -1,    -1,
      -1,  1314,    -1,    -1,  5738,    -1,    -1,  5741,    -1,    -1,
    5744,  5745,    -1,    -1,  5748,  5749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5757,    -1,  5759,  5760,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5774,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5787,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5803,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5814,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5827,    -1,    -1,    -1,    -1,  1411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5848,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1442,
      -1,    -1,    -1,    -1,  5868,  5869,    -1,    -1,  5872,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1482,
      -1,    -1,  1485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5917,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5932,    -1,
      -1,    -1,    -1,    -1,    -1,  5939,    -1,    -1,    -1,    -1,
      -1,  5945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5953,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5983,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6000,  6001,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6083,
      -1,    -1,    -1,  6087,    -1,    -1,    -1,    -1,    -1,  6093,
      -1,    -1,    -1,  6097,    -1,    -1,    -1,    -1,  1681,  6103,
      -1,    -1,    -1,    -1,    -1,  6109,    -1,    -1,    -1,    -1,
      -1,  1694,  1695,    -1,    -1,    -1,    -1,  1700,    -1,    -1,
      -1,  1704,  1705,  1706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1715,  1716,  1717,    -1,    -1,    -1,  1721,    -1,
    1723,  1724,  1725,  1726,  1727,    -1,  1729,    -1,    -1,  1732,
    1733,    -1,    -1,    -1,    -1,    -1,    -1,  1740,    -1,  1742,
      -1,    -1,  1745,  1746,    -1,  1748,  1749,  1750,    -1,  1752,
    1753,  1754,    -1,    -1,    -1,    -1,  1759,    -1,    -1,  1762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1770,  1771,    -1,
    1773,  1774,  1775,    -1,    -1,  1778,  1779,  1780,  1781,  1782,
    1783,  1784,    -1,  1786,  1787,  1788,  1789,  1790,  1791,    -1,
    1793,  1794,    -1,  1796,  1797,  1798,  1799,  1800,  1801,  1802,
      -1,    -1,  1805,  1806,  1807,  1808,    -1,  1810,  1811,  1812,
      -1,  1814,    -1,  1816,    -1,  1818,    -1,    -1,    -1,  1822,
    1823,  1824,    -1,    -1,  1827,  1828,  1829,  1830,  1831,    -1,
    1833,    -1,    -1,    -1,    -1,    -1,    -1,  1840,    -1,    -1,
      -1,    -1,    -1,    -1,  1847,  1848,  1849,  1850,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1858,  1859,  1860,    -1,  1862,
    1863,  1864,  1865,  1866,  1867,    -1,  1869,  1870,  1871,  1872,
    1873,  1874,  1875,  1876,    -1,    -1,    -1,  1880,    -1,    -1,
      -1,    -1,  1885,    -1,    -1,    -1,    -1,    -1,    -1,  1892,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1925,    -1,    -1,    -1,    -1,  1930,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1940,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2007,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2035,    -1,  2037,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2059,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2071,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2156,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2326,  2327,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2432,
      -1,  2434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2442,
    2443,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   670,
      -1,    -1,    -1,  2506,  2507,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   698,  2531,  2532,
    2533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2545,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2598,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2609,    -1,    -1,  2612,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2639,    -1,    -1,  2642,
      -1,  2644,    -1,    -1,    -1,    -1,    -1,  2650,    -1,  2652,
    2653,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   838,    -1,    -1,
      -1,    -1,    -1,  2676,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2690,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2707,    -1,    -1,  2710,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2733,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   935,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2796,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   990,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2839,    -1,  2841,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1020,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1030,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2921,    -1,
      -1,    -1,    -1,    -1,    -1,  2928,    -1,    -1,  2931,  2932,
    2933,    -1,  2935,    -1,  2937,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2991,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1310,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3205,    -1,    -1,  3208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3226,    -1,  3228,    -1,  3230,    -1,  3232,
    3233,  3234,  3235,  3236,  3237,    -1,  3239,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3247,    -1,  3249,    -1,    -1,  3252,
    3253,  3254,  3255,    -1,    -1,  3258,  3259,    -1,    -1,  3262,
      -1,  3264,    -1,  3266,    -1,  3268,    -1,    -1,    -1,  3272,
      -1,  1442,    -1,    -1,    -1,    -1,    -1,  3280,    -1,  3282,
      -1,  3284,  3285,  3286,  3287,  3288,    -1,    -1,  3291,  3292,
    3293,    -1,  3295,    -1,    -1,  3298,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3311,    -1,
      -1,  1482,    -1,  3316,  1485,    -1,  3319,    -1,  3321,  3322,
    3323,    -1,    -1,  3326,    -1,    -1,    -1,    -1,    -1,  3332,
      -1,    -1,    -1,    -1,  3337,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3346,    -1,    -1,    -1,    -1,    -1,  3352,
      -1,  3354,    -1,    -1,    -1,    -1,    -1,  3360,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3368,  3369,  3370,    -1,    -1,
      -1,    -1,  3375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3386,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3420,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3447,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1645,  3478,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3498,    -1,  3500,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1681,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1700,
      -1,    -1,    -1,  1704,    -1,  1706,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1715,  1716,    -1,    -1,    -1,    -1,
    1721,    -1,  1723,  1724,  1725,  1726,  1727,    -1,  1729,    -1,
      -1,    -1,    -1,    -1,    -1,  3568,    -1,    -1,    -1,  1740,
      -1,  1742,    -1,    -1,  1745,  1746,    -1,  1748,  1749,    -1,
      -1,  1752,  1753,  1754,    -1,    -1,  3589,    -1,  1759,    -1,
      -1,  1762,    -1,  3596,    -1,    -1,    -1,    -1,    -1,  1770,
    1771,    -1,  1773,    -1,  1775,    -1,    -1,  1778,  1779,  1780,
    1781,  1782,  1783,  1784,    -1,  1786,  1787,  1788,  1789,  1790,
      -1,    -1,  1793,  1794,    -1,    -1,  1797,  1798,  1799,    -1,
      -1,    -1,    -1,    -1,  1805,  1806,  1807,    -1,    -1,  1810,
    1811,  1812,    -1,  1814,    -1,  1816,    -1,  1818,    -1,    -1,
      -1,  1822,  1823,  1824,    -1,    -1,  1827,  1828,  1829,  1830,
    1831,    -1,  1833,    -1,    -1,    -1,    -1,    -1,    -1,  1840,
      -1,    -1,    -1,    -1,    -1,  3678,  1847,  1848,  1849,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1925,    -1,    -1,    -1,    -1,  1930,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3771,  1940,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3808,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3820,    -1,    -1,
    3823,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2007,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3847,  3848,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2035,    -1,  2037,    -1,  3871,    -1,
    3873,    -1,  3875,    -1,  3877,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3899,    -1,    -1,    -1,
    2071,    -1,  3905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3920,  3921,    -1,
      -1,    -1,    -1,    -1,  3927,    -1,    -1,    -1,  3931,    -1,
      -1,    -1,    -1,  3936,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3949,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3982,
    3983,  3984,    -1,    -1,    -1,  2156,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3998,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4019,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4040,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4106,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4128,    -1,  4130,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2326,  2327,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2410,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2432,    -1,  2434,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2442,  2443,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2531,  2532,  2533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4412,
    4413,    -1,  4415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4424,    -1,  4426,    -1,    -1,  4429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4442,
      -1,  4444,    -1,  4446,    -1,  4448,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4461,  4462,
    2631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2642,    -1,  2644,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2676,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2690,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2707,    -1,    -1,  2710,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4552,
      -1,    -1,    -1,  4556,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2733,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2755,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2796,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2921,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2935,    -1,  2937,    -1,    -1,    -1,
      -1,    -1,    -1,  4776,  4777,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2991,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4853,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4911,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4928,    -1,    -1,    -1,    -1,
    4933,  4934,  4935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4960,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5000,    -1,  5002,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3205,    -1,    -1,  3208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3226,    -1,    -1,    -1,  3230,
      -1,  3232,  3233,  3234,  3235,  3236,  3237,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3247,    -1,  3249,    -1,
      -1,  3252,  3253,  3254,  3255,    -1,    -1,  3258,  3259,    -1,
      -1,  3262,    -1,  3264,    -1,  3266,    -1,  3268,    -1,    -1,
      -1,  3272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3280,
      -1,  3282,    -1,  3284,    -1,  3286,  3287,  3288,    -1,    -1,
    3291,  3292,  3293,    -1,  3295,    -1,    -1,  3298,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3311,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3319,    -1,
    3321,  3322,  3323,    -1,    -1,  3326,    -1,    -1,    -1,    -1,
      -1,  3332,    -1,  5166,    -1,    -1,  3337,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3346,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5191,  3360,
      -1,  5194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3370,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3420,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3447,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5321,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3498,    -1,  3500,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5392,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5418,    -1,    -1,  3589,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3678,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5537,    -1,    -1,    -1,    -1,    -1,
      -1,  5544,  5545,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3785,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3808,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3820,
      -1,    -1,  3823,    -1,    -1,    -1,  5659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5671,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3847,  3848,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3871,    -1,  3873,    -1,  3875,    -1,  3877,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3899,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3920,
    3921,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5763,    -1,    -1,    -1,    -1,  3936,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3949,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5798,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3983,  3984,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3998,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4019,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5895,    -1,    -1,    -1,    -1,    -1,    -1,  5902,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4106,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4128,    -1,  4130,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6038,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4412,  4413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4424,    -1,  4426,    -1,    -1,  4429,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4442,    -1,  4444,    -1,  4446,    -1,  4448,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4461,  4462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4552,    -1,    -1,    -1,  4556,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4776,  4777,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4853,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4911,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4928,    -1,    -1,
      -1,    -1,    -1,  4934,  4935,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4960,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5000,
      -1,  5002,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5194,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,    -1,
    5671,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,  5763,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,  5798,    -1,   153,
     154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,
     174,   175,   176,    -1,   178,   179,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,
      -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5895,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,  6112,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,    -1,   766,    -1,    -1,    -1,     6,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,   780,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,
     170,    -1,   172,    -1,   174,   175,   176,    -1,   178,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,
      -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,
      -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     760,   761,     7,     8,    -1,    -1,   766,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,   775,   776,    -1,    -1,   779,
     780,    -1,    27,    -1,    29,    -1,    31,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,    63,    -1,
      65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,
     145,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,   219,   220,    -1,   222,    -1,    -1,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,   283,    -1,
     285,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   300,   301,    -1,    -1,    -1,
      -1,    -1,    -1,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
      -1,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,    -1,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,     7,     8,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   771,    27,    -1,    29,
      -1,    31,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      60,    -1,    -1,    63,    -1,    65,    66,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,    -1,   145,    -1,    -1,    -1,    -1,
     150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,   219,
     220,    -1,   222,    -1,    -1,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,   283,    -1,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,    -1,    -1,    -1,    -1,    -1,    -1,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,    -1,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,    -1,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    27,    -1,    -1,    -1,    31,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,   220,    -1,   222,    -1,    -1,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,   283,    -1,
     285,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,
      -1,    -1,    -1,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
      -1,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,    -1,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,   771,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
     301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    25,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,   272,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,   113,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    94,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
     155,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,    -1,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   760,   761,    -1,    -1,    -1,    -1,   766,    29,    30,
      -1,    32,   771,    -1,    -1,    -1,   775,   776,    39,    40,
     779,   780,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
      -1,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,   760,
     761,    -1,    -1,    -1,    -1,   766,    29,    30,    -1,    32,
     771,    -1,    -1,    -1,   775,   776,    39,    40,   779,   780,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,    -1,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   760,   761,    -1,
      -1,    -1,    -1,   766,    29,    30,    -1,    32,   771,    -1,
      -1,    -1,   775,   776,    39,    40,   779,   780,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   760,   761,    -1,    -1,    -1,
      -1,   766,    29,    30,    -1,    32,   771,    -1,    -1,    -1,
     775,   776,    39,    40,   779,   780,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,   760,   761,    -1,    -1,    -1,    -1,   766,
      29,    30,    -1,    32,   771,    -1,    -1,    -1,   775,   776,
      39,    40,   779,   780,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,    -1,    -1,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    18,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   760,   761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   771,    -1,    -1,    -1,    -1,   776,    -1,    -1,
     779,   780,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   167,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    24,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,   780,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    24,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    32,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    32,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
      -1,   780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    35,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,     6,     7,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     6,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     6,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    36,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    11,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    17,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   238,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    16,    17,    -1,    -1,   755,    -1,    22,    23,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   157,   158,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,    -1,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,    -1,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,    -1,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,    -1,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,    -1,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    16,    17,    -1,
      -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,    -1,
     149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,    -1,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,    -1,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
      -1,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,    -1,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    -1,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    16,    17,    -1,    -1,    -1,    -1,    22,    23,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   157,   158,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,    -1,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,    -1,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,    -1,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,    -1,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,    -1,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    16,    17,    -1,
      -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,    -1,
     149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,    -1,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,    -1,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
      -1,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,    -1,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    17,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      17,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    17,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    18,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      45,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,    24,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    37,    38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      74,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    45,    46,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,   776,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    45,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    46,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    47,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    57,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    57,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,    -1,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,    -1,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   772,    -1,    -1,    -1,    -1,    -1,    -1,
     779,   780,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   780,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   780,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   779,   780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   780,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,    -1,   776,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   104,   747,   748,   749,
     750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   170,   171,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   246,   247,
     248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    94,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,   761,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    94,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
     755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,    -1,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,    -1,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,    -1,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,    -1,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,    -1,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,    -1,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,    -1,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,    -1,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,    -1,    -1,    -1,   341,   342,   343,   344,   345,    -1,
      -1,   348,   349,   350,   351,    -1,    -1,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,    -1,
      -1,    -1,    -1,    -1,    -1,   372,    -1,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,    -1,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    -1,    -1,
      -1,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,    -1,   459,   460,    -1,   462,   463,    -1,    -1,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   109,   110,
      -1,    -1,   579,   580,    -1,   582,   583,   584,   585,    -1,
     587,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,    -1,   624,    -1,   626,
     627,    -1,   629,   630,    -1,   632,   633,   634,   635,   636,
     637,    -1,   639,   640,   641,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,   653,   654,    -1,   656,
     657,    -1,    -1,   660,    -1,    -1,   663,   664,   665,    -1,
     667,    -1,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,    -1,   679,   680,    -1,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,    -1,   705,   706,
     707,   708,   709,   710,   711,   712,    -1,   714,   715,   716,
      -1,   718,   719,   720,   721,    -1,    -1,   724,   725,    -1,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,    -1,   743,   744,    -1,    -1,
     747,    -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,    -1,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,    -1,    -1,    -1,    -1,
     341,   342,   343,   344,   345,    -1,    -1,   348,   349,   350,
     351,    -1,    -1,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,    -1,   365,    -1,    -1,    -1,    -1,    -1,
      -1,   372,    -1,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
      -1,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,    -1,    -1,    -1,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,    -1,   459,   460,
      -1,   462,   463,    -1,    -1,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
      -1,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   109,   110,    -1,    -1,   579,   580,
      -1,   582,   583,   584,   585,    -1,   587,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,    -1,   624,    -1,   626,   627,    -1,   629,   630,
      -1,   632,   633,   634,   635,   636,   637,    -1,   639,   640,
     641,   642,   643,   644,   645,    -1,   647,   648,   649,    -1,
     651,   652,   653,   654,    -1,   656,   657,    -1,    -1,   660,
      -1,    -1,   663,   664,   665,    -1,   667,    -1,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,    -1,   679,   680,
      -1,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,    -1,   705,   706,   707,   708,   709,   710,
     711,   712,    -1,   714,   715,   716,    -1,   718,   719,   720,
     721,    -1,    -1,   724,   725,    -1,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,   743,   744,    -1,    -1,   747,    -1,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,    -1,    -1,    -1,    -1,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,    -1,
     365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
      -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,    -1,   459,   460,    -1,   462,   463,    -1,
      -1,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
      -1,    -1,    -1,    -1,   579,   580,    -1,   582,   583,   584,
     585,    -1,   587,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,    -1,   624,
      -1,   626,   627,    -1,   629,   630,    -1,   632,   633,   634,
     635,   636,   637,    -1,   639,   640,   641,   642,   643,   644,
     645,    -1,   647,   648,   649,    -1,   651,   652,   653,   654,
      -1,   656,   657,   109,   110,   660,    -1,    -1,   663,   664,
     665,    -1,   667,    -1,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,    -1,   679,   680,    -1,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,    -1,
     705,   706,   707,   708,   709,   710,   711,   712,    -1,   714,
     715,   716,    -1,   718,   719,   720,   721,    -1,    -1,   724,
     725,    -1,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,    -1,   743,   744,
      -1,    -1,   747,    -1,   749,   750,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,    -1,   342,    -1,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,    -1,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,    -1,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,    -1,    -1,    -1,   545,
     546,   547,   548,   549,    -1,    -1,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
      -1,    -1,    -1,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,    -1,    -1,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,    -1,    -1,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,    -1,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,    -1,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,    -1,   703,   704,    -1,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,    -1,    -1,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    60,    63,
      65,    66,    73,    80,    92,    98,   109,   110,   111,   119,
     130,   143,   145,   150,   180,   194,   195,   205,   206,   217,
     218,   219,   220,   222,   227,   233,   237,   241,   242,   281,
     283,   285,   290,   300,   301,   308,   309,   310,   311,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   353,   354,
     355,   356,   357,   358,   359,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   447,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   747,   748,   749,   750,
     771,   782,   785,   786,   787,   788,   789,   791,   797,   799,
     812,   888,   939,   940,   947,   948,   964,   965,  1000,  1021,
    1052,  1112,  1168,  1220,  1322,  1371,  1374,  1384,  1389,  1395,
    1408,  1411,  1417,  1420,  1425,  1432,  1444,  1447,  1450,  1451,
    1453,  1456,  1457,  1459,  1460,  1463,  1464,  1467,  1686,  1688,
    1701,  1704,  1738,  1746,  1761,  1770,  1784,  1788,  1789,  1793,
    1803,  1810,  1818,  1820,  1825,  1828,  1829,  1861,  1880,  1882,
    1890,  1904,  1905,  1908,  1910,  1911,  1912,  1913,  1917,  1947,
    1954,  1956,  1965,  1968,  2008,  2010,  2015,  2016,  2017,  2018,
    2050,  2059,  2060,  2061,    49,   204,   325,   403,   452,   500,
     651,   655,   697,   727,  1323,  2022,  2023,  2024,  2025,   173,
     449,   498,  1419,  1791,   312,   337,   339,   340,   347,   352,
     354,   360,   375,   385,   400,   412,   417,   431,   445,   446,
     452,   458,   461,   464,   479,   489,   561,   575,   594,   596,
     625,   628,   638,   646,   658,   678,   681,   713,   723,   741,
     748,   876,  1882,  1889,  1899,  1905,  1906,  1907,  1908,  1909,
    1910,  1911,  1912,  1001,   519,  1412,   185,   500,   697,  1023,
    1747,    49,   114,   191,   204,   273,   426,   452,   500,   637,
     655,   697,   700,   727,   735,  1700,  1055,   874,   966,  1702,
    1821,   114,   395,   749,  1834,   264,   696,  1950,  1053,  1419,
    1221,  1113,    17,   519,  1776,   237,   247,   936,   941,   943,
    1889,   646,   727,  1950,  1057,  1705,   941,   942,   874,  1454,
     679,  1914,  1771,   941,  1955,  1739,  1889,  1452,  1054,   213,
    1863,   145,   281,   676,  1804,  2009,   170,   171,  1020,  1501,
     266,   780,  1883,   114,  1950,  1889,   744,  2012,  1687,   473,
    1889,  1419,   390,   949,  1957,   798,   590,   668,  1889,  1419,
    1811,  2012,  1889,  1826,     6,   661,   709,     6,   661,  1762,
     590,   668,   338,   339,   375,   417,   596,   613,   638,   678,
    2053,  1453,  1460,  1463,     0,    80,   783,   596,    49,    95,
     244,   280,   637,   727,   832,  1301,  1302,  1303,  1700,  2022,
    2023,  2024,  2025,    94,   122,  1470,  1471,  1682,  1448,  1445,
      83,   120,   279,  1462,  2019,  1461,  2019,   438,   449,   583,
     779,  1790,  1791,  1877,  1889,  1457,  1459,   238,   779,  1339,
    1889,   876,   755,   755,   876,    99,   111,  1699,   138,  1883,
    1889,  1894,  1060,  1061,  1064,  1087,  1889,  1699,  1363,  1364,
     251,  1488,  2026,  2027,  2022,   755,  1950,  1444,  1447,  1701,
    1704,  1738,  1746,  1787,   889,   779,   298,  1002,  1003,  1006,
    1010,   810,   811,  1883,   735,  1409,  1950,   220,    99,  1062,
    1087,    37,    38,    47,   433,   434,   741,   911,   912,   914,
     915,   922,   923,   924,   926,   932,   959,   960,  1882,  1890,
    1902,  1905,  1906,  1907,  1908,  1910,  1912,   113,   151,   466,
     608,  1749,  1759,  1760,  1699,  1690,    24,  1699,  1699,  1699,
    1699,  1699,    99,  1699,  1699,  1087,  1699,  1699,   651,  1950,
    1037,  1890,     6,     7,    41,    46,    63,    73,    98,   114,
     119,   145,   215,   233,   241,   273,   283,   284,   426,   431,
     442,   601,   605,   622,   627,   658,   690,  1894,  1969,  1973,
    1974,  1976,  1978,  1979,   995,   996,   151,   404,   465,  1707,
     462,   667,  1822,   122,  1830,  1948,    38,    87,    97,   126,
     133,   175,   225,   226,   239,   360,   434,   575,   908,   962,
     963,   965,   970,   971,   972,   973,   977,   978,   979,   980,
     981,   990,   991,   992,   993,  1000,  1015,  1016,  1021,  1039,
    1045,  1052,  1892,  1893,  1950,    17,    18,    19,    20,    21,
      29,    30,    32,    39,    40,    43,    44,    45,    46,    48,
      49,    51,    52,    57,    61,    64,    84,    85,    86,    88,
      89,   100,   101,   102,   104,   105,   109,   110,   111,   119,
     121,   134,   148,   153,   154,   156,   162,   164,   167,   170,
     171,   172,   174,   175,   176,   178,   193,   197,   198,   199,
     201,   208,   219,   220,   228,   231,   251,   257,   258,   260,
     261,   262,   266,   274,   275,   276,   277,   287,   288,   289,
     295,   297,   321,   328,   336,   352,   361,   363,   364,   366,
     367,   368,   369,   370,   385,   397,   398,   399,   401,   402,
     449,   455,   457,   469,   491,   492,   496,   534,   536,   541,
     542,   543,   544,   554,   555,   571,   585,   591,   592,   599,
     606,   636,   642,   643,   649,   656,   686,   705,   706,   707,
     708,   712,   713,   727,   729,   739,   740,   742,   750,   760,
     761,   766,   771,   775,   776,   779,   780,  1463,  1469,  1495,
    1496,  1497,  1498,  1502,  1514,  1516,  1517,  1518,  1519,  1520,
    1521,  1522,  1523,  1524,  1525,  1526,  1534,  1538,  1539,  1540,
    1541,  1542,  1544,  1547,  1853,  1856,  1858,  1859,  1860,  1874,
    1881,  1882,  1889,  1899,    26,  1114,   501,   349,   356,   372,
     382,   383,   384,   392,   533,   547,   648,   685,   699,   944,
     946,   729,   937,   943,  1889,   874,  1421,   908,  1042,   151,
     404,  1708,  1745,   943,     6,   320,   605,  1966,  1967,  1974,
    1976,     6,    68,   249,   250,   259,   280,   465,   671,   672,
     673,   674,  1473,  1480,  1481,  2021,  1915,    32,    61,   352,
     452,   459,   498,   548,   585,   637,   654,   709,   741,   780,
    1265,  1882,  1887,  1889,  1903,  1905,  1906,  1907,  1909,  1910,
    1911,  1912,  1922,  1934,  1938,     6,    40,    41,    50,   114,
     128,   191,   204,   264,   331,   340,   352,   363,   387,   420,
     423,   425,   451,   452,   459,   460,   476,   498,   519,   575,
     589,   600,   603,   604,   618,   654,   661,   682,   738,  1265,
    1300,  1772,  1776,  1777,  1779,  1788,  1882,  1935,   943,  1950,
    1745,   771,  1718,  1727,  1040,  1495,  1862,  1805,  1889,  2012,
    1022,   330,  1894,  1426,  1385,   779,    10,  2013,  1495,  1567,
     792,   286,   794,  1794,   407,  1877,  1879,  1889,  1958,  1894,
     111,  1167,  1883,    94,  1390,   519,   607,   661,  1812,  1813,
     271,  2013,   737,  1827,   662,   810,   210,   301,  1375,  1376,
    1377,   662,   810,   264,  1765,  1699,  1699,    18,   104,   105,
     266,  1854,  1855,  1884,  2052,  2052,  2052,   449,  2051,  2052,
    2052,   772,   772,   778,  1889,  1167,  1167,  1167,   655,   858,
     114,   114,   114,   264,   651,   191,   204,   273,   426,  2026,
     324,   875,   875,  2022,    74,   771,   776,  1469,  1472,  1573,
    1574,  1575,  1576,  1577,  1588,  1589,  1590,  1591,  1593,  1594,
    1595,  1877,   188,   413,  1677,  1678,  1683,   299,  1618,  1470,
      92,   140,   145,   184,  1482,  1644,  1649,  1655,  1656,  1660,
     204,  1659,  1672,  1682,     6,    68,  2020,  1655,  1657,  1463,
    1466,  1467,  1656,  1658,  1465,     6,  1889,  1786,  1785,   779,
    1449,  1446,  1918,  1889,  1325,   726,  1326,   532,   701,   719,
      45,  1894,  1895,  1896,  1973,  1327,  1066,  1088,  1889,    84,
    1332,  1331,     5,    31,    73,   171,   211,   611,  1089,   874,
     264,   113,   574,  1365,  1366,  1367,   650,   426,   735,  2026,
    1894,  1396,   771,   890,  1889,  1011,    76,  1013,  1495,  1010,
     271,  1410,  1693,  1694,  1877,  1065,  1088,     5,  1890,  1024,
     913,   924,   926,    16,    17,    22,    23,    32,    58,    70,
      90,   123,   146,   147,   149,   157,   158,   159,   177,   212,
     237,   243,   268,   269,   270,   293,   294,   341,   343,   344,
     359,   396,   398,   421,   444,   455,   456,   487,   496,   542,
     543,   544,   550,   551,   567,   568,   591,   592,   610,   642,
     702,   705,   708,   731,   741,   750,   917,   959,  1227,  1229,
    1231,  1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,
    1242,  1263,  1882,  1905,  1908,  1910,  1912,   778,   778,   461,
     774,    35,   312,    94,  1750,    94,  1750,  1751,  1752,  1756,
    1757,  1889,  1759,  1889,   111,  1698,  1699,   876,   876,   876,
     876,  1889,  1088,   874,  1894,  1098,  1777,   874,  1691,  1699,
    1699,  1056,   124,  1038,   600,  1977,   640,   640,   697,   700,
     727,   735,   771,  1494,   466,   577,  1981,   696,  1983,  1980,
      50,   735,  1982,   179,   357,   661,   271,   179,   774,   417,
    1495,   113,  1362,   380,   607,  1823,   347,   151,   379,  1836,
    1877,  1951,  1952,   298,   378,   452,  1882,  1891,  1900,  1908,
    1910,  1911,  1912,    94,    99,   554,  1889,  1891,  1891,  1891,
    1891,  1889,   298,  1891,  1889,   417,   962,   778,   786,   967,
    1890,   974,   994,  1889,    60,   339,    92,   150,   219,   300,
     963,  1893,  1418,   121,   760,   761,  1519,   771,   771,   771,
     298,  1495,  1570,  1571,   771,   771,   771,   771,   771,  1494,
    1494,  1494,   771,  1493,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,  1495,   771,
     109,   110,   364,   771,  1568,  1569,  1874,  1881,  1899,   771,
     771,   771,   771,  1495,  1493,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   196,   771,   771,   771,
     771,  1493,   771,   266,  1855,  1494,  1493,  1493,   771,   771,
     771,   771,   771,   771,   771,   771,   176,  1881,   771,   771,
     771,   771,   771,   771,   771,   266,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   729,   771,   771,   771,   771,   771,   729,
     771,   771,   771,   771,   771,   771,   771,   266,   771,   771,
     771,   266,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   121,  1519,   121,  1519,  1519,  1222,  1463,  1495,  1861,
    1889,  1881,  1548,     9,    10,   183,   185,   305,  1499,  1500,
      81,    96,   125,   131,   168,   755,   756,   757,  1503,    15,
      69,   124,   139,   164,   182,   216,   239,   240,   669,   758,
     759,   760,   761,   762,   763,   764,   765,  1501,  1519,    34,
     165,   190,   190,   742,  1884,   779,   771,   196,  1115,    14,
     271,   774,   755,  1884,  1422,  1895,  1897,  1423,  1424,  1877,
     725,   122,  1709,  1710,  1711,  1977,   577,   179,    94,   179,
    1455,  1481,    61,  1889,  1921,  1937,   237,   637,   779,    17,
      61,   238,   755,  1266,  1267,  1721,  1894,    92,  1721,  1944,
    1721,  1894,  1924,   780,  1894,    17,    61,  1269,  1270,  1894,
    1721,   779,  1925,  1923,   662,   771,    49,   191,   204,   264,
     273,   426,   452,   651,   727,   735,   139,   299,  1783,    24,
     680,   362,   680,   680,   425,  1783,     6,  1179,  1894,  1648,
    1649,  1650,    94,   124,  1778,  1780,   362,   680,    92,   680,
     696,   668,     6,   342,   386,   388,   482,   531,   580,   670,
     692,  1766,  1767,  1768,   810,   468,   680,   811,  1650,  1783,
    1780,   501,   419,   365,   602,   696,   711,    92,  1487,   680,
     732,  1362,  1728,   774,   150,  1864,  1865,  1869,  1889,  1877,
    1025,  1030,   774,  1427,  1428,  1429,  1430,  1877,  1693,  1889,
     350,   561,   217,   561,  2014,   774,  1495,   795,    17,   252,
     406,   420,   422,   453,   468,   501,   519,   600,   607,   617,
     630,   661,   664,   680,  1795,  1800,  1801,  1882,  1950,    35,
     780,   950,   951,   952,   953,  1881,   575,   210,   360,  1501,
    1889,   790,   735,  1387,  1950,  1815,   347,  1814,   774,   646,
    1889,  2014,    92,  1378,  1379,  1378,   573,   746,   381,   774,
    1378,  1378,  1694,  1889,  1883,   774,   572,  2055,   691,  2056,
     755,   127,   632,  2054,    80,   784,  1889,   874,   874,  1167,
    1167,   818,   820,  1167,  1167,    24,  1167,  1167,   825,   827,
     735,   452,   452,  2026,  1573,  1577,  1589,  1590,  1591,  1592,
    1593,  1889,    93,  1478,    42,   116,   127,   134,   166,   228,
     259,  1584,  1585,   774,   195,  1586,  1587,   266,  1885,  1885,
     780,  1679,  1680,  1681,  1889,  1894,  1619,    99,  1623,  1618,
     283,   148,   176,   229,   276,   364,  1651,  1652,  1856,  1881,
     124,    26,  1648,  1482,  1889,  1482,  1483,  1483,  1466,  1787,
    1792,  1854,  1889,  1889,  1656,  1659,     6,    17,    61,   179,
    1495,  1946,   238,    61,  1164,  1165,  1176,  1177,  1274,   395,
     878,  1494,   780,   878,     5,  1067,  1877,   576,   394,  1084,
    1084,  1084,     4,  1895,  1896,  1897,  1989,  1993,  1877,  1367,
     403,   480,   876,  1877,   735,  1397,  1398,  1694,   891,   892,
    1495,  1495,   909,   910,   417,  1004,   800,  1693,    92,   351,
     438,   440,   530,   608,   774,  1413,  1414,  1415,  1067,  1084,
     925,   339,   915,   916,   778,   778,   771,  1247,  1249,  1247,
    1248,   378,  1247,  1256,  1257,   771,  1244,  1245,  1247,   202,
    1244,  1256,    17,   328,   346,   722,  1230,  1257,  1265,  1275,
    1277,    32,   293,  1230,  1237,  1239,  1256,  1230,  1244,   771,
    1256,  1230,  1247,  1249,  1230,  1248,   771,  1244,  1256,    32,
     294,   294,   296,  1244,  1247,   771,   921,  1248,  1248,  1248,
    1247,  1248,   196,   779,    34,  1272,  1244,   296,  1249,  1249,
    1247,  1247,  1248,   771,  1245,  1252,    61,   238,   961,    92,
    1889,    92,  1877,    14,  1748,  1696,  1697,  1878,  1889,    92,
    1476,  1477,  1618,   774,  1753,   779,  1758,    84,  1889,   876,
     779,  1098,  1972,  1974,   564,   737,  1099,  1100,   420,  1897,
    1988,  1693,  1692,  1689,   150,   636,  1036,   696,   772,   771,
    1997,  1997,  1997,  1997,  1897,  1989,   191,   204,   264,   452,
    1975,   426,   431,   442,   601,   622,   627,   658,   690,  1979,
     111,   267,  1709,   470,   727,  1495,  1824,  1433,   498,  1835,
      11,   755,  1614,  1615,  1616,   565,   737,   774,  1949,   975,
     976,   298,  1889,   554,    94,   122,   240,   975,   298,   771,
     989,   150,   778,   779,   968,  1495,   774,  1018,  1017,  1048,
    1046,  1051,  1047,  1693,   771,     6,  1558,  1617,  1558,  1558,
    1495,  1571,    76,   298,   417,  1495,  1567,  1495,    68,  1558,
    1617,   772,    57,    89,   104,   148,   176,   276,   772,  1664,
    1668,  1669,   772,  1495,  1495,  1874,   772,  1458,  1459,  1468,
    1861,    53,    54,    55,    56,   106,   107,   108,   160,   161,
     232,   306,   399,   469,   534,   536,   541,   606,   649,   739,
     750,  1611,  1612,  1495,    68,  1550,  1495,  1495,  1495,  1495,
    1495,  1611,  1495,  1881,  1569,   323,   774,   779,    68,  1558,
    1495,    68,  1558,  1495,  1495,  1495,   772,  1495,  1495,  1498,
     772,  1495,  1495,  1495,   772,   641,  1558,  1558,  1495,    68,
    1558,    25,   132,   272,  1495,  1515,  1558,  1558,  1495,  1495,
      68,  1558,  1495,  1567,  1495,   779,  1495,  1495,  1495,  1511,
    1512,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,
    1567,   396,   398,   705,   708,  1613,  1495,  1495,  1567,  1877,
    1567,  1495,  1495,  1495,  1567,  1567,  1567,    92,  1877,  1495,
    1495,  1495,  1567,    92,  1495,  1495,  1495,   772,  1495,  1877,
    1495,  1495,  1612,  1612,  1495,  1515,  1495,   772,   364,   779,
    1875,  1889,  1495,  1495,  1495,  1495,  1495,  1495,   772,   774,
    1459,  1495,   779,   780,  1549,  1894,  1495,  1495,  1495,  1497,
      86,   175,   275,   724,  1501,     6,   327,  1497,  1504,  1498,
    1498,   771,  1469,  1498,  1498,  1498,  1498,  1498,  1498,   139,
    1498,  1498,   121,  1498,   121,  1498,  1498,  1498,  1498,  1498,
      15,   124,   139,   216,  1271,  1894,  1519,   771,  1546,  1629,
    1889,   771,    99,  1881,  1527,   450,   484,   560,   641,  1513,
     141,   207,   497,   695,  1116,  1120,  1819,  1883,   946,   398,
     705,   708,   945,  1547,  1858,  1874,   774,   271,   774,  1949,
    1043,  1710,  1706,  1695,  1877,   774,    92,  1897,  1896,  1990,
     191,   204,   452,  1975,   762,  1485,  1486,  1488,   779,   779,
    1721,   774,  1916,  1974,  1889,  1272,  1495,  1897,   266,   571,
     585,  1945,  1946,   210,   483,  1939,  1940,  1941,  1942,   459,
     498,   654,  1936,  1721,  1946,  1889,   709,  1926,  1937,   774,
    1928,   680,   762,  1167,    24,   876,   876,  1877,   876,   876,
     876,  1877,  1897,  1877,  1487,  1487,   362,   680,  1783,   876,
    1783,  1778,   124,  1781,   501,   545,   680,  1775,  1775,  1783,
    1889,   876,  1783,  1896,  1778,  1783,  1883,   481,   693,   441,
      92,  1769,   774,   425,   680,  1877,  1780,  1778,  1778,  1495,
    1783,  1783,  1783,  1574,  1737,  1877,  1488,  1730,  1732,   771,
    1725,  1041,   774,   771,  1867,   907,   417,   780,   124,   774,
     195,  1438,  1440,  1441,   438,   608,  1386,   238,   350,   217,
    1495,   793,    61,   113,   796,  1495,  1733,   501,   501,   501,
     501,   347,   501,   810,   501,   774,  1487,  1796,   945,   955,
    1894,   774,   755,  1615,  1959,    84,   668,  1495,  1388,  1693,
     271,  1817,   810,  1813,  1889,     6,  1373,   621,   675,  1380,
    1381,  1372,   665,  1377,  1949,  1854,   588,  2057,  1894,   822,
    1972,  1989,  1894,   816,  1167,  1167,   813,  1877,  1167,   876,
     826,  1488,  2035,   862,  1488,  1167,  1167,  1167,   735,   774,
     772,   772,   772,   772,   772,   774,   772,  1573,     6,    11,
      15,    94,  1479,  1616,   127,   127,   187,  1596,   134,   228,
    1584,  1596,  1573,  1575,   771,  1478,  1684,  1894,   774,   779,
    1495,    26,   103,  1620,  1623,   565,   737,  1484,   429,  1881,
     229,   570,   774,   779,   657,  1645,  1673,  1919,  1165,    34,
    1265,   408,   163,   209,   251,   373,   385,   489,   561,   880,
     887,  1894,   614,   720,  1085,  1086,   477,  1081,  1082,  1083,
    1090,  1098,  1100,  1333,   771,  1883,   332,   526,  1075,  1076,
    1077,  1090,  1091,  1092,  1098,  1100,  1068,  1069,  1075,   471,
     221,   774,  2000,  1949,  1330,  1329,  1877,   774,   587,  1399,
     772,   774,  1012,   908,    29,   298,  1005,  1007,    71,   112,
     152,   472,   502,   503,   505,   506,   507,   508,   509,   511,
     512,   513,   514,   515,   516,   517,   518,   520,   521,   522,
     619,   620,   801,   802,   809,    92,  1416,   726,  1694,  1414,
     373,   558,   615,   721,  1078,  1079,  1080,  1090,  1094,  1095,
    1096,  1097,  1098,  1100,   285,  1063,   771,   928,  1030,    57,
     148,   176,   276,  1256,  1255,  1721,  1256,   176,   282,   307,
     659,  1246,  1246,  1275,  1276,  1277,  1266,    17,  1278,   378,
    1258,  1256,  1230,  1246,  1321,  1854,  1256,  1321,  1246,   296,
    1246,  1256,   918,   919,   920,  1890,   961,  1230,  1230,  1246,
     230,   715,  1889,    61,  1271,  1273,   214,  1243,  1276,  1278,
    1230,  1256,  1246,   176,  1246,  1495,  1495,   927,   104,   761,
     935,   936,  1661,  1663,  1586,   695,   774,  1754,   779,  1758,
     200,  1643,  1644,  1757,    94,   762,  1889,   179,  1889,  1099,
     774,  1721,  1722,   774,    28,   223,  1368,  1693,  1693,   908,
     771,   983,   986,  1889,  1998,  1999,   271,   301,  1971,    24,
     762,  1877,  1889,  1987,  1987,  1987,  1987,   997,  1703,  1897,
    1434,  1435,  1436,  1437,  1877,   115,   452,  1882,  1886,  1898,
    1905,  1906,  1907,  1908,  1909,  1910,  1911,  1912,   151,   210,
     746,  1953,  1663,  1952,  1495,   975,   122,   642,  1889,   975,
     983,   984,   988,  1889,   890,  1889,   911,  1030,  1037,  1039,
    1042,  1040,  1949,  1495,   772,  1559,   772,   772,   267,   417,
    1495,  1495,    11,   286,   772,   286,   774,  1535,   772,   762,
     772,   774,   774,   772,   772,  1459,    94,   772,  1537,   772,
     774,   772,   774,   774,   774,   774,   761,   774,   772,   771,
    1874,  1881,  1558,   772,   772,  1558,   772,   774,   772,   774,
     772,   772,   124,   774,   774,   774,   772,   772,    94,   774,
    1558,   772,    94,  1495,    94,  1495,    94,  1495,    94,   772,
     772,   772,   774,   772,  1558,   772,   772,   772,   772,  1881,
     774,   772,   774,   772,   774,   774,   774,   774,   774,   772,
     772,   774,   774,   774,   772,   774,   772,   772,   774,   772,
     772,   772,   772,   772,   772,   772,   772,  1877,   772,   772,
     772,   774,   772,  1877,   772,   772,   774,   772,   774,   774,
     772,   774,   774,   774,   772,   772,   774,  1881,  1889,   772,
     779,   772,   774,    11,   495,   774,  1289,   774,   772,  1611,
    1611,  1567,   772,   777,  1881,  1936,   238,    86,   175,   275,
     724,   771,    10,  1495,   424,  1622,  1498,  1495,  1495,  1498,
     771,  1469,  1498,  1498,  1630,   195,  1632,   771,   771,   779,
    1488,  1531,  1532,  1533,   365,   771,  1125,  1126,  1118,  1125,
    1119,   583,  1128,   129,   463,  1495,   755,  1897,  1897,  1424,
     271,  1495,   135,   136,   237,  1106,  1458,  1712,  1714,  1717,
    1586,    98,  1974,    94,   774,    24,  1987,  1987,  1987,  1987,
     774,  1495,  1872,  1881,  1889,  1889,  1946,  1937,    92,    92,
    1721,  1721,   771,   771,   573,   746,   495,   774,   774,   779,
     779,   779,    61,   452,   741,  1882,  1883,  1888,  1901,  1905,
    1906,  1907,  1908,  1909,  1911,  1912,  1495,  1721,  1939,  1927,
    1929,  1930,   772,  1889,   876,  1883,  1495,   876,  1783,  1783,
    1883,    94,  1782,   874,  1783,   607,  1650,  1768,  1781,  1778,
    1877,  1783,  1783,   237,  1586,  1733,   772,   774,  1726,   908,
    1865,  1868,  1889,  1866,   962,  1031,  1894,    61,  1431,  1889,
    1429,  1877,  1111,  1440,   114,   129,  1298,  1442,  1920,   794,
     774,    62,  1806,   810,  1801,  1693,  1802,   953,   956,   957,
     952,   566,   567,   643,   954,   443,   554,  1889,  1960,  1961,
    1883,  1693,   438,   608,   728,  1391,  1392,  1393,  1663,     6,
    1816,   662,   774,   725,  1382,  1763,   774,    92,  2058,  1163,
    1164,   301,  1970,  2000,   859,  1889,  1889,  1889,  1877,   815,
     876,   884,   885,   876,  2045,  1167,  1167,  1877,   876,  1889,
     876,  1167,  1573,  1573,   777,   569,   705,   709,  1474,  1475,
    1521,  1475,   127,  1596,  1596,  1588,   127,   179,   286,  1610,
    1889,  1615,  1265,  1268,  1680,  1889,  1495,  1624,  1873,  1621,
     741,  1626,  1620,  1663,  1652,  1653,   429,  1652,  1652,  1881,
     539,  1646,  1873,   771,  1946,  1722,  1722,   549,   251,   251,
     650,  1883,   251,   251,   251,  1883,  1883,  1722,   774,  1083,
     155,   347,   393,   475,   537,   556,   557,   561,   562,   563,
     629,   678,   856,   857,    49,   467,   578,   585,   593,   666,
     727,   860,   861,  1722,  1722,   774,  1077,  1070,  1071,  1090,
    1091,  1092,    26,   301,   734,  1991,   252,   355,   485,   559,
     687,   747,  1985,  1986,  1993,   301,  2003,  1324,   179,   870,
    1336,   771,  2028,  1328,  1398,    92,  1495,   267,  1008,  1007,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   774,   726,  1722,  1722,  1722,  1722,
     774,  1080,   500,   439,  1072,  1073,  1074,  1090,  1091,  1092,
    1093,  1096,  1097,  1098,  1100,   895,   896,   897,  1889,   125,
     417,   772,   772,   772,   772,  1889,   774,   307,   282,  1255,
     772,   774,   772,  1263,   772,   774,   961,   961,   779,   755,
    1278,   186,   246,   248,   933,   934,   935,   938,  1501,  1889,
      57,    89,   148,   176,   276,  1475,  1697,  1889,   286,  1889,
     569,   140,  1654,  1574,   779,  1758,  1877,  1974,  1178,  1894,
    1897,  1949,   417,   929,   930,   987,    72,   772,   774,  1989,
     320,  1987,   779,   779,   271,   271,   271,   271,   909,  1712,
     774,  1438,  1440,  1885,   746,   498,   379,   122,   985,   772,
     774,   969,  1019,   417,  1049,  1014,  1044,  1891,  1044,  1044,
     774,  1495,  1495,   267,    17,    32,    58,    70,    90,   121,
     123,   282,   294,   396,   398,   551,   659,   708,   731,  1560,
    1564,  1565,  1266,  1266,  1560,  1567,   772,   121,   121,  1495,
    1567,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1498,   772,
     772,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,   772,
    1495,    94,  1495,    94,  1495,    94,  1495,   121,  1495,   772,
    1512,  1495,  1511,  1567,  1495,  1495,  1495,  1495,  1495,  1572,
    1495,  1495,  1495,  1495,  1567,   148,   760,  1661,  1665,   121,
    1495,  1495,  1495,  1495,  1495,   779,   779,  1889,  1495,    17,
      32,  1284,  1285,  1286,  1287,  1288,  1664,  1663,   772,  1495,
     761,   761,  1888,  1495,  1468,  1497,   772,   774,  1519,  1611,
    1611,    10,  1495,  1622,  1631,  1889,    26,   772,  1543,  1566,
    1567,  1881,  1495,   772,   774,   771,  1134,  1498,  1126,   121,
     140,  1160,  1664,   689,  1129,   325,  1121,  1117,   945,   271,
    1877,   417,  1715,  1716,  1870,  1871,  1875,  1889,  1861,  1713,
    1717,   577,  1988,  1896,  1987,    94,    94,    94,    94,  1486,
    1489,  1489,   779,  1721,  1721,   785,  1897,  1946,   266,   266,
     210,   626,   652,  1943,  1941,  1940,   779,   779,  1721,  1946,
    1928,   774,  1932,  1934,  1938,   423,   738,  1661,  1666,  1773,
     176,  1782,  1618,  1778,  1741,  1742,  1875,  1476,  1489,  1488,
    1729,  1731,  1733,   417,   772,   774,    11,   778,   312,  1032,
    1439,   771,  1946,  1733,   755,    92,   301,  1797,  1798,   755,
     774,    96,   131,   443,   490,   554,   598,   755,   756,   757,
    1962,  1964,  1618,    94,  1394,  1392,  1381,   504,   809,  1383,
      73,   635,  1764,  1663,   535,   320,  2003,    91,   286,   715,
    1311,   179,   179,   814,   855,   856,   884,    11,   125,  2049,
     373,   881,   882,   883,   887,  2046,  2036,   876,   823,   226,
     771,   634,   226,   771,  1877,  1475,   266,  1498,    10,   271,
    1573,  1588,   127,   127,  1573,  1588,  1578,  1579,   772,   774,
    1605,  1606,  1267,  1685,   302,   303,   774,  1625,    12,    65,
    1647,  1495,  1546,  1627,  1628,  1626,  1653,  1484,   774,  1647,
    1488,  1674,  1675,  1676,  1273,  1267,   395,   395,   403,   480,
     104,   148,   176,   276,  1101,  1667,  1668,  1882,  1083,  1722,
    1722,    26,  1722,  1724,  1722,   155,   537,   301,  1722,  1723,
    1723,   857,  1883,  1883,  1883,  1883,  1663,  1883,  1883,   772,
     774,  1101,  1101,  1077,   774,  1071,   266,   585,  1894,  1994,
    1995,   266,   266,   266,    10,  1984,   523,   524,   527,   528,
     529,  2001,  2002,   318,  1334,     5,     7,     8,    31,    33,
      39,    73,   114,   145,   180,   184,   192,   195,   218,   254,
     255,   256,   279,   304,   325,   333,   335,   354,   361,   373,
     380,   395,   405,   409,   410,   416,   420,   428,   448,   474,
     478,   488,   525,   538,   540,   579,   585,   612,   623,   624,
     625,   644,   651,   682,   697,   698,   710,   713,  1109,  1170,
    1172,  1175,  1176,  1177,  1340,  1344,  1346,  1349,  1355,  1356,
    1357,  1359,  1360,  1640,  1882,   377,   647,   218,  1337,  1889,
    2029,    11,  2028,     6,   365,  1400,   909,  1495,   771,   771,
    1663,   771,  1663,  1663,  1883,  1883,  1666,  1883,  1663,  1883,
    1883,  1883,  1883,  1883,  1883,  1883,  1663,  1883,   391,   561,
     663,  1859,  1883,  1663,   802,  1883,  1664,  1101,  1101,  1080,
      99,  1722,   774,  1074,   772,   774,    17,   293,   610,   642,
     731,   959,  1228,  1229,  1232,  1233,  1234,  1235,  1237,  1238,
    1239,  1240,  1264,   930,   176,  1276,  1854,  1276,   919,  1889,
     176,   774,   962,   450,   779,  1574,  1758,  1487,   229,  1652,
     224,  1755,  1618,  1949,  1368,   150,   931,   772,  1495,   986,
    1999,   301,  2005,   577,   271,   762,   762,  1989,  1989,  1989,
    1989,   998,   179,  1734,  1436,  1877,  1440,   113,  1443,  1831,
    1495,   984,   890,   339,  1014,   150,  1495,  1495,  1248,  1248,
    1244,  1252,    56,   123,  1247,  1248,  1248,   123,  1248,  1247,
     772,   772,   772,   772,  1536,  1495,  1495,   772,   184,  1552,
     772,   772,   774,   774,   772,   774,   772,   124,  1528,  1529,
     772,   772,   772,   772,   774,   772,    92,   772,   772,   774,
    1495,  1495,  1495,  1495,   772,   772,    11,  1505,   772,    11,
     772,   772,   774,   772,   774,   772,   774,   772,   774,   772,
     772,   772,   772,   148,   176,   176,   772,   774,  1495,   772,
     772,   774,   774,   772,  1881,  1889,   779,   772,   771,  1279,
    1279,    12,    65,   636,   760,  1281,  1282,  1283,   774,   774,
     772,  1495,  1495,   779,   772,  1567,  1497,   772,   774,  1632,
    1624,   184,  1545,   772,  1489,  1533,  1122,  1123,  1124,  1889,
     772,  1495,  1666,    26,   771,  1136,   755,   771,  1126,  1897,
     219,   772,   774,   779,  1459,  1719,  1720,  1875,    94,    94,
    1990,  1990,  1990,  1990,    11,  1491,  1883,  1889,   762,  1881,
    1946,  1946,   772,   772,   374,   718,   210,  1889,  1889,  1946,
    1931,  1933,    57,    89,   148,   176,   276,  1650,  1774,  1783,
     774,  1740,  1721,  1615,  1733,   772,   774,   150,  1889,   771,
     298,  1033,  1034,   771,   203,  1607,  1608,  1609,  1889,   771,
    1799,   210,   349,   356,   372,   382,   383,   384,   392,   533,
     547,   633,   648,   685,   699,   958,   957,  1963,  1650,   546,
     755,   774,   682,   682,  1896,  1334,   395,   345,   463,   645,
    1317,  1317,   179,  1877,  1877,   135,   137,   139,  1102,  1104,
    1169,  1171,  1172,  1184,  1169,  2049,  1488,  1883,   881,   771,
     902,   904,   906,   876,   863,  2028,   830,   831,    58,   123,
     212,   684,  1182,   828,   829,   824,  1475,  1475,   179,  1581,
    1588,  1588,   179,  1583,  1495,   771,  1111,  1889,  1603,  1604,
     365,  1838,  1873,    11,   774,  1873,  1495,   772,   774,  1665,
    1665,  1665,  1665,  1665,  1665,   861,  1071,   266,    11,   286,
    1992,  1996,   185,  1985,  1663,  1663,  1663,  1859,   760,  1661,
    1662,  2001,   145,   281,   585,  1335,    36,   195,   371,   586,
     694,  1188,  1196,  1197,  1202,  1203,  1298,  1302,  1303,  1361,
    1361,   195,  1361,   195,   271,    36,    91,   195,   586,   694,
    1201,  1298,  1361,   408,  1722,   195,    26,  1722,  1111,    11,
     271,   755,  1370,  1722,  1722,  1722,  1722,   733,  1722,  1722,
    1722,  1722,   195,  1722,  1722,   408,  1722,   128,   697,   128,
    1722,   195,   697,  1722,  1722,  1722,  1722,  1361,  1722,  1722,
     195,   584,   195,   195,  1722,  1722,   411,   531,  1889,  1722,
    1722,   195,  1170,   774,  1108,  1109,  1344,   771,   779,  1187,
    1204,  1876,  1889,  1721,  1501,  2011,   329,   427,   864,   271,
     409,   416,   866,   772,   774,  2030,  2031,    11,     6,   771,
    1401,  1009,   805,   806,  1663,   807,   808,  1663,   803,   804,
    1663,  1889,  1101,  1074,   897,  1247,  1251,  1247,  1250,  1250,
     921,  1250,   196,   779,  1272,  1251,  1251,  1250,  1250,   772,
     934,  1889,  1618,  1889,   429,   229,  1485,  1444,  1861,    98,
    1989,  2000,  2000,  2000,  2000,    76,    78,   999,   414,  1443,
     493,   113,   220,  1837,  1030,   908,  1561,  1247,  1562,  1563,
     772,  1611,  1611,    26,   235,  1551,  1495,  1495,  1567,   166,
     344,   772,   301,  1530,  1495,  1495,  1495,  1611,    58,    70,
      90,   123,   212,   282,   396,   398,   550,   551,   708,  1237,
    1238,  1506,  1507,  1508,  1509,  1560,  1495,  1495,  1495,  1495,
      86,   275,  1663,  1671,  1611,  1495,  1495,  1889,  1664,   772,
    1289,  1284,  1282,  1284,  1285,  1663,  1889,   772,  1567,   184,
    1633,    26,   772,  1491,   772,   774,  1611,  1120,   195,  1137,
    1138,  1664,  1122,  1870,   762,  1889,   772,   774,  1721,  1990,
    1990,  1883,  1889,   779,  1721,  1721,  1932,  1937,  1650,  1742,
    1618,  1733,  1605,  1489,  1733,  1458,  1035,  1034,     6,  1345,
    1353,  1354,  1889,   772,   774,  1666,  1807,  1808,   437,   145,
     771,  1883,   809,  1335,   745,  1877,   819,   821,    36,   586,
    1185,  1186,  1187,  1188,  1196,  1197,   139,  1877,  1107,  1108,
     774,  1171,  1103,  1488,   833,   903,   879,    14,   322,  1058,
     179,    11,  2041,  2042,   893,   894,   668,  2041,   893,  2028,
    1580,   286,  1582,   286,  1610,   113,   285,   448,  1598,  1599,
    1602,    79,    82,   181,   265,  1839,  1840,   142,  1841,  1647,
    1629,  1628,  1647,  1489,  1676,   585,  1883,  1994,   176,   176,
     436,   111,  1320,  1876,  1167,    93,   111,  1166,   733,    33,
      91,   203,   280,  1200,  1297,  1167,  1298,  1299,  1299,  1166,
    1698,  1419,  1698,  1345,  1265,  1698,   129,  1699,    93,  1698,
     733,   203,  1698,  1698,  1722,    61,  1889,  1419,  1641,  1642,
    1875,    61,  1663,  1670,  1110,  1877,    61,  1663,    61,  1663,
      61,  1663,  1173,    61,  1889,  1666,  1663,  1663,  1419,  1883,
    1883,  1722,  1663,  1894,  1354,   443,   490,   561,  1181,  1663,
    1666,  1666,  1698,    61,  1663,  1883,  1419,  1419,  1419,    61,
     376,   378,   415,   444,   580,   616,  1180,  1670,  1663,  1670,
    1345,     5,    73,  1357,  1183,  1185,  1889,   322,   443,  1369,
     215,  1291,  1205,   779,    61,  1667,  1883,  1889,   597,  1495,
    1495,   179,   870,   876,   179,   373,   871,  1889,  1458,  2030,
    1402,   476,   267,   772,   774,   772,   774,   772,   774,  1276,
     230,  1889,  1276,  1278,  1276,  1278,    94,   429,   577,  2000,
     301,  2004,  2004,  2004,  2004,   909,   995,  1735,   122,   417,
     417,  1276,  1276,  1276,   772,   772,  1553,  1873,  1854,   140,
    1554,  1555,  1556,   772,   774,   772,   489,   539,   607,   772,
     772,   772,   772,  1244,   123,  1248,    32,  1248,  1510,   772,
     772,   772,   772,   774,   772,   772,   772,  1280,   772,   774,
     772,    26,   207,   229,  1634,  1635,  1873,  1124,   677,  1161,
     129,   463,  1139,   772,   774,   772,   779,  1720,  1733,   762,
    1946,  1946,  1643,   772,   933,   772,   774,  1608,   772,   774,
      10,  1809,  1731,  1894,   817,   771,   771,    92,  1198,   772,
     774,  1877,  1105,  1837,  1171,  1169,   834,   204,   452,   852,
     853,   854,   896,   898,   899,   900,   880,   886,  2011,  2047,
      63,   119,   283,  1059,   647,  2030,   879,  2043,  1264,   772,
     895,  1883,  2043,   772,    11,  1495,   771,  1495,   771,   772,
    1298,  1298,  1599,    26,    26,    79,    26,  1840,   253,   265,
    1842,  1843,   771,    61,   121,   552,  1501,  1419,   771,  1501,
    1198,   771,   129,   129,  1299,  1167,  1320,  1889,  1167,  1167,
    1876,  1345,  1876,  1342,  1267,  1876,  1698,  1353,    92,   129,
    1876,  1876,  1883,  1345,   774,  1647,  1114,   771,  1664,  1883,
     301,  1204,  1345,  1350,  1345,   772,  1889,  1877,   653,   959,
    1206,  1226,  1227,  1889,  1611,   661,  1883,   412,  1338,   301,
    2032,  1405,  1889,     6,   771,  1403,   909,   806,   808,   804,
     196,   779,  1498,  2004,    98,  2001,  2006,  2007,   129,   264,
    1014,   150,   774,  1647,   772,  1557,  1652,  1495,   539,   435,
    1276,  1666,   772,  1663,  1646,   772,    15,   390,   398,   705,
     708,   717,  1636,  1637,  1858,  1647,  1663,  1121,   771,  1127,
    1140,  1889,  1138,   762,  1654,   267,  1354,  1808,   409,   772,
     576,   771,  1318,  1319,  1889,  1318,  1889,  1186,   772,    11,
    1162,  1107,   204,   452,   838,   839,   840,   846,   851,   854,
     923,   844,   982,   842,   982,   417,   854,   117,   124,   189,
     901,   772,   774,    67,  2049,   179,   864,  2044,   876,   877,
     226,   877,   226,  2030,  1610,  1610,    92,  1597,  1597,  1854,
    1854,    26,  1854,    26,    26,  1843,   266,   176,    84,  1347,
    1889,    84,  1495,  1167,  1320,  1889,   286,  1310,   715,  1320,
    1320,    73,   237,  1204,  1413,  1272,  1876,  1889,  1368,  1341,
    1642,  1802,   264,  1369,  1351,  1353,  1343,   771,  1292,  1208,
     779,  1199,  1200,  1207,   779,   865,   872,   873,    33,   348,
     498,   772,   774,  1404,   230,   715,  1889,   271,   577,  2007,
     283,  1877,  1050,  1873,   570,   774,   772,   772,   772,   717,
    1637,  1638,  1858,   642,   595,   430,  1639,   595,   771,  1134,
    1130,    61,   291,   292,   390,   466,  1141,   909,   353,   771,
    1318,   772,   774,  1647,   771,   772,   771,  1106,  1105,   844,
     842,   835,   840,   851,   846,   778,   778,   841,   778,   841,
    1490,   189,   642,   959,  1264,   900,  1026,  1027,  1488,   869,
     870,  2049,  2041,  2041,   772,   772,    99,   127,   184,  1601,
    1600,  1854,  1854,  1854,   772,   399,  1876,   583,   771,  1348,
     774,   772,  1320,  1310,   715,  1317,  1189,  1317,  1191,  1192,
      61,    61,  1369,  1419,   772,  1877,  1352,  1391,  1293,  1889,
     153,  1294,   203,   280,   304,   373,   486,   743,  1209,  1210,
    1219,  1260,  1261,  1262,  1290,  1501,  1882,  1227,    34,    61,
     175,   179,   333,   454,   653,  1213,  1215,  1253,  1254,  1261,
    1889,   677,   867,   962,   577,    33,    33,  1889,   203,  1406,
    1407,  1889,   196,  1498,  1736,  1586,  1044,  1647,  1652,  1652,
     447,    10,   447,    99,   390,   561,   704,  1132,  1133,  1889,
     772,   688,  1135,  1143,   703,   114,   373,   380,   395,   525,
     538,   558,   697,  1157,  1158,  1159,  1777,   860,   772,  1949,
    1319,   176,  1949,  1889,  1174,  1175,   849,  2049,   847,  2049,
     339,   417,   837,  1889,  1889,   877,   921,   196,   779,   877,
     911,  2037,   866,  1026,  2043,  2043,    26,    26,   771,   771,
    1200,  1664,  1137,  1889,  1195,  1193,  1317,   771,  1190,   771,
     771,   760,   761,   771,  1223,  1224,  1225,  1469,  1516,  1857,
    1882,  1111,   122,   772,   774,   451,   582,   660,   179,  1295,
     129,  1883,   694,  1261,   733,   129,   175,  1721,  1271,  1225,
     283,   326,    61,    11,   378,  1254,  1259,  1495,   418,   868,
     577,   577,   772,   774,   715,  1743,  1744,  1875,  1832,  1638,
     642,   186,   314,   772,   774,  1664,   771,  1145,  1147,  1142,
     408,  1722,  1722,   408,  1722,  1722,  1722,  1722,   771,  1152,
    1159,   420,   772,  1949,   301,   373,   488,  1305,  1309,  1313,
    1316,  1882,  1647,   772,  1306,  1308,  1313,  1315,   774,   778,
     982,   778,   982,  1030,   836,   845,   843,   230,  1889,  1028,
    1877,   871,   877,   877,  1607,  1609,   772,   772,   771,   771,
    1194,  1318,   771,  1318,  1318,  1859,  1859,  1222,   771,  1889,
      63,   283,    61,  1667,  1883,  1889,   172,   729,   642,  1223,
    1255,  1253,  1495,  1407,   774,  1721,  1268,  1131,  1133,   771,
    1146,  1147,  1148,   155,  1144,  1147,  1722,  1883,  1883,  1722,
    1667,  1667,  1664,  1894,   689,  1153,  1154,  1722,   286,   715,
    1304,  1307,  1312,  1313,  1314,   581,  1883,  1722,  1358,  1359,
    1360,  1316,  1721,  1358,  1315,  1889,   850,   848,   417,  1490,
     906,   771,   904,   905,   196,   779,   339,    92,   412,   772,
     772,  1318,  1318,   771,   772,  1318,   772,   772,   772,  1137,
      28,   223,   237,   561,  1296,  1296,   771,  1492,   417,   678,
    1214,  1744,  1733,  1833,  1135,   772,   774,   155,  1150,  1151,
    1498,  1883,  1883,  1155,   772,   774,  1178,  1317,  1317,  1358,
    1314,  1882,  1663,  1360,  1359,    61,  1667,  1883,  1889,   772,
    1026,  1026,   877,   879,   893,   226,   230,   715,  1889,  1030,
    1488,   872,   772,   772,  1318,  1304,   772,  1305,  1306,   772,
      61,   175,   319,   179,   179,   772,  1664,  1211,  1212,  1260,
    1211,   587,   683,   736,  1216,   229,  1844,  1147,   774,  1149,
    1156,  1894,  1154,  1889,  2048,  2048,   772,  2041,   196,  1029,
    2038,  1291,  1304,   772,  1304,   283,    63,   772,  1260,  1217,
    1218,  1219,   471,  1838,  1151,   772,  1157,   879,   715,   417,
      75,  1304,  1296,  1296,  1219,    26,  1841,   642,  1854,   113,
    1845,  2039,   176,   771,  1847,   446,   594,  2033,  2034,   142,
     229,  1846,   772,   780,  1848,  1849,  1875,   237,  1850,  1894,
    2040,  1894,   772,   774,  1851,  1852,  1875,   962,  1849,   774,
    1721,  1852,  1488,  1733,  1489
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   781,   782,   783,   782,   782,   784,   784,   785,   785,
     785,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   787,   788,   788,   790,   789,   791,   792,   793,   791,
     794,   795,   794,   796,   796,   798,   797,   800,   799,   801,
     801,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   803,   803,   803,   804,   805,   805,   805,   806,   807,
     807,   807,   808,   809,   809,   809,   809,   809,   809,   809,
     810,   810,   811,   813,   814,   812,   815,   812,   816,   817,
     812,   818,   819,   812,   820,   821,   812,   822,   812,   823,
     812,   824,   812,   825,   812,   826,   812,   827,   812,   828,
     812,   829,   812,   830,   812,   831,   812,   812,   812,   812,
     812,   812,   832,   812,   833,   812,   834,   835,   836,   812,
     837,   837,   838,   838,   838,   839,   839,   840,   840,   841,
     843,   842,   845,   844,   846,   846,   846,   848,   847,   850,
     849,   851,   852,   852,   853,   853,   854,   854,   855,   855,
     856,   856,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   859,   858,   860,   860,
     861,   861,   861,   861,   861,   861,   861,   863,   862,   865,
     864,   864,   866,   866,   866,   866,   867,   867,   868,   868,
     869,   869,   870,   871,   871,   873,   872,   874,   875,   875,
     876,   876,   877,   877,   878,   878,   879,   879,   880,   880,
     880,   880,   880,   880,   880,   881,   881,   882,   882,   883,
     883,   885,   884,   886,   886,   887,   887,   889,   888,   890,
     890,   891,   891,   892,   892,   893,   894,   893,   895,   895,
     896,   897,   897,   897,   897,   897,   897,   898,   898,   899,
     899,   900,   900,   900,   900,   900,   900,   901,   901,   901,
     901,   901,   903,   902,   904,   905,   905,   906,   906,   907,
     907,   908,   908,   910,   909,   911,   911,   913,   912,   912,
     914,   914,   915,   915,   916,   916,   917,   917,   917,   918,
     919,   920,   920,   921,   922,   923,   923,   923,   923,   924,
     924,   924,   925,   924,   927,   926,   928,   928,   929,   931,
     930,   932,   932,   932,   932,   933,   933,   934,   935,   935,
     936,   937,   937,   938,   938,   938,   938,   938,   938,   939,
     939,   940,   941,   941,   942,   942,   943,   943,   944,   944,
     945,   945,   945,   946,   946,   946,   946,   946,   946,   946,
     946,   946,   946,   946,   946,   947,   948,   949,   949,   950,
     950,   951,   951,   952,   953,   953,   954,   954,   954,   955,
     956,   956,   957,   958,   958,   958,   958,   958,   958,   958,
     958,   958,   958,   958,   958,   958,   959,   959,   960,   960,
     961,   961,   961,   962,   962,   962,   962,   962,   962,   963,
     963,   963,   963,   963,   963,   963,   963,   963,   963,   963,
     963,   963,   964,   964,   964,   964,   966,   965,   967,   968,
     967,   969,   967,   971,   970,   972,   972,   974,   973,   973,
     976,   975,   977,   977,   977,   977,   978,   978,   978,   978,
     979,   980,   981,   982,   983,   985,   984,   987,   986,   988,
     988,   989,   989,   990,   991,   991,   991,   992,   992,   993,
     994,   994,   996,   997,   998,   995,   999,   999,   999,  1001,
    1000,  1003,  1004,  1002,  1002,  1005,  1005,  1006,  1006,  1008,
    1009,  1007,  1011,  1012,  1010,  1013,  1013,  1014,  1014,  1015,
    1017,  1016,  1018,  1019,  1016,  1020,  1020,  1022,  1021,  1023,
    1024,  1021,  1025,  1027,  1028,  1029,  1026,  1031,  1030,  1032,
    1032,  1033,  1033,  1035,  1034,  1036,  1036,  1037,  1038,  1038,
    1038,  1039,  1041,  1040,  1043,  1042,  1044,  1046,  1045,  1047,
    1045,  1048,  1049,  1050,  1045,  1051,  1045,  1053,  1052,  1054,
    1052,  1055,  1056,  1052,  1057,  1052,  1058,  1058,  1059,  1059,
    1059,  1060,  1061,  1062,  1063,  1063,  1064,  1064,  1065,  1066,
    1067,  1067,  1069,  1068,  1070,  1070,  1070,  1071,  1071,  1071,
    1072,  1073,  1073,  1073,  1074,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1075,  1076,  1076,  1076,  1077,  1077,  1077,  1077,
    1077,  1078,  1079,  1079,  1079,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1081,  1082,  1082,  1082,  1083,  1083,  1083,  1084,
    1085,  1086,  1087,  1088,  1089,  1089,  1089,  1090,  1091,  1092,
    1093,  1094,  1095,  1096,  1097,  1098,  1099,  1099,  1100,  1100,
    1101,  1101,  1103,  1102,  1102,  1102,  1104,  1104,  1105,  1105,
    1106,  1106,  1107,  1108,  1108,  1110,  1109,  1111,  1113,  1112,
    1115,  1114,  1116,  1117,  1116,  1116,  1116,  1118,  1116,  1116,
    1119,  1116,  1120,  1120,  1121,  1121,  1122,  1122,  1123,  1123,
    1124,  1125,  1126,  1127,  1128,  1128,  1129,  1130,  1129,  1131,
    1129,  1132,  1132,  1133,  1134,  1135,  1135,  1136,  1136,  1137,
    1137,  1139,  1138,  1140,  1141,  1142,  1141,  1143,  1141,  1141,
    1141,  1141,  1144,  1144,  1145,  1145,  1146,  1146,  1148,  1149,
    1147,  1150,  1150,  1151,  1151,  1152,  1152,  1153,  1153,  1155,
    1154,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1159,  1159,
    1159,  1159,  1159,  1159,  1159,  1160,  1160,  1160,  1161,  1161,
    1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,
    1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,  1171,  1171,
    1171,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1173,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1174,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1180,  1180,
    1180,  1180,  1180,  1180,  1181,  1181,  1181,  1182,  1182,  1182,
    1182,  1183,  1184,  1185,  1185,  1186,  1186,  1186,  1186,  1186,
    1187,  1187,  1189,  1188,  1190,  1188,  1191,  1188,  1192,  1188,
    1193,  1188,  1194,  1188,  1195,  1188,  1196,  1197,  1198,  1199,
    1199,  1200,  1201,  1201,  1202,  1202,  1203,  1205,  1204,  1207,
    1206,  1208,  1206,  1209,  1209,  1210,  1210,  1211,  1211,  1212,
    1212,  1213,  1213,  1213,  1213,  1214,  1213,  1213,  1213,  1215,
    1215,  1216,  1216,  1216,  1216,  1217,  1217,  1218,  1218,  1219,
    1219,  1219,  1219,  1221,  1220,  1222,  1222,  1223,  1223,  1224,
    1224,  1225,  1225,  1226,  1226,  1227,  1227,  1227,  1227,  1227,
    1228,  1228,  1228,  1228,  1228,  1229,  1229,  1229,  1229,  1229,
    1229,  1229,  1229,  1229,  1229,  1230,  1230,  1230,  1230,  1231,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1232,  1232,  1232,
    1232,  1232,  1232,  1232,  1232,  1233,  1233,  1233,  1233,  1233,
    1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1236,  1236,
    1236,  1236,  1236,  1236,  1236,  1236,  1237,  1238,  1238,  1239,
    1239,  1240,  1240,  1240,  1240,  1240,  1241,  1241,  1241,  1241,
    1241,  1242,  1242,  1242,  1243,  1243,  1244,  1244,  1244,  1245,
    1246,  1246,  1246,  1246,  1246,  1246,  1247,  1247,  1247,  1247,
    1248,  1248,  1249,  1249,  1250,  1250,  1251,  1251,  1252,  1252,
    1253,  1253,  1254,  1254,  1254,  1254,  1254,  1254,  1254,  1255,
    1255,  1256,  1256,  1257,  1258,  1259,  1260,  1260,  1260,  1261,
    1261,  1261,  1261,  1261,  1261,  1262,  1262,  1263,  1264,  1265,
    1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,  1270,
    1270,  1271,  1272,  1272,  1273,  1273,  1274,  1274,  1275,  1275,
    1275,  1276,  1276,  1277,  1277,  1277,  1277,  1278,  1278,  1280,
    1279,  1281,  1281,  1282,  1283,  1283,  1283,  1283,  1284,  1285,
    1286,  1286,  1287,  1288,  1288,  1289,  1289,  1290,  1290,  1291,
    1292,  1292,  1293,  1293,  1294,  1294,  1294,  1294,  1295,  1295,
    1295,  1295,  1295,  1296,  1296,  1296,  1296,  1296,  1297,  1297,
    1298,  1298,  1299,  1299,  1300,  1300,  1300,  1301,  1301,  1302,
    1303,  1304,  1304,  1305,  1305,  1306,  1306,  1307,  1307,  1308,
    1308,  1309,  1309,  1310,  1310,  1311,  1311,  1311,  1312,  1312,
    1313,  1313,  1313,  1313,  1313,  1313,  1314,  1314,  1315,  1316,
    1316,  1317,  1317,  1317,  1318,  1318,  1319,  1319,  1320,  1320,
    1321,  1321,  1323,  1324,  1322,  1325,  1322,  1322,  1326,  1322,
    1327,  1322,  1328,  1322,  1329,  1322,  1330,  1322,  1322,  1322,
    1322,  1322,  1331,  1322,  1322,  1332,  1333,  1322,  1334,  1334,
    1334,  1335,  1335,  1335,  1335,  1335,  1336,  1336,  1336,  1336,
    1337,  1337,  1338,  1338,  1339,  1339,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1341,  1340,  1340,  1342,
    1340,  1343,  1340,  1340,  1340,  1340,  1340,  1344,  1345,  1345,
    1347,  1346,  1348,  1348,  1348,  1350,  1349,  1351,  1352,  1351,
    1353,  1353,  1354,  1355,  1355,  1356,  1357,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1358,  1358,  1358,  1358,  1358,
    1359,  1359,  1360,  1360,  1361,  1361,  1362,  1362,  1364,  1363,
    1365,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1368,  1369,
    1369,  1369,  1370,  1370,  1370,  1370,  1372,  1371,  1373,  1371,
    1371,  1371,  1374,  1375,  1375,  1376,  1376,  1377,  1377,  1377,
    1379,  1378,  1380,  1380,  1381,  1381,  1381,  1382,  1382,  1382,
    1383,  1383,  1385,  1384,  1386,  1386,  1386,  1387,  1388,  1387,
    1390,  1389,  1391,  1391,  1392,  1392,  1393,  1393,  1393,  1394,
    1394,  1396,  1395,  1397,  1397,  1398,  1399,  1399,  1400,  1400,
    1401,  1402,  1401,  1403,  1404,  1403,  1405,  1405,  1405,  1406,
    1406,  1406,  1407,  1407,  1408,  1408,  1409,  1410,  1409,  1412,
    1411,  1413,  1413,  1414,  1414,  1415,  1415,  1415,  1415,  1415,
    1415,  1416,  1416,  1418,  1417,  1419,  1419,  1419,  1421,  1420,
    1420,  1422,  1422,  1423,  1423,  1424,  1426,  1425,  1427,  1427,
    1428,  1428,  1429,  1430,  1431,  1431,  1433,  1432,  1434,  1434,
    1435,  1435,  1436,  1437,  1439,  1438,  1441,  1440,  1442,  1442,
    1443,  1443,  1445,  1444,  1446,  1444,  1448,  1447,  1449,  1447,
    1450,  1450,  1452,  1451,  1454,  1455,  1453,  1456,  1457,  1458,
    1458,  1459,  1459,  1461,  1460,  1462,  1460,  1463,  1463,  1464,
    1465,  1464,  1464,  1466,  1466,  1467,  1468,  1469,  1469,  1470,
    1470,  1471,  1472,  1472,  1473,  1473,  1474,  1474,  1474,  1475,
    1475,  1475,  1476,  1477,  1477,  1478,  1478,  1479,  1479,  1479,
    1479,  1480,  1480,  1481,  1481,  1481,  1482,  1482,  1483,  1483,
    1484,  1484,  1484,  1485,  1485,  1485,  1486,  1486,  1487,  1488,
    1489,  1490,  1491,  1491,  1491,  1491,  1491,  1492,  1492,  1492,
    1493,  1493,  1493,  1494,  1494,  1495,  1495,  1495,  1495,  1495,
    1495,  1495,  1495,  1495,  1495,  1495,  1496,  1496,  1496,  1496,
    1496,  1496,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,
    1497,  1497,  1497,  1497,  1497,  1497,  1498,  1498,  1498,  1498,
    1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,
    1498,  1498,  1498,  1498,  1498,  1499,  1499,  1500,  1500,  1501,
    1501,  1502,  1502,  1503,  1503,  1503,  1503,  1503,  1503,  1504,
    1504,  1505,  1505,  1506,  1506,  1506,  1507,  1507,  1507,  1507,
    1507,  1507,  1508,  1508,  1508,  1510,  1509,  1509,  1511,  1512,
    1512,  1513,  1513,  1513,  1513,  1514,  1515,  1515,  1515,  1515,
    1515,  1515,  1515,  1515,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1517,  1517,  1517,  1517,  1518,  1518,  1519,
    1519,  1519,  1519,  1519,  1519,  1520,  1520,  1521,  1521,  1522,
    1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,
    1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1525,
    1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1527,  1526,
    1526,  1528,  1528,  1529,  1529,  1530,  1530,  1531,  1531,  1532,
    1532,  1533,  1534,  1534,  1534,  1534,  1534,  1534,  1534,  1535,
    1536,  1534,  1534,  1534,  1534,  1534,  1534,  1534,  1534,  1534,
    1534,  1534,  1537,  1534,  1538,  1538,  1539,  1539,  1539,  1540,
    1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,
    1540,  1540,  1541,  1543,  1542,  1542,  1544,  1544,  1545,  1546,
    1548,  1547,  1549,  1549,  1549,  1549,  1550,  1550,  1551,  1551,
    1552,  1552,  1553,  1553,  1554,  1554,  1555,  1556,  1557,  1557,
    1557,  1559,  1558,  1560,  1561,  1560,  1562,  1560,  1563,  1560,
    1560,  1560,  1560,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1565,  1565,  1565,  1565,  1566,  1566,  1567,  1567,  1568,
    1568,  1569,  1569,  1570,  1570,  1571,  1571,  1572,  1572,  1573,
    1573,  1574,  1575,  1575,  1576,  1576,  1577,  1578,  1577,  1579,
    1577,  1577,  1580,  1577,  1581,  1577,  1577,  1582,  1577,  1583,
    1577,  1577,  1584,  1584,  1584,  1585,  1585,  1586,  1586,  1587,
    1588,  1588,  1588,  1588,  1589,  1589,  1590,  1590,  1591,  1591,
    1592,  1592,  1593,  1593,  1594,  1595,  1596,  1596,  1597,  1597,
    1597,  1597,  1598,  1598,  1600,  1599,  1601,  1599,  1602,  1602,
    1603,  1604,  1603,  1606,  1605,  1607,  1607,  1608,  1608,  1609,
    1609,  1610,  1610,  1611,  1611,  1611,  1611,  1611,  1611,  1611,
    1611,  1611,  1611,  1611,  1611,  1612,  1612,  1612,  1612,  1612,
    1612,  1612,  1612,  1612,  1613,  1613,  1613,  1613,  1614,  1614,
    1614,  1615,  1615,  1616,  1617,  1617,  1618,  1619,  1618,  1620,
    1621,  1620,  1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,
    1625,  1626,  1626,  1627,  1627,  1628,  1630,  1629,  1631,  1631,
    1632,  1632,  1633,  1633,  1634,  1634,  1635,  1635,  1636,  1636,
    1637,  1637,  1637,  1638,  1638,  1638,  1639,  1639,  1639,  1639,
    1639,  1639,  1640,  1641,  1641,  1642,  1643,  1643,  1645,  1644,
    1646,  1646,  1647,  1647,  1647,  1648,  1648,  1649,  1649,  1649,
    1650,  1651,  1651,  1651,  1652,  1652,  1652,  1652,  1652,  1652,
    1653,  1654,  1654,  1654,  1654,  1655,  1655,  1655,  1656,  1656,
    1657,  1658,  1659,  1659,  1659,  1660,  1660,  1661,  1661,  1662,
    1662,  1663,  1663,  1663,  1663,  1663,  1663,  1664,  1664,  1664,
    1664,  1664,  1665,  1665,  1665,  1665,  1666,  1666,  1666,  1666,
    1666,  1667,  1667,  1667,  1667,  1667,  1668,  1669,  1669,  1670,
    1670,  1671,  1671,  1671,  1673,  1672,  1674,  1674,  1675,  1675,
    1676,  1678,  1677,  1679,  1679,  1680,  1681,  1681,  1681,  1682,
    1684,  1685,  1683,  1683,  1683,  1687,  1686,  1689,  1688,  1690,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1691,
    1688,  1688,  1688,  1688,  1688,  1688,  1692,  1688,  1693,  1693,
    1694,  1695,  1696,  1696,  1697,  1698,  1698,  1699,  1699,  1700,
    1700,  1702,  1703,  1701,  1705,  1706,  1704,  1707,  1707,  1707,
    1707,  1708,  1708,  1709,  1709,  1711,  1710,  1712,  1712,  1713,
    1712,  1714,  1715,  1715,  1716,  1716,  1717,  1718,  1718,  1719,
    1719,  1720,  1721,  1721,  1722,  1722,  1723,  1723,  1724,  1724,
    1726,  1725,  1728,  1727,  1729,  1729,  1730,  1730,  1731,  1731,
    1732,  1732,  1733,  1733,  1733,  1734,  1735,  1736,  1734,  1737,
    1737,  1739,  1740,  1738,  1741,  1741,  1742,  1743,  1743,  1744,
    1745,  1745,  1747,  1746,  1748,  1748,  1749,  1749,  1750,  1751,
    1752,  1753,  1752,  1754,  1752,  1755,  1755,  1756,  1756,  1757,
    1757,  1758,  1758,  1759,  1759,  1760,  1760,  1760,  1762,  1763,
    1761,  1764,  1764,  1764,  1765,  1765,  1766,  1766,  1767,  1767,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1769,
    1769,  1771,  1770,  1772,  1772,  1772,  1772,  1772,  1772,  1772,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1773,  1772,  1774,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,
    1772,  1772,  1772,  1772,  1775,  1775,  1775,  1776,  1776,  1777,
    1777,  1778,  1778,  1779,  1779,  1780,  1780,  1781,  1781,  1782,
    1782,  1783,  1783,  1783,  1785,  1784,  1786,  1784,  1787,  1787,
    1787,  1787,  1787,  1787,  1788,  1788,  1789,  1790,  1790,  1790,
    1790,  1791,  1791,  1792,  1792,  1792,  1794,  1793,  1796,  1795,
    1795,  1797,  1797,  1798,  1799,  1798,  1800,  1800,  1801,  1801,
    1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,
    1801,  1801,  1801,  1801,  1801,  1802,  1802,  1803,  1804,  1805,
    1804,  1804,  1806,  1806,  1807,  1807,  1807,  1808,  1809,  1809,
    1811,  1810,  1812,  1812,  1814,  1813,  1815,  1813,  1813,  1816,
    1816,  1817,  1817,  1818,  1819,  1818,  1821,  1820,  1822,  1822,
    1822,  1823,  1823,  1823,  1823,  1824,  1824,  1826,  1825,  1827,
    1827,  1828,  1830,  1831,  1832,  1833,  1829,  1834,  1834,  1835,
    1835,  1836,  1836,  1836,  1837,  1837,  1837,  1838,  1838,  1839,
    1839,  1840,  1840,  1840,  1840,  1841,  1841,  1842,  1842,  1843,
    1843,  1844,  1844,  1845,  1845,  1846,  1846,  1847,  1847,  1847,
    1848,  1848,  1849,  1849,  1850,  1850,  1851,  1851,  1852,  1853,
    1853,  1853,  1853,  1854,  1854,  1855,  1855,  1855,  1856,  1856,
    1856,  1857,  1857,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1859,  1859,  1859,  1859,  1859,  1860,  1860,
    1860,  1862,  1861,  1863,  1863,  1864,  1864,  1866,  1865,  1867,
    1867,  1868,  1868,  1869,  1870,  1870,  1871,  1871,  1872,  1872,
    1873,  1874,  1874,  1874,  1874,  1874,  1875,  1875,  1875,  1875,
    1875,  1876,  1876,  1876,  1876,  1877,  1877,  1877,  1878,  1878,
    1879,  1880,  1880,  1881,  1881,  1881,  1882,  1883,  1884,  1885,
    1886,  1886,  1887,  1887,  1888,  1888,  1888,  1889,  1889,  1890,
    1890,  1891,  1891,  1892,  1892,  1893,  1894,  1894,  1894,  1895,
    1895,  1895,  1896,  1896,  1897,  1898,  1898,  1898,  1898,  1898,
    1898,  1898,  1898,  1898,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1899,  1900,  1900,  1900,  1900,  1900,  1900,
    1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1902,
    1902,  1902,  1902,  1902,  1902,  1902,  1903,  1903,  1903,  1903,
    1903,  1903,  1903,  1903,  1903,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1906,  1906,  1906,
    1906,  1906,  1906,  1907,  1907,  1907,  1907,  1907,  1907,  1907,
    1907,  1907,  1907,  1908,  1908,  1908,  1909,  1909,  1909,  1910,
    1910,  1910,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,  1912,
    1912,  1912,  1914,  1913,  1915,  1916,  1913,  1918,  1917,  1919,
    1917,  1920,  1917,  1921,  1921,  1923,  1922,  1924,  1922,  1925,
    1922,  1927,  1926,  1926,  1928,  1928,  1930,  1929,  1931,  1929,
    1933,  1932,  1932,  1934,  1934,  1934,  1935,  1935,  1935,  1935,
    1936,  1936,  1936,  1936,  1937,  1937,  1937,  1938,  1938,  1938,
    1938,  1938,  1938,  1938,  1938,  1938,  1938,  1938,  1938,  1938,
    1938,  1938,  1939,  1939,  1939,  1939,  1940,  1941,  1942,  1942,
    1943,  1943,  1943,  1943,  1944,  1944,  1945,  1945,  1945,  1946,
    1946,  1946,  1946,  1946,  1948,  1947,  1949,  1949,  1949,  1950,
    1950,  1951,  1951,  1952,  1953,  1953,  1953,  1953,  1953,  1955,
    1954,  1957,  1956,  1958,  1958,  1959,  1958,  1960,  1960,  1961,
    1961,  1962,  1962,  1962,  1962,  1963,  1962,  1964,  1964,  1964,
    1964,  1964,  1965,  1966,  1966,  1966,  1966,  1966,  1966,  1966,
    1966,  1967,  1967,  1968,  1969,  1969,  1969,  1969,  1969,  1969,
    1969,  1970,  1970,  1971,  1971,  1972,  1972,  1973,  1974,  1974,
    1975,  1975,  1976,  1976,  1977,  1977,  1978,  1978,  1980,  1979,
    1981,  1979,  1982,  1979,  1983,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1984,  1984,  1985,  1985,  1986,  1986,  1986,
    1987,  1987,  1987,  1987,  1988,  1988,  1989,  1989,  1990,  1990,
    1991,  1991,  1992,  1992,  1993,  1993,  1993,  1993,  1994,  1994,
    1995,  1996,  1996,  1996,  1997,  1997,  1998,  1998,  1999,  2000,
    2000,  2000,  2000,  2000,  2001,  2001,  2001,  2001,  2001,  2002,
    2002,  2003,  2003,  2004,  2004,  2005,  2005,  2006,  2006,  2007,
    2007,  2009,  2008,  2010,  2011,  2011,  2012,  2012,  2013,  2013,
    2013,  2014,  2014,  2014,  2015,  2016,  2016,  2016,  2017,  2018,
    2019,  2019,  2019,  2020,  2020,  2020,  2021,  2021,  2021,  2021,
    2021,  2021,  2021,  2021,  2021,  2022,  2022,  2023,  2024,  2025,
    2025,  2025,  2026,  2026,  2027,  2027,  2028,  2028,  2029,  2029,
    2031,  2030,  2032,  2032,  2032,  2032,  2033,  2033,  2034,  2034,
    2036,  2037,  2038,  2039,  2040,  2035,  2042,  2041,  2044,  2043,
    2046,  2047,  2045,  2048,  2048,  2049,  2049,  2050,  2050,  2050,
    2050,  2050,  2050,  2051,  2051,  2052,  2052,  2052,  2053,  2053,
    2053,  2054,  2054,  2054,  2055,  2055,  2056,  2057,  2056,  2058,
    2058,  2059,  2059,  2060,  2060,  2061
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     1,     0,     0,     8,     0,     8,     0,     0,
      16,     0,     0,    15,     0,     0,    15,     0,     6,     0,
      10,     0,    11,     0,     5,     0,     6,     0,     5,     0,
      11,     0,    14,     0,    11,     0,    14,    10,     9,     6,
       4,     3,     0,     3,     0,    13,     0,     0,     0,    16,
       1,     3,     1,     1,     2,     1,     2,     1,     2,     0,
       0,     8,     0,     6,     4,     4,     1,     0,     5,     0,
       5,     2,     0,     1,     1,     2,     3,     3,     0,     1,
       1,     2,     3,     2,     1,     3,     2,     1,     3,     3,
       3,     1,     1,     1,     1,     3,     0,    12,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     0,    12,     0,
       6,     2,     0,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     4,     0,     2,     0,     2,     0,     0,     1,
       3,     1,     0,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     2,     1,     1,     2,     0,
       1,     0,     2,     1,     2,     3,     3,     0,     4,     0,
       3,     0,     1,     3,     1,     0,     0,     2,     3,     1,
       1,     2,     6,     8,     4,     6,     3,     0,     1,     3,
       1,     3,     7,     9,     5,     7,     4,     0,     1,     1,
       1,     2,     0,     4,     0,     1,     3,     1,     1,     0,
       3,     2,     3,     0,     2,     0,     1,     0,     3,     1,
       2,     3,     2,     3,     0,     1,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     5,     4,     1,
       4,     2,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     2,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     0,
       3,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     0,     3,     0,     3,     1,
       3,     0,     3,     3,     3,     4,     5,     2,     4,     2,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     0,
       6,     0,     0,     4,     1,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     1,     1,
       0,     6,     0,     0,     9,     0,     2,     0,     5,     0,
       0,     7,     0,     0,     0,     0,     7,     0,     4,     0,
       2,     1,     2,     0,     5,     0,     1,     2,     5,     3,
       5,     3,     0,     6,     0,     6,     1,     0,     5,     0,
       5,     0,     0,     0,    11,     0,     5,     0,     3,     0,
       3,     0,     0,     8,     0,     3,     1,     1,     1,     1,
       1,     2,     4,     5,     0,     4,     4,     4,     3,     3,
       2,     2,     0,     2,     1,     2,     3,     1,     1,     1,
       1,     1,     2,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     4,     0,     1,     1,     1,
       1,     1,     0,     5,     3,     1,     2,     4,     0,     4,
       1,     4,     1,     0,     1,     0,     4,     0,     0,     3,
       0,     6,     6,     0,     4,     2,     2,     0,     3,     2,
       0,     3,     0,     1,     0,     3,     0,     1,     1,     3,
       1,     4,     3,     3,     0,     2,     0,     0,     7,     0,
      10,     1,     3,     1,     1,     0,     2,     0,     3,     1,
       3,     0,     6,     1,     0,     0,     4,     0,     3,     1,
       1,     1,     1,     1,     1,     3,     1,     3,     0,     0,
       5,     1,     3,     1,     1,     0,     3,     1,     3,     0,
       4,     1,     0,     1,     2,     1,     3,     4,     3,     3,
       3,     3,     4,     4,     3,     0,     4,     2,     0,     2,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     3,
       0,     3,     1,     3,     0,     1,     1,     2,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     6,     1,     1,     3,     4,     4,     2,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     1,
       0,     1,     2,     4,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     3,     1,     1,     1,     1,     2,
       1,     2,     0,     9,     0,    10,     0,     9,     0,     9,
       0,    10,     0,    11,     0,    10,     2,     7,     7,     0,
       1,     4,     0,     1,     0,     1,     2,     0,     4,     0,
       3,     0,     3,     0,     1,     2,     1,     0,     1,     2,
       1,     0,     1,     2,     3,     0,     6,     5,     5,     0,
       2,     0,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     2,     1,     0,     3,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     3,     2,     1,
       1,     3,     3,     3,     3,     0,     1,     2,     2,     3,
       3,     2,     3,     3,     4,     3,     3,     3,     3,     2,
       3,     3,     3,     2,     2,     3,     1,     2,     2,     2,
       2,     3,     3,     2,     3,     2,     2,     3,     3,     2,
       3,     2,     2,     2,     2,     2,     5,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     2,     0,     3,     0,     1,     1,     5,
       0,     1,     1,     1,     2,     2,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     1,     0,     1,     0,     1,
       2,     1,     1,     2,     4,     1,     3,     2,     1,     0,
       2,     0,     1,     2,     2,     2,     2,     2,     1,     1,
       3,     3,     3,     3,     2,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     0,     1,     2,     1,
       1,     0,     1,     1,     2,     1,     2,     0,     1,     0,
       4,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       1,     3,     3,     1,     1,     0,     2,     0,     1,     5,
       0,     3,     3,     1,     0,     2,     2,     2,     0,     3,
       3,     6,     6,     1,     1,     2,     2,     2,     2,     2,
       1,     1,     0,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     1,     0,     1,     0,     1,     1,     2,     1,
       2,     1,     2,     0,     2,     0,     2,     2,     2,     2,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     1,     1,     1,     4,     2,     1,     4,     0,     1,
       1,     3,     0,     0,     8,     0,     5,     7,     0,     5,
       0,     5,     0,    10,     0,     9,     0,    11,     3,     4,
       3,     3,     0,     8,     9,     0,     0,     7,     0,     2,
       2,     0,     2,     3,     3,     5,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     0,     2,     2,     2,
       2,     1,     1,     1,     4,     4,     0,     6,     4,     0,
       5,     0,     6,     4,     3,     1,     7,     2,     1,     1,
       0,     6,     0,     3,     2,     0,     5,     0,     0,     6,
       1,     3,     1,     1,     3,     3,     3,     2,     2,     4,
       4,     2,     7,     6,     5,     5,     4,     5,     4,     4,
       2,     2,     7,     6,     3,     5,     1,     1,     1,     1,
       1,     3,     3,     3,     5,     0,     1,     1,     2,     2,
       3,     3,     3,     3,     0,     1,     0,     1,     0,     2,
       0,     1,     2,     1,     1,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     0,     6,     0,     5,
       4,     4,     3,     0,     1,     1,     3,     3,     2,     2,
       0,     2,     1,     3,     0,     1,     1,     0,     2,     4,
       1,     3,     0,     5,     0,     1,     1,     3,     0,     4,
       0,     4,     0,     1,     1,     2,     1,     1,     1,     0,
       2,     0,     5,     1,     3,     2,     0,     3,     1,     4,
       1,     0,     4,     1,     0,     4,     0,     1,     3,     0,
       1,     3,     1,     1,     2,     6,     3,     0,     4,     0,
       3,     0,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     0,     2,     0,     6,     0,     1,     1,     0,     4,
       4,     3,     5,     1,     3,     4,     0,     6,     1,     1,
       1,     3,     2,     3,     1,     1,     0,     6,     1,     1,
       1,     3,     3,     4,     0,     6,     0,     2,     0,     4,
       0,     2,     0,     3,     0,     4,     0,     3,     0,     4,
       1,     1,     0,     3,     0,     0,     5,     6,     7,     1,
       2,     1,     1,     0,     3,     0,     3,     3,     3,     1,
       0,     4,     3,     1,     1,     1,     1,     1,     4,     0,
       1,     2,     1,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     9,     0,     1,     0,     2,     3,     1,     4,
       4,     2,     1,     1,     1,     1,     3,     5,     0,     1,
       0,     2,     1,     3,     1,     1,     3,     4,     0,     0,
       0,     0,     0,     2,     2,     1,     1,     0,     2,     3,
       0,     2,     3,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     3,
       6,     1,     3,     4,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     3,     5,     5,     5,     6,     6,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     2,     1,     1,
       1,     2,     1,     2,     2,     0,     3,     1,     4,     1,
       3,     1,     1,     1,     1,     3,     1,     4,     4,     4,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     6,     4,     4,     7,     6,
       3,     4,     6,     6,     4,     4,     4,     4,     4,     4,
       6,     8,    10,     1,     1,     3,     1,     1,     3,     1,
       2,     2,     2,     2,     2,     1,     3,     4,     6,     4,
       6,     2,     2,     4,     4,     4,    10,     6,     8,     6,
       4,     4,     6,     4,     3,     4,     1,     4,     3,     4,
       6,     8,     2,     2,     8,     8,     6,     8,     6,     6,
       6,     6,     2,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     4,     2,     2,     2,     6,     6,     4,
       4,     8,     4,     4,     4,     4,     3,     8,     6,     8,
       4,     6,     4,     6,     4,     4,     4,     6,     8,     4,
       3,     6,     4,     6,     5,     8,     7,    10,     1,     6,
       4,     4,     4,     4,     4,     6,     4,     6,     0,     5,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     4,     4,     5,     4,     4,     4,     5,     4,     0,
       0,     7,     4,     5,     4,     5,     4,     4,     4,     4,
       4,     5,     0,     9,     3,     3,     1,     1,     1,     3,
       3,     3,     3,     3,     4,     4,     4,     6,     4,     6,
       4,     6,     5,     0,     7,     4,     4,     4,     4,     1,
       0,     3,     3,     1,     3,     5,     0,     1,     0,     2,
       0,     3,     4,     2,     0,     1,     1,     2,     1,     3,
       3,     0,     3,     2,     0,     4,     0,     4,     0,     4,
       2,     1,     1,     1,     1,     2,     1,     2,     2,     1,
       2,     1,     2,     2,     3,     0,     1,     1,     3,     1,
       3,     1,     3,     4,     5,     1,     3,     3,     3,     1,
       1,     1,     1,     4,     1,     3,     3,     0,     6,     0,
       8,     4,     0,     8,     0,    10,     6,     0,     8,     0,
      10,     6,     1,     2,     1,     1,     2,     0,     1,     5,
       1,     1,     1,     1,     1,     3,     1,     3,     3,     3,
       3,     3,     3,     3,     5,     3,     0,     1,     0,     2,
       3,     3,     1,     1,     0,     7,     0,     7,     1,     2,
       0,     0,     2,     0,     2,     0,     1,     1,     1,     1,
       3,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     1,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     2,     0,     0,     4,     4,     2,     0,     1,
       1,     0,     2,     3,     1,     3,     0,     7,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     4,
       2,     2,     2,     1,     2,     2,     0,     3,     2,     2,
       3,     3,     3,     3,     1,     2,     0,     1,     0,     4,
       4,     2,     0,     1,     1,     0,     1,     2,     5,     4,
       1,     1,     3,     3,     1,     3,     1,     1,     1,     1,
       1,     0,     2,     3,     4,     1,     2,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     1,     0,     1,     2,
       2,     2,     1,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     2,     1,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     6,     0,     1,     3,     1,
       3,     0,     2,     3,     1,     1,     2,     1,     3,     2,
       0,     0,     7,     2,     1,     0,     3,     0,     8,     0,
       8,     4,     4,     5,     6,     4,     4,     5,     5,     0,
       6,     4,     4,     5,     6,     4,     0,     6,     1,     3,
       1,     2,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     0,     0,     8,     0,     0,     6,     0,     1,     1,
       1,     1,     1,     2,     1,     0,     2,     1,     2,     0,
       3,     3,     0,     1,     3,     1,     1,     3,     1,     3,
       1,     3,     1,     1,     0,     1,     1,     1,     1,     1,
       0,     4,     0,     4,     0,     1,     0,     1,     3,     1,
       5,     3,     1,     1,     1,     0,     0,     0,     7,     5,
       1,     0,     0,    11,     3,     1,     3,     3,     1,     3,
       0,     1,     0,     3,     0,     3,     2,     3,     3,     2,
       5,     0,     5,     0,     6,     0,     2,     1,     3,     2,
       4,     0,     2,     0,     2,     1,     1,     1,     0,     0,
       7,     0,     2,     2,     0,     1,     0,     1,     1,     3,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     0,
       3,     0,     3,     2,     4,     4,     3,     4,     4,     1,
       3,     3,     3,     3,     6,     2,     2,     0,     6,     0,
       7,     5,     2,     1,     1,     1,     5,     5,     2,     2,
       1,     4,     3,     2,     3,     2,     2,     1,     4,     4,
       3,     3,     3,     2,     3,     2,     3,     3,     3,     3,
       4,     3,     2,     3,     3,     3,     3,     4,     3,     3,
       4,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     1,     1,     0,     2,     0,
       2,     0,     3,     3,     0,     4,     0,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     2,     1,
       1,     0,     3,     0,     1,     1,     0,     4,     0,     4,
       1,     0,     1,     4,     0,     3,     3,     1,     2,     2,
       2,     2,     3,     3,     2,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     2,     0,     1,     2,     2,     0,
       3,     1,     0,     5,     0,     1,     3,     1,     0,     3,
       0,     3,     3,     1,     0,     4,     0,     3,     2,     0,
       1,     0,     2,     5,     0,     6,     0,     5,     0,     1,
       1,     0,     1,     1,     2,     1,     2,     0,     3,     0,
       4,     2,     0,     0,     0,     0,    22,     1,     1,     0,
       1,     0,     1,     1,     0,     1,     1,     0,     2,     2,
       1,     3,     4,     3,     3,     0,     2,     2,     1,     3,
       3,     0,     4,     0,     3,     1,     1,     0,     3,     2,
       3,     1,     1,     2,     0,     2,     3,     1,     5,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     2,
       2,     0,     4,     0,     1,     1,     3,     0,     7,     0,
       3,     1,     3,     1,     1,     1,     3,     5,     3,     5,
       1,     1,     3,     4,     5,     4,     1,     3,     4,     4,
       5,     1,     5,     3,     2,     1,     3,     2,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     0,     0,     7,     0,     4,     0,
       6,     0,     7,     1,     3,     0,     3,     0,     3,     0,
       3,     0,     3,     2,     0,     2,     0,     2,     0,     4,
       0,     3,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     3,     5,     5,     3,     5,     5,
       4,     6,     8,     8,     2,     3,     3,     3,     5,     2,
       3,     3,     1,     1,     3,     3,     1,     3,     2,     2,
       2,     2,     2,     1,     1,     3,     1,     4,     4,     1,
       1,     1,     1,     1,     0,     5,     0,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     2,     2,     2,     0,
       3,     0,     3,     3,     2,     0,     6,     1,     2,     1,
       1,     1,     1,     1,     1,     0,     5,     1,     1,     1,
       1,     1,     3,     6,     6,     6,     6,     7,     7,     5,
       3,     4,     1,     3,     8,     8,     8,     8,     9,     6,
       4,     0,     3,     0,     3,     1,     3,     2,     1,     1,
       0,     1,     1,     2,     0,     1,     1,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     2,     2,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     1,     3,
       1,     1,     1,     1,     4,     5,     4,     1,     3,     1,
       2,     0,     2,     5,     0,     3,     3,     1,     1,     0,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     0,     2,     0,     2,     0,     3,     2,     1,     2,
       1,     0,     3,     1,     0,     1,     0,     1,     0,     3,
       2,     0,     1,     2,     4,     4,     5,     4,     2,     3,
       2,     1,     1,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     3,
       3,     3,     0,     1,     3,     3,     0,     3,     1,     3,
       0,     3,     0,     3,     4,     4,     1,     1,     0,     2,
       0,     0,     0,     0,     0,    19,     0,     2,     0,     4,
       0,     0,     8,     0,     1,     1,     1,     4,     4,     3,
       4,     3,     3,     0,     3,     1,     3,     5,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     0,     3,     0,
       2,     6,     3,     4,     4,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 1736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 1844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 24854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 1856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 24860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 1858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 24870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 1867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 24879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 1872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 24885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 1874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= NULL; }
#line 24891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 1876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 24900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 1883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 24906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 1885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 24912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 1887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 24921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 1895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 24930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 1900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 24939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 1911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 24948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 1916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 24958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 1927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 24966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 1931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 1941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 24980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 1945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 24988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 1949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 24996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 1953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 25004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 1957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 25012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 1961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 25026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 1971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 1976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 25043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 1980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 25051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 1984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 25059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 1988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 25067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 1992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 25075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 1996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 25092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2005 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 25100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 25140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 25188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 25207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 25215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 25225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 25235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 25245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 25255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 25264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 25276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 25292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                  TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 25313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 25323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
               add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                 TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 25357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 25386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-7].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
            Lex->pop_select(); //main select
          }
#line 25494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 25506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 25525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 25543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 25568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 25578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 25668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-8].object_ddl_options) | (yyvsp[-6].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 25696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 25704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 25710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
          }
#line 25731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 25756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 25765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 25775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 25794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 25800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 25829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function,
                                                        NOT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 25848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-7].lex);
            (yyval.lex)= (yyvsp[-6].lex);
          }
#line 25859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure,
                                                        DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 25877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);

          }
#line 25889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 25919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2712 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 26066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 26078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 26142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 26159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 26169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 26175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 26184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 26193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 26202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 26211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 26220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2878 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 26229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 26237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 2937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 26313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 2996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 26382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 26419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 26429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 26443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 26449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 26455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= NULL; }
#line 26479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= (yyvsp[0].spname); }
#line 26485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3086 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 26521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 26527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 26533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 26539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 26545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.init(); }
#line 26587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 26599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 26605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 26611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 26620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 26651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 26659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 26685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar))))
              MYSQL_YYABORT;
          }
#line 26740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 26808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 26845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 26874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 26882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 26888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 26897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 26905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3381 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 26939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 26987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 26996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 27002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 27010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 27022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 27052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 27085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 27108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 27139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 27151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 3563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 3564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 3578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 27203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 3593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 27266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3668 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 27324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 27333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!cond->has_sql_state()))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 27352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 27378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 27444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 27450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 27456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 3781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 27462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 27468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 3785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 27474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 3787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 27480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 3789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 27486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 3791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 27492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 3793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 27498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 3795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 27504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 3797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 27510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 3802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 27519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 3810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 27535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 3825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 3827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 3832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 3838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 3847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 3854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 27588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 3863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 3872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 27607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 3877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 27617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 3886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 3888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 3890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 27635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 3899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 3904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 3911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 27662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 3920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 3929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 27678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 3931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 27684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 3933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 27690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 3935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 27696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 3937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 27702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 3939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 27708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 3941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 27714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 3943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 27720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 3945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 27726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 3947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 27732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 3949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 27738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 3951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 27744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 3953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 27750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 3959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 27759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 3967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 27775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 3979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 27791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 3993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 27797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 3994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 3995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 27831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 27837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // Direct procedure call (without the CALL keyword)
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 27868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 27909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_exit_statement(thd, (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_continue_statement(thd, (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex)= thd->lex;
          }
#line 28032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 28052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 28075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 28089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4243 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 28114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 28120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 28129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 28171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 4339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 4341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 4357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 28268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 4369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 28278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 4384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 28332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 4437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 28350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 4453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 28356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 4455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;

            if (Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 4463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 4465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 4480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 28388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 4484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 4496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 4504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 28420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 4508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 4518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 4526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 4540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 28463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 4541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 28469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 4546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 28479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 28506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 28546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 4610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 28556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 4616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 28575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 4631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 28581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 28589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 4645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 28608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 4656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 28617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 28627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 28639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 28651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 4687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 28681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 4701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 28690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 28698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 28709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 28719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 4752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 28755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 4760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 4762 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 28780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 4780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 4788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 4793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 4795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 4801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 4803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 4808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 4817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 4822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 28858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 4827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 4832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 4837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 4842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 4846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 4852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 4856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 4863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 4872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 4880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 4885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 4892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 28965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 4894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 28971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 4899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 28977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 4901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 28983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 4903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 28989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 4937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 4939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 29004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 4949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 29012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 4955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 4978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 29090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 29099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 29108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 29117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 29126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 29135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 29144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 29173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 29184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 29196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 29205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 29216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5238 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 29231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 29237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 29264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 29270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 29276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 5280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 29291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 5285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 29303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 29317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 5332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 5338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 29338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 5353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 29354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 5368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 5383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 29381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 5390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 29387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 5396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 29398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 29404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 5406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 5408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 5410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 29430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 5414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 29439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 29445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 29454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 5429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 29466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 29472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 5438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 29490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 29529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 29539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 5489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 29551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 5500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 29560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 5508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 5510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 5522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 5524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 29592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 5525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 5528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 29608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 5533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 5537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 5538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 5543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 29641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 5557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 29654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 5568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 5570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 29673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 5582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 29687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 5592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 5613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 5614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 5619 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 5638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 5643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 29760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 5654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 29780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 5670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 29797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 5682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 5684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 29820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 5696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 5698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 29835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 5703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 29844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 5708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 29865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 5728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 5745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 5750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 29924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 5777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 5788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 5789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 5794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 29963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 5803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 5805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 29994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 5828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 5829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 5834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 5845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 30039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 5863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 5877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 5902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 5903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 5908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 30133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 5940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 5945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 30149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 5953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 5954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 5958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 5959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 5964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 30179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 5966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 30189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 5972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 30199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 5978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 30205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 5980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 5982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 5984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 30223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 5986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 30229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 5988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 30235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 5992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 5994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 30251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 30274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 30288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 30344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 30352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 30368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 30384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 30403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 30412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 30421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 30430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 30439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 30448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 30457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 30601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 30610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 30619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 30627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 30653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 30662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 30671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 30680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 30686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 30692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 30698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 30708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 30717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 30726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 30762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 30781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 30801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 30810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 30826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 30837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 30891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 30967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 30973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 6497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 6502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 6509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 6516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 31083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 31113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 31121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 31130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 31139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 31145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 31151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 6618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 31186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 31212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 31235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 31241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 6667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 31251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 6676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 6686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 6691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 6696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 6701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 31302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 6707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 31311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6712 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 31320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 6719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 6725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 6729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 6733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 6743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 6754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 31408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 31416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6774 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 31443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 6797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 6807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 6831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 31489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 31497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 31506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 6868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 31512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 6869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 31518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 6871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 31538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 6887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 31546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 6891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 6895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 6899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 6901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 31579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 6908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 6910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 6923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 31599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 6927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 6932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 31617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 6937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 6941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 6945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 6950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 6955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 6964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 6968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 6973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 6978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 6982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 6986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 6991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 6996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7005 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 31751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 31757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 31768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 31779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 31787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 31796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 31838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 31877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 31883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_json_longtext);
          }
#line 31916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 31922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 31928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 31934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 31940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 31946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 31952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 31958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 31964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 31970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 31976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 32042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 32048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 32054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 32060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 32066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 32076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 32094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 32102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 32108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 32114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 32126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 32144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 32192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 32204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("4000", "4000"); }
#line 32216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 32222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("2000", "2000"); }
#line 32228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 32234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 32240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 32258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 32264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 32275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 32281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 32302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 32308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 32314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7319 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 32362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 32408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 32432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 32442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 32452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));

          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));
            
          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 32527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 32571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 32619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 32628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 32634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 32646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 32652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 32658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 32664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 32670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7506 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 32676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 32688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 32706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 32712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 32730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 32736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 32745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 32753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 32765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 32776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 7588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 32808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 32814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 7601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 7608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 7620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 32844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 7622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 32850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 7624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 32856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 7626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 32862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 7631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 7637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 7643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 7650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 7657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 7665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 7666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 7667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 7668 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 7669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 32942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 7673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 32948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 7674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 7678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 7679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 7683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 7688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 7689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 7690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 7694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 32996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 7695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 7699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 33008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 7704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 7715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 7716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 7720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 7721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 7725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 7726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 7745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 7746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 7751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 7752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 7753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 7758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 7760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 7765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 33108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 7770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 33114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 7772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 7780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 7788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 33148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 7794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 7813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 7822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 7823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 7824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 7829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 7833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 7840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 7846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 7857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 7858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 33238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 7863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 7865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 7874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 33270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 7890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                    TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 33285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 7901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 33300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 7912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 33311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 7919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 33325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 7929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 33337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 7937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 7947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 7957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 7967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 7977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 7984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 7995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 33458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 8031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 33478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 8047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 33487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 8052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 33496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 8057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 33505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 8062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 33514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 8067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 33524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-6].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 33539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 8080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 33555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 33597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 33605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 8125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 8127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 33619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 8131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 33627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 8135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 33635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 8139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 33645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 33688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 33706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 33740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 33750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 8236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 33780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 8271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 33820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-1].table)))
              MYSQL_YYABORT;
          }
#line 33843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 33851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 33859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 8314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 8332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 33890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 33898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 33919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8361 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 33927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 33936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 33958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 33986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 33996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 34015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 34060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 8465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 8476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 34089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 34147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 34157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 34175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_CONVERT_TO;
          }
#line 34193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 34210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 34219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 34228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 34237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 8584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 34245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 8607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 34266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 8625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8632 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 8633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 8637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 8638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 8642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 8656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 8658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 34338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 8665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 34344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 8666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 34350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 8667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 34356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 8671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 8673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 8678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 8686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 8687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 8688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 8689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 8694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 34416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 8701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 34433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 8711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 8718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 8728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 8744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 8755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 8759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 8766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 8770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 8774 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 8780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 34540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 8782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 8791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 34558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 8793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 34564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 8797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 8799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 34583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 8808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 34591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 8820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 8827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 8831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 34614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 8832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 34620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 8833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 34626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 8839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 8845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 8855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 8865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 8866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 8870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 8871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 8875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 8876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 8877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 34700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 8881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 8882 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 34712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 8887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 8897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 8917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 8919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 34752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 8926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 8928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 8932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 8934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 34781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 8942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 8946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 8948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 34804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 8956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 8961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 8963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 8968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 8976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 8983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 34850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 8990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 34861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 9000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 34872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 34882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 9018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 9045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 9046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 9050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 9051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 9055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 9056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 34952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 9057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 34958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 9058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 9059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 34970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 9060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 9064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 9065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 9070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 9080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 9090 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 9092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 9097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 9103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 9107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 9114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 35102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 35112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 35148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 9224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 9235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 35200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 9253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Lex->first_select_lex()->set_index_hint_type(INDEX_HINT_USE,
                                                         INDEX_HINT_MASK_ALL);
          }
#line 35210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 9262 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 9268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 35228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 9278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 9285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 9292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 9311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 9316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
           }
#line 35296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 9327 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 9332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 35321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 35342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 35351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) ||
                  lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 35365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= SELECT_LIST;
          }
#line 35373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 35381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 35440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9506 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 35451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 35460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 35469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 35475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 35486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 35496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 35507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct,
                                                                TRUE)))
              MYSQL_YYABORT;
          }
#line 35519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 35531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 35543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 35549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              YYABORT;
          }
#line 35582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9668 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 35592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 9683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 35602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 9692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 35610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 9696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 35618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 9700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 35626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 9707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= type_handler_datetime2.create_literal_item(thd,
                                                      (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                      YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 35639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 9716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 35647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 9720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 35655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 9728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 35671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 9743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 35679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 9747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 35687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 9754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 35695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 9758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 35703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 9765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 35711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 9769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 35719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 9773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 9777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 9790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 35748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 9799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 35761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 9812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 35771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 9818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 35781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 9827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 35789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 9831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 35797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 9838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 35805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 9842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 35814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 9847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 35823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 9857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 35838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 9871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 35847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 9876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 35870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 9897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 35878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 9903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 35886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 9909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 9915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 9924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 35911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 9925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 9926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 9927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 9928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 9932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 9933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 9934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 9938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 9939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 9940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 9944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 9945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 9951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 10176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 10182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 10190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 10200 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                   Lex->escape_used);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 10207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                             Lex->escape_used);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 10234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 10240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 10246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10296 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 36604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 36634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 36640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 36646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 36664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 36670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 36676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 36682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 36688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 36696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 36705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 36729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 36740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 36749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 36755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 36761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 36767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 36773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 36782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 36794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 36800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 36812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 36818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 36836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 36848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 36860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 36890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 36904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 10594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 10600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 36966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 10611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 10618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 36986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 10623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 36995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 10628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 10633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 10638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 10643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 10648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 37046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 10659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 37055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 10668 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 10677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 10683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 10687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 10693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 10699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 10709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 10718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 10725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 10739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 10745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 10751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 10760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 10769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 10775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 10781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 10787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 10793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 10808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 10819 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 10825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 10831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 10837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 10843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 10849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 10857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 10864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 10868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 37353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 10873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 37365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 10881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 10902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 10909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 10915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 10922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 10929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 10935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 10941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 10947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 10953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 10959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 10965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 10971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 10977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 10984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 10990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 10997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11013 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 37627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 37863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11304 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11319 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 11339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 11346 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 11353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 11360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 11456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 11464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 38199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 38217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 38223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 38283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 38368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 38506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 11828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 11846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 38726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 11848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 38734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 11852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 11869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 11875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 11884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 38781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 11893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 38791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 11902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 38800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 11907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 11914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 38822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 11924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 38834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 11932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 11937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 11944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 11945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 11950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 38874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 11955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 11965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 11970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 11977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 11978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 11982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 11987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 38924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 11994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 38935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 38946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 38957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 38979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 38985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 38991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 38997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, 0, (yyvsp[0].const_simple_string));
          }
#line 39116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 39137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 39335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 39357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 39383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 39416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 39464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12342 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 39478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12361 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 39502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 39514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 39524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 39545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 12395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 12396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 12400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 12401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 12405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 39590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 39602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 12423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 39611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 12430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 39648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 39657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 39677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12488 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 39715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 39723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 39729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 39735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 39741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 39753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 39759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 39774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 12562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 12580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 12581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 12583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 12584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 12585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 39921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 39927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 39945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 39951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 39967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 39975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 12639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 39995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 12643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 12654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 40016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 12659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string_ascii(thd, "", 0) :
                 new (thd->mem_root) Item_string_ascii(thd, "\\", 1));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 12680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 12685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 12692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 12694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 12736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 12746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 12758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 40124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12762 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 12768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 12776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 12781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 12782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->order_list= *((yyvsp[0].select_order)); }
#line 40164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 12786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 12788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 12801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 40191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 12802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 40197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 12807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 40211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 12817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 40221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 12826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 12833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 12840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 12849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 40260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 12851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 12858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 12867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 12869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 40294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 12871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 40300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 12873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 40306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 12875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 12877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 12895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 40328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 12908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= NULL; }
#line 40334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 12910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= (yyvsp[0].select_order); }
#line 40340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 12915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->where= "ORDER clause";
          }
#line 40348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 12919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 40356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 12926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 12932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 12940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 40382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 12941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 40388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 12942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 40394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 12947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit).empty(); }
#line 40400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 12949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 40406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 12954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 12962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 12967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 12977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->explicit_limit= (yyvsp[0].select_limit).explicit_limit;
            Select->select_limit= (yyvsp[0].select_limit).select_limit;
            Select->offset_limit= (yyvsp[0].select_limit).offset_limit;
          }
#line 40447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 12986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 12992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 12998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 40503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 40542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 40551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 40562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 40583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 40592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.empty();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 40605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 40614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 40620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock).empty();
          }
#line 40628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 40636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                "<select expression> INTO <destination>;",
                                "'SELECT <select list> INTO <destination>"
                                " FROM...'");
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 40650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 40662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_order_limit_lock *op= (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            op->order_list= NULL;
            op->limit= (yyvsp[0].select_limit);
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 40676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 13153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 13159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 13160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13170 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13194 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 40850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 40856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 40862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 40868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 40902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 40911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 13251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 13252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 13262 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 40934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 13271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 40946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 40979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 40987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 41071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
          }
#line 41080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 41106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 41128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 13496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 13503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 13509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 41272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 13514 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 41281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 41290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 41335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 41358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 41367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 41375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 41383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 41395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13629 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 13654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 13659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 41476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 41499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 41535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 41546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 41571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 13733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 41579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 13745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 13767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 13786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 13787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 13791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 13792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 13797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 13802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 13817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 13826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 13831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 13837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 13842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13850 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 41738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 13868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 41756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 13870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 13876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 13885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 41782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 13887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 41790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 13891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 41798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 13899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 41815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 13911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 41821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 13918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 41834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 13928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 41857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 13947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 41869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 13963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 41879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 13977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 13986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 13987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 13994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 41918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 41926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 41934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
            Lex->pop_select(); //main select
          }
#line 41949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].num))
            Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 41974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            Lex->pop_select(); //main select
          }
#line 41984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 42096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 14195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 42221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14238 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 42253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 42276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 42288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 42300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 42312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 42324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14327 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 42362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 42368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14346 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14354 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 42428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 42439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 42448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 42457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 42466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 42490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 42496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 42502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14413 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 42513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 42525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 42531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 42543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 42554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 42565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14452 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 42577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 42587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 42596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 42608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 42620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 42632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 42640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 42649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 42660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 42669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 42701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 42711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 42721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 42733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 42742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 42822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 42833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 42856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 42862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 42868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 42874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 42886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 42892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 42898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 42910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 42916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 42922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 42928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 42977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 42983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 42992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 43000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 43006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 43012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 14773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 43056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 14775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 14789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 14795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 14800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 14810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 14812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 14849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 14854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 14860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 14872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 14874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 14878 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 14893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 43258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SSL;}
#line 43276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 43328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 14939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 43337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 14944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 43349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 14952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 43358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 14959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 14961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 14971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 43387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 14986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 43393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 14987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 43399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 14992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 14997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 43435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 43441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 43467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 43475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 43481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 43491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 43503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 43511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 43547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 43556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 43564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 43573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 43579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->is_shutdown_wait_for_slaves= false; }
#line 43591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 43599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 43609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 43627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 43642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 43659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 43665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 43676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 43688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 43694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 43700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 43706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 43718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 43724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 43730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 43736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 43742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 43751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 43762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 43771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 43780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 15247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 43789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 15252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 43798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 15259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 15261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 43810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 15267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 43819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 15280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 15281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 15286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 15292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 43867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 15313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 43901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 43928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 43937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 43949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 43955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 15362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 15370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 15378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 44006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 15400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 44016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 15415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 15417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 15424 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 15425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 15426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 44060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 15428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 15442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 15448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 15454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 15460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 15466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 15472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 15491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 15501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 15511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 15517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 15524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 15534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 15541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 15548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_datetime2.create_literal_item(thd,
                                                             (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                             YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 15558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 44258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 15572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 15580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 15581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 44279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 15594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 15601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-2].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].lex_str_ptr), *(yyvsp[-5].lex_str_list), (yyvsp[-1].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[0].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
	  }
#line 44307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 15618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 15620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 15626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 15631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 15640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 44347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 15654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 15655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 15660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 15665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 15673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 15678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 15685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 15691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 15696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 15701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 15707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 15712 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 15720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 15725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 44600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 44609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15882 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 44672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 44705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 44711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 44721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 44754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 44787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 44798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 44808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 16618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 16628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 44832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->set_stmt_init();
          }
#line 44842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 44857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 16656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            if(sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 16664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 16670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 16678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            if (unlikely(lex->set_variable(&(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 44909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 16686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 16699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 16720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 16726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 44954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 16730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 16735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 16745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 16751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 16765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 16770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 16775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 45016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 16780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 16789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 16797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 16798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 16799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 16803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 16804 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 16805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 16806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 16810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 16811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 16812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 16813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 16819 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 16824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 16829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 16838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 16843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 16848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 16853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 16858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 16863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 16868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 16873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 16887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 16898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 16917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 16935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 16947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 16955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 16960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3246:
#line 16983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 17002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 17019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 17020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 17024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 17025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 17026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 17027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 17032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->auth= new (thd->mem_root) USER_AUTH();
          }
#line 45413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 17045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 45419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 17050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 45428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 17055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 45437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 17060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->auth->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->auth->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 45449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 17070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 17071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 45461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 17073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 17079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 17085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 17096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 17104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 17109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 17111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 45525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 17117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 45535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 17125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 45541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 17126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 45547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3273:
#line 17136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 45567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 17154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 17155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 17157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 17161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 45593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 17162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 17167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 17175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 17184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 45626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 17189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 45634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 17196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 45647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 17205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 17214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 17231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              lex->current_select->select_limit= one;
              lex->current_select->offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 45706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 17254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 45712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 17255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 45718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 17259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 17260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 17264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 17265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 17266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 45748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 17267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 45754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 17269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 17277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 17281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 45778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 17282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 45784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 17283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 45790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 17284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 45796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 17285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 45802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 17292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 17297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 45818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 17303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 17309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 17316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 17323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 17329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 45866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 17333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 17340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 17349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 17351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 17356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 17362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 45915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 17369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 17376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 17383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 17390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 45984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 45990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 45996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 46002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->auth= NULL;
          }
#line 46031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->auth= NULL;

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3332:
#line 17475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3338:
#line 17495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 46075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 17496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 46087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 46099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 46111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17506 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 46123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 46135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 46141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 46147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 46153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 46159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 46165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17514 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 46171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 46177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 46183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 17518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 46195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 17519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 46201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 17520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 46207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 17521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 46213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 17522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 46219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 46225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 46231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 46237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 46243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 46249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 46255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 17530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 46267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 17531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 17532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 17547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 46302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 17554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 46313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 17561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 46324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->first_select_lex()->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->first_select_lex()->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 17590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->first_select_lex()->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 17599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->first_select_lex()->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 17630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3388:
#line 17638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3389:
#line 17643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3394:
#line 17654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 46442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 17660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 46452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 17666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 46461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 46469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 46479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 46487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 17691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 46496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 17699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 46505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 17704 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 46515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 17710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 46525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3404:
#line 17719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 46534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 17723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 46540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3408:
#line 17733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 46570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3410:
#line 17763 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 46578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 17767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 46586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 17771 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 46594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 17775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 46602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 17782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 46611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 17787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 46620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 17792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 46629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 17797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 46638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 17802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 46647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 17809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 17810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 17814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 17820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 17821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 17825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 17826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 17830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 17831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 17835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 17836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 17841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 17846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 17851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 46739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 17859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 46745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 17860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 46751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 17864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 17865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 17870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 17871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 17872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 17877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 17878 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 17879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 17884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 17896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 17905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3447:
#line 17911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3448:
#line 17920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3449:
#line 17929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3450:
#line 17942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 46871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3451:
#line 17944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 46877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3452:
#line 17946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 46883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3453:
#line 17953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3454:
#line 17954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3455:
#line 17955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 46901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3456:
#line 17959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 46907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3457:
#line 17961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 46917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3458:
#line 17966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3459:
#line 17967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3460:
#line 17968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 46935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3461:
#line 17969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 46941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3462:
#line 17970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_BUFFER_RESULT; }
#line 46947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3463:
#line 17971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_FOUND_ROWS; }
#line 46953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3464:
#line 17972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 46959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3467:
#line 17988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 46974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3468:
#line 18002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 46983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3469:
#line 18015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 46989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3470:
#line 18016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 46995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3471:
#line 18017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 47001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3472:
#line 18021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 47007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3473:
#line 18022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 47013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3474:
#line 18026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3475:
#line 18027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3476:
#line 18032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3477:
#line 18033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 47037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3478:
#line 18038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3479:
#line 18044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3480:
#line 18052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3481:
#line 18059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 47076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3482:
#line 18066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3483:
#line 18067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3484:
#line 18068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3485:
#line 18069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3486:
#line 18080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3487:
#line 18082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3488:
#line 18087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3489:
#line 18094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3490:
#line 18103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3491:
#line 18112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3492:
#line 18118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3493:
#line 18123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3494:
#line 18127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3495:
#line 18148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                    TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 47212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3496:
#line 18175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 47223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3497:
#line 18182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 47233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3498:
#line 18191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3499:
#line 18198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 47252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3500:
#line 18206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 47263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3501:
#line 18214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3502:
#line 18221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 47281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3503:
#line 18229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 47287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3504:
#line 18230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 47293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3507:
#line 18242 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 47301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3508:
#line 18246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 47309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3509:
#line 18250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 47317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3510:
#line 18254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 47325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3511:
#line 18258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 47333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3512:
#line 18262 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 47342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3513:
#line 18269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 47348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3514:
#line 18271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 47365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3515:
#line 18287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 47376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3516:
#line 18294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 47387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3517:
#line 18301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 47398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3518:
#line 18310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3519:
#line 18311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3520:
#line 18312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3521:
#line 18316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3522:
#line 18317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 47428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3523:
#line 18318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 47434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3524:
#line 18322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3525:
#line 18323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 47446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3526:
#line 18328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3527:
#line 18330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 47458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3529:
#line 18335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3530:
#line 18336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 47470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3531:
#line 18341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3532:
#line 18346 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 47487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3533:
#line 18353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 47496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3534:
#line 18358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3535:
#line 18367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 47513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;


#line 47517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
